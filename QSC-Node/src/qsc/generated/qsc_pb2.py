# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: qsc.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\tqsc.proto\x12\x03qsc\x1a\x1cgoogle/api/annotations.proto\"\x07\n\x05\x45mpty\"\x11\n\x0fGetNodeStateReq\"/\n\x10GetNodeStateResp\x12\x1b\n\x04info\x18\x01 \x01(\x0b\x32\r.qsc.NodeInfo\"\x12\n\x10GetKnownPeersReq\"U\n\x11GetKnownPeersResp\x12 \n\tnode_info\x18\x01 \x01(\x0b\x32\r.qsc.NodeInfo\x12\x1e\n\x0bknown_peers\x18\x02 \x03(\x0b\x32\t.qsc.Peer\"\x11\n\x0fGetPeersStatReq\"5\n\x10GetPeersStatResp\x12!\n\npeers_stat\x18\x01 \x03(\x0b\x32\r.qsc.PeerStat\"\x12\n\x10GetChainStatsReq\"U\n\x11GetChainStatsResp\x12\x12\n\nstate_size\x18\x01 \x01(\x04\x12\x15\n\rstate_size_mb\x18\x02 \x01(\t\x12\x15\n\rstate_size_gb\x18\x03 \x01(\t\")\n\x0bGetStatsReq\x12\x1a\n\x12include_timeseries\x18\x01 \x01(\x08\"\x84\x02\n\x0cGetStatsResp\x12 \n\tnode_info\x18\x01 \x01(\x0b\x32\r.qsc.NodeInfo\x12\r\n\x05\x65poch\x18\x02 \x01(\x04\x12\x16\n\x0euptime_network\x18\x03 \x01(\x04\x12\x19\n\x11\x62lock_last_reward\x18\x04 \x01(\x04\x12\x17\n\x0f\x62lock_time_mean\x18\x05 \x01(\x04\x12\x15\n\rblock_time_sd\x18\x06 \x01(\x04\x12\x1a\n\x12\x63oins_total_supply\x18\x07 \x01(\x04\x12\x15\n\rcoins_emitted\x18\x08 \x01(\x04\x12-\n\x10\x62lock_timeseries\x18\t \x03(\x0b\x32\x13.qsc.BlockDataPoint\"!\n\x13GetAddressFromPKReq\x12\n\n\x02pk\x18\x01 \x01(\x0c\"\'\n\x14GetAddressFromPKResp\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0c\"\xb2\x01\n\x0e\x42lockDataPoint\x12\x0e\n\x06number\x18\x01 \x01(\x04\x12\x12\n\ndifficulty\x18\x02 \x01(\t\x12\x11\n\ttimestamp\x18\x03 \x01(\x04\x12\x11\n\ttime_last\x18\x04 \x01(\x04\x12\x13\n\x0btime_movavg\x18\x05 \x01(\x04\x12\x12\n\nhash_power\x18\x06 \x01(\x02\x12\x13\n\x0bheader_hash\x18\x07 \x01(\x0c\x12\x18\n\x10header_hash_prev\x18\x08 \x01(\x0c\"g\n\x12GetAddressStateReq\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0c\x12\x1c\n\x14\x65xclude_ots_bitfield\x18\x02 \x01(\x08\x12\"\n\x1a\x65xclude_transaction_hashes\x18\x03 \x01(\x08\"7\n\x13GetAddressStateResp\x12 \n\x05state\x18\x01 \x01(\x0b\x32\x11.qsc.AddressState\"I\n\x1cGetOptimizedAddressStateResp\x12)\n\x05state\x18\x01 \x01(\x0b\x32\x1a.qsc.OptimizedAddressState\"-\n\x1aGetMultiSigAddressStateReq\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0c\"G\n\x1bGetMultiSigAddressStateResp\x12(\n\x05state\x18\x01 \x01(\x0b\x32\x19.qsc.MultiSigAddressState\"6\n\nIsSlaveReq\x12\x16\n\x0emaster_address\x18\x01 \x01(\x0c\x12\x10\n\x08slave_pk\x18\x02 \x01(\x0c\"\x1d\n\x0bIsSlaveResp\x12\x0e\n\x06result\x18\x01 \x01(\x08\"\"\n\x0fParseAddressReq\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0c\"J\n\x10ParseAddressResp\x12\x10\n\x08is_valid\x18\x01 \x01(\x08\x12$\n\x04\x64\x65sc\x18\x02 \x01(\x0b\x32\x16.qsc.AddressDescriptor\"\x1d\n\x0cGetObjectReq\x12\r\n\x05query\x18\x01 \x01(\x0c\"\xbc\x01\n\rGetObjectResp\x12\r\n\x05\x66ound\x18\x01 \x01(\x08\x12\x33\n\raddress_state\x18\x02 \x01(\x0b\x32\x1a.qsc.OptimizedAddressStateH\x00\x12/\n\x0btransaction\x18\x03 \x01(\x0b\x32\x18.qsc.TransactionExtendedH\x00\x12,\n\x0e\x62lock_extended\x18\x04 \x01(\x0b\x32\x12.qsc.BlockExtendedH\x00\x42\x08\n\x06result\"\xb7\x01\n\x10GetLatestDataReq\x12,\n\x06\x66ilter\x18\x01 \x01(\x0e\x32\x1c.qsc.GetLatestDataReq.Filter\x12\x0e\n\x06offset\x18\x02 \x01(\r\x12\x10\n\x08quantity\x18\x03 \x01(\r\"S\n\x06\x46ilter\x12\x07\n\x03\x41LL\x10\x00\x12\x10\n\x0c\x42LOCKHEADERS\x10\x01\x12\x10\n\x0cTRANSACTIONS\x10\x02\x12\x1c\n\x18TRANSACTIONS_UNCONFIRMED\x10\x03\"\xaf\x01\n\x11GetLatestDataResp\x12.\n\x0c\x62lockheaders\x18\x01 \x03(\x0b\x32\x18.qsc.BlockHeaderExtended\x12.\n\x0ctransactions\x18\x02 \x03(\x0b\x32\x18.qsc.TransactionExtended\x12:\n\x18transactions_unconfirmed\x18\x03 \x03(\x0b\x32\x18.qsc.TransactionExtended\"\x82\x01\n\x10TransferCoinsReq\x12\x13\n\x0bmaster_addr\x18\x01 \x01(\x0c\x12\x14\n\x0c\x61\x64\x64resses_to\x18\x02 \x03(\x0c\x12\x0f\n\x07\x61mounts\x18\x03 \x03(\x04\x12\x14\n\x0cmessage_data\x18\x04 \x01(\x0c\x12\x0b\n\x03\x66\x65\x65\x18\x05 \x01(\x04\x12\x0f\n\x07xmss_pk\x18\x06 \x01(\x0c\"T\n\x11TransferCoinsResp\x12?\n\x1d\x65xtended_transaction_unsigned\x18\x01 \x01(\x0b\x32\x18.qsc.TransactionExtended\"B\n\x12PushTransactionReq\x12,\n\x12transaction_signed\x18\x01 \x01(\x0b\x32\x10.qsc.Transaction\"\xca\x01\n\x13PushTransactionResp\x12\x39\n\nerror_code\x18\x01 \x01(\x0e\x32%.qsc.PushTransactionResp.ResponseCode\x12\x19\n\x11\x65rror_description\x18\x02 \x01(\t\x12\x0f\n\x07tx_hash\x18\x03 \x01(\x0c\"L\n\x0cResponseCode\x12\x0b\n\x07UNKNOWN\x10\x00\x12\t\n\x05\x45RROR\x10\x01\x12\x15\n\x11VALIDATION_FAILED\x10\x02\x12\r\n\tSUBMITTED\x10\x03\"\x82\x01\n\x14MultiSigCreateTxnReq\x12\x13\n\x0bmaster_addr\x18\x01 \x01(\x0c\x12\x13\n\x0bsignatories\x18\x02 \x03(\x0c\x12\x0f\n\x07weights\x18\x03 \x03(\r\x12\x11\n\tthreshold\x18\x04 \x01(\r\x12\x0b\n\x03\x66\x65\x65\x18\x05 \x01(\x04\x12\x0f\n\x07xmss_pk\x18\x06 \x01(\x0c\"\xa3\x01\n\x13MultiSigSpendTxnReq\x12\x13\n\x0bmaster_addr\x18\x01 \x01(\x0c\x12\x19\n\x11multi_sig_address\x18\x02 \x01(\x0c\x12\x10\n\x08\x61\x64\x64rs_to\x18\x03 \x03(\x0c\x12\x0f\n\x07\x61mounts\x18\x04 \x03(\x04\x12\x1b\n\x13\x65xpiry_block_number\x18\x05 \x01(\x04\x12\x0b\n\x03\x66\x65\x65\x18\x06 \x01(\x04\x12\x0f\n\x07xmss_pk\x18\x07 \x01(\x0c\"k\n\x12MultiSigVoteTxnReq\x12\x13\n\x0bmaster_addr\x18\x01 \x01(\x0c\x12\x12\n\nshared_key\x18\x02 \x01(\x0c\x12\x0e\n\x06unvote\x18\x03 \x01(\x08\x12\x0b\n\x03\x66\x65\x65\x18\x04 \x01(\x04\x12\x0f\n\x07xmss_pk\x18\x05 \x01(\x0c\"d\n\rMessageTxnReq\x12\x13\n\x0bmaster_addr\x18\x01 \x01(\x0c\x12\x0f\n\x07message\x18\x02 \x01(\x0c\x12\x0f\n\x07\x61\x64\x64r_to\x18\x03 \x01(\x0c\x12\x0b\n\x03\x66\x65\x65\x18\x04 \x01(\x04\x12\x0f\n\x07xmss_pk\x18\x05 \x01(\x0c\"\xad\x01\n\x0bTokenTxnReq\x12\x13\n\x0bmaster_addr\x18\x01 \x01(\x0c\x12\x0e\n\x06symbol\x18\x02 \x01(\x0c\x12\x0c\n\x04name\x18\x03 \x01(\x0c\x12\r\n\x05owner\x18\x04 \x01(\x0c\x12\x10\n\x08\x64\x65\x63imals\x18\x05 \x01(\x04\x12,\n\x10initial_balances\x18\x06 \x03(\x0b\x32\x12.qsc.AddressAmount\x12\x0b\n\x03\x66\x65\x65\x18\x07 \x01(\x04\x12\x0f\n\x07xmss_pk\x18\x08 \x01(\x0c\"\x85\x01\n\x13TransferTokenTxnReq\x12\x13\n\x0bmaster_addr\x18\x01 \x01(\x0c\x12\x14\n\x0c\x61\x64\x64resses_to\x18\x02 \x03(\x0c\x12\x14\n\x0ctoken_txhash\x18\x03 \x01(\x0c\x12\x0f\n\x07\x61mounts\x18\x04 \x03(\x04\x12\x0b\n\x03\x66\x65\x65\x18\x05 \x01(\x04\x12\x0f\n\x07xmss_pk\x18\x06 \x01(\x0c\"i\n\x0bSlaveTxnReq\x12\x13\n\x0bmaster_addr\x18\x01 \x01(\x0c\x12\x11\n\tslave_pks\x18\x02 \x03(\x0c\x12\x14\n\x0c\x61\x63\x63\x65ss_types\x18\x03 \x03(\r\x12\x0b\n\x03\x66\x65\x65\x18\x04 \x01(\x04\x12\x0f\n\x07xmss_pk\x18\x05 \x01(\x0c\"i\n\rLatticeTxnReq\x12\x13\n\x0bmaster_addr\x18\x01 \x01(\x0c\x12\x0b\n\x03pk1\x18\x02 \x01(\x0c\x12\x0b\n\x03pk2\x18\x03 \x01(\x0c\x12\x0b\n\x03pk3\x18\x04 \x01(\x0c\x12\x0b\n\x03\x66\x65\x65\x18\x05 \x01(\x04\x12\x0f\n\x07xmss_pk\x18\x06 \x01(\x0c\"H\n\x0fMiniTransaction\x12\x18\n\x10transaction_hash\x18\x01 \x01(\t\x12\x0b\n\x03out\x18\x02 \x01(\x08\x12\x0e\n\x06\x61mount\x18\x03 \x01(\x04\"$\n\x11GetTransactionReq\x12\x0f\n\x07tx_hash\x18\x01 \x01(\x0c\"\xa0\x01\n\x12GetTransactionResp\x12\x1c\n\x02tx\x18\x01 \x01(\x0b\x32\x10.qsc.Transaction\x12\x15\n\rconfirmations\x18\x02 \x01(\x04\x12\x14\n\x0c\x62lock_number\x18\x03 \x01(\x04\x12\x19\n\x11\x62lock_header_hash\x18\x04 \x01(\x0c\x12\x11\n\ttimestamp\x18\x05 \x01(\x04\x12\x11\n\taddr_from\x18\x06 \x01(\x0c\"^\n\x1fGetMiniTransactionsByAddressReq\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0c\x12\x15\n\ritem_per_page\x18\x02 \x01(\x04\x12\x13\n\x0bpage_number\x18\x03 \x01(\x04\"d\n GetMiniTransactionsByAddressResp\x12/\n\x11mini_transactions\x18\x01 \x03(\x0b\x32\x14.qsc.MiniTransaction\x12\x0f\n\x07\x62\x61lance\x18\x02 \x01(\x04\"Z\n\x1bGetTransactionsByAddressReq\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0c\x12\x15\n\ritem_per_page\x18\x02 \x01(\x04\x12\x13\n\x0bpage_number\x18\x03 \x01(\x04\"T\n\x1cGetTransactionsByAddressResp\x12\x34\n\x13transactions_detail\x18\x01 \x03(\x0b\x32\x17.qsc.GetTransactionResp\"\xb8\x02\n\x1fGetMultiSigSpendTxsByAddressReq\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0c\x12\x15\n\ritem_per_page\x18\x02 \x01(\x04\x12\x13\n\x0bpage_number\x18\x03 \x01(\x04\x12\x44\n\x0b\x66ilter_type\x18\x04 \x01(\x0e\x32/.qsc.GetMultiSigSpendTxsByAddressReq.FilterType\"\x91\x01\n\nFilterType\x12\x08\n\x04NONE\x10\x00\x12\x11\n\rEXECUTED_ONLY\x10\x01\x12\x10\n\x0cNON_EXECUTED\x10\x02\x12\x0b\n\x07\x45XPIRED\x10\x03\x12\x0f\n\x0bNON_EXPIRED\x10\x04\x12\x18\n\x14NON_EXECUTED_EXPIRED\x10\x05\x12\x1c\n\x18NON_EXECUTED_NON_EXPIRED\x10\x06\"X\n GetMultiSigSpendTxsByAddressResp\x12\x34\n\x13transactions_detail\x18\x01 \x03(\x0b\x32\x17.qsc.GetTransactionResp\"2\n\x0fGetVoteStatsReq\x12\x1f\n\x17multi_sig_spend_tx_hash\x18\x01 \x01(\x0c\"6\n\x10GetVoteStatsResp\x12\"\n\nvote_stats\x18\x01 \x01(\x0b\x32\x0e.qsc.VoteStats\"U\n\x1dGetInboxMessagesByAddressResp\x12\x34\n\x13transactions_detail\x18\x01 \x03(\x0b\x32\x17.qsc.GetTransactionResp\"l\n\x0cInboxMessage\x12\x11\n\taddr_from\x18\x01 \x01(\x0c\x12\x11\n\ttimestamp\x18\x02 \x01(\x04\x12\x0f\n\x07message\x18\x03 \x01(\x0c\x12\x0f\n\x07tx_hash\x18\x04 \x01(\x0c\x12\x14\n\x0c\x62lock_number\x18\x05 \x01(\x04\"R\n\x0bTokenDetail\x12\x14\n\x0ctoken_txhash\x18\x01 \x01(\x0c\x12\x0c\n\x04name\x18\x02 \x01(\x0c\x12\x0e\n\x06symbol\x18\x03 \x01(\x0c\x12\x0f\n\x07\x62\x61lance\x18\x04 \x01(\x04\"A\n\x16GetTokensByAddressResp\x12\'\n\rtokens_detail\x18\x01 \x03(\x0b\x32\x10.qsc.TokenDetail\"9\n\x0bSlaveDetail\x12\x15\n\rslave_address\x18\x01 \x01(\x0c\x12\x13\n\x0b\x61\x63\x63\x65ss_type\x18\x02 \x01(\x04\"A\n\x16GetSlavesByAddressResp\x12\'\n\rslaves_detail\x18\x01 \x03(\x0b\x32\x10.qsc.SlaveDetail\"J\n\x10LatticePKsDetail\x12\x0b\n\x03pk1\x18\x01 \x01(\x0c\x12\x0b\n\x03pk2\x18\x02 \x01(\x0c\x12\x0b\n\x03pk3\x18\x03 \x01(\x0c\x12\x0f\n\x07tx_hash\x18\x04 \x01(\x0c\"O\n\x1aGetLatticePKsByAddressResp\x12\x31\n\x12lattice_pks_detail\x18\x01 \x03(\x0b\x32\x15.qsc.LatticePKsDetail\"2\n\x0eMultiSigDetail\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0c\x12\x0f\n\x07\x62\x61lance\x18\x02 \x01(\x04\"R\n!GetMultiSigAddressesByAddressResp\x12-\n\x10multi_sig_detail\x18\x01 \x03(\x0b\x32\x13.qsc.MultiSigDetail\" \n\rGetBalanceReq\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0c\"!\n\x0eGetBalanceResp\x12\x0f\n\x07\x62\x61lance\x18\x01 \x01(\x04\"\'\n\x12GetTotalBalanceReq\x12\x11\n\taddresses\x18\x01 \x03(\x0c\"&\n\x13GetTotalBalanceResp\x12\x0f\n\x07\x62\x61lance\x18\x01 \x01(\x04\"b\n\tGetOTSReq\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0c\x12\x11\n\tpage_from\x18\x02 \x01(\x04\x12\x12\n\npage_count\x18\x03 \x01(\x04\x12\x1d\n\x15unused_ots_index_from\x18\x04 \x01(\x04\">\n\x11OTSBitfieldByPage\x12\x14\n\x0cots_bitfield\x18\x01 \x03(\x0c\x12\x13\n\x0bpage_number\x18\x02 \x01(\x04\"\x81\x01\n\nGetOTSResp\x12\x34\n\x14ots_bitfield_by_page\x18\x01 \x03(\x0b\x32\x16.qsc.OTSBitfieldByPage\x12\x1d\n\x15next_unused_ots_index\x18\x02 \x01(\x04\x12\x1e\n\x16unused_ots_index_found\x18\x03 \x01(\x08\"\x0e\n\x0cGetHeightReq\"\x1f\n\rGetHeightResp\x12\x0e\n\x06height\x18\x01 \x01(\x04\"\"\n\x0bGetBlockReq\x12\x13\n\x0bheader_hash\x18\x01 \x01(\x0c\")\n\x0cGetBlockResp\x12\x19\n\x05\x62lock\x18\x01 \x01(\x0b\x32\n.qsc.Block\"+\n\x13GetBlockByNumberReq\x12\x14\n\x0c\x62lock_number\x18\x01 \x01(\x04\"1\n\x14GetBlockByNumberResp\x12\x19\n\x05\x62lock\x18\x01 \x01(\x0b\x32\n.qsc.Block\"\x16\n\x14GetLocalAddressesReq\"*\n\x15GetLocalAddressesResp\x12\x11\n\taddresses\x18\x01 \x03(\x0c\"\x8d\x02\n\x08NodeInfo\x12\x0f\n\x07version\x18\x01 \x01(\t\x12\"\n\x05state\x18\x02 \x01(\x0e\x32\x13.qsc.NodeInfo.State\x12\x17\n\x0fnum_connections\x18\x03 \x01(\r\x12\x17\n\x0fnum_known_peers\x18\x04 \x01(\r\x12\x0e\n\x06uptime\x18\x05 \x01(\x04\x12\x14\n\x0c\x62lock_height\x18\x06 \x01(\x04\x12\x17\n\x0f\x62lock_last_hash\x18\x07 \x01(\x0c\x12\x12\n\nnetwork_id\x18\x08 \x01(\t\"G\n\x05State\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0c\n\x08UNSYNCED\x10\x01\x12\x0b\n\x07SYNCING\x10\x02\x12\n\n\x06SYNCED\x10\x03\x12\n\n\x06\x46ORKED\x10\x04\"\x85\x01\n\x11\x41\x64\x64ressDescriptor\x12\x15\n\rhash_function\x18\x01 \x01(\t\x12\x18\n\x10signature_scheme\x18\x02 \x01(\t\x12\x13\n\x0btree_height\x18\x03 \x01(\r\x12\x12\n\nsignatures\x18\x04 \x01(\r\x12\x16\n\x0e\x61\x64\x64ress_format\x18\x05 \x01(\t\"\'\n\x0bStoredPeers\x12\x18\n\x05peers\x18\x01 \x03(\x0b\x32\t.qsc.Peer\"\x12\n\x04Peer\x12\n\n\x02ip\x18\x01 \x01(\t\"\x91\x03\n\x0c\x41\x64\x64ressState\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0c\x12\x0f\n\x07\x62\x61lance\x18\x02 \x01(\x04\x12\r\n\x05nonce\x18\x03 \x01(\x04\x12\x14\n\x0cots_bitfield\x18\x04 \x03(\x0c\x12\x1a\n\x12transaction_hashes\x18\x05 \x03(\x0c\x12-\n\x06tokens\x18\x06 \x03(\x0b\x32\x1d.qsc.AddressState.TokensEntry\x12&\n\x0elatticePK_list\x18\x07 \x03(\x0b\x32\x0e.qsc.LatticePK\x12H\n\x15slave_pks_access_type\x18\x08 \x03(\x0b\x32).qsc.AddressState.SlavePksAccessTypeEntry\x12\x13\n\x0bots_counter\x18\t \x01(\x04\x1a-\n\x0bTokensEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x04:\x02\x38\x01\x1a\x39\n\x17SlavePksAccessTypeEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\r:\x02\x38\x01\"\xe0\x03\n\x15OptimizedAddressState\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0c\x12\x0f\n\x07\x62\x61lance\x18\x02 \x01(\x04\x12\r\n\x05nonce\x18\x03 \x01(\x04\x12\x1e\n\x16ots_bitfield_used_page\x18\x04 \x01(\x04\x12\x1a\n\x12used_ots_key_count\x18\x05 \x01(\x04\x12\x1e\n\x16transaction_hash_count\x18\x06 \x01(\x04\x12\x14\n\x0ctokens_count\x18\x07 \x01(\x04\x12\x14\n\x0cslaves_count\x18\x08 \x01(\x04\x12\x18\n\x10lattice_pk_count\x18\t \x01(\x04\x12\x1f\n\x17multi_sig_address_count\x18\n \x01(\x04\x12\x1d\n\x15multi_sig_spend_count\x18\x0b \x01(\x04\x12\x1b\n\x13inbox_message_count\x18\x0c \x01(\x04\x12+\n#foundation_multi_sig_spend_txn_hash\x18\r \x03(\x0c\x12*\n\"foundation_multi_sig_vote_txn_hash\x18\x0e \x03(\x0c\x12\x0f\n\x07unvotes\x18\x0f \x03(\x0c\x12-\n\x13proposal_vote_stats\x18\x10 \x03(\x0b\x32\x10.qsc.Transaction\"\x93\x03\n\x14MultiSigAddressState\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0c\x12\x18\n\x10\x63reation_tx_hash\x18\x02 \x01(\x0c\x12\r\n\x05nonce\x18\x03 \x01(\x04\x12\x0f\n\x07\x62\x61lance\x18\x04 \x01(\x04\x12\x13\n\x0bsignatories\x18\x05 \x03(\x0c\x12\x0f\n\x07weights\x18\x06 \x03(\r\x12\x11\n\tthreshold\x18\x07 \x01(\r\x12\x1e\n\x16transaction_hash_count\x18\x08 \x01(\x04\x12\x1d\n\x15multi_sig_spend_count\x18\t \x01(\x04\x12\x1f\n\x17multi_sig_address_count\x18\n \x01(\x04\x12+\n#foundation_multi_sig_spend_txn_hash\x18\x0b \x03(\x0c\x12*\n\"foundation_multi_sig_vote_txn_hash\x18\x0c \x03(\x0c\x12\x0f\n\x07unvotes\x18\r \x03(\x0c\x12-\n\x13proposal_vote_stats\x18\x0e \x03(\x0b\x32\x10.qsc.Transaction\"\'\n\x15MultiSigAddressesList\x12\x0e\n\x06hashes\x18\x01 \x03(\x0c\"\x1a\n\x08\x44\x61taList\x12\x0e\n\x06values\x18\x01 \x03(\x0c\"\x1d\n\x08\x42itfield\x12\x11\n\tbitfields\x18\x01 \x03(\x0c\"%\n\x13TransactionHashList\x12\x0e\n\x06hashes\x18\x01 \x03(\x0c\"3\n\tLatticePK\x12\x10\n\x08kyber_pk\x18\x01 \x01(\x0c\x12\x14\n\x0c\x64ilithium_pk\x18\x02 \x01(\x0c\"0\n\rAddressAmount\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0c\x12\x0e\n\x06\x61mount\x18\x02 \x01(\x04\"\xd7\x01\n\x0b\x42lockHeader\x12\x13\n\x0bhash_header\x18\x01 \x01(\x0c\x12\x14\n\x0c\x62lock_number\x18\x02 \x01(\x04\x12\x19\n\x11timestamp_seconds\x18\x03 \x01(\x04\x12\x18\n\x10hash_header_prev\x18\x04 \x01(\x0c\x12\x14\n\x0creward_block\x18\x05 \x01(\x04\x12\x12\n\nreward_fee\x18\x06 \x01(\x04\x12\x13\n\x0bmerkle_root\x18\x07 \x01(\x0c\x12\x14\n\x0cmining_nonce\x18\x08 \x01(\r\x12\x13\n\x0b\x65xtra_nonce\x18\t \x01(\x04\"i\n\x13\x42lockHeaderExtended\x12 \n\x06header\x18\x01 \x01(\x0b\x32\x10.qsc.BlockHeader\x12\x30\n\x11transaction_count\x18\x02 \x01(\x0b\x32\x15.qsc.TransactionCount\"q\n\x10TransactionCount\x12/\n\x05\x63ount\x18\x01 \x03(\x0b\x32 .qsc.TransactionCount.CountEntry\x1a,\n\nCountEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12\r\n\x05value\x18\x02 \x01(\r:\x02\x38\x01\"\x91\x01\n\x13TransactionExtended\x12 \n\x06header\x18\x01 \x01(\x0b\x32\x10.qsc.BlockHeader\x12\x1c\n\x02tx\x18\x02 \x01(\x0b\x32\x10.qsc.Transaction\x12\x11\n\taddr_from\x18\x03 \x01(\x0c\x12\x0c\n\x04size\x18\x04 \x01(\x04\x12\x19\n\x11timestamp_seconds\x18\x05 \x01(\x04\"\xa6\x01\n\rBlockExtended\x12 \n\x06header\x18\x01 \x01(\x0b\x32\x10.qsc.BlockHeader\x12\x37\n\x15\x65xtended_transactions\x18\x02 \x03(\x0b\x32\x18.qsc.TransactionExtended\x12,\n\x0fgenesis_balance\x18\x03 \x03(\x0b\x32\x13.qsc.GenesisBalance\x12\x0c\n\x04size\x18\x04 \x01(\x04\"\x7f\n\x05\x42lock\x12 \n\x06header\x18\x01 \x01(\x0b\x32\x10.qsc.BlockHeader\x12&\n\x0ctransactions\x18\x02 \x03(\x0b\x32\x10.qsc.Transaction\x12,\n\x0fgenesis_balance\x18\x03 \x03(\x0b\x32\x13.qsc.GenesisBalance\"2\n\x0eGenesisBalance\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0c\x12\x0f\n\x07\x62\x61lance\x18\x02 \x01(\x04\"D\n\x11\x42lockMetaDataList\x12/\n\x13\x62lock_number_hashes\x18\x01 \x03(\x0b\x32\x12.qsc.BlockMetaData\"\xaa\x15\n\x0bTransaction\x12\x13\n\x0bmaster_addr\x18\x01 \x01(\x0c\x12\x0b\n\x03\x66\x65\x65\x18\x02 \x01(\x04\x12\x12\n\npublic_key\x18\x03 \x01(\x0c\x12\x11\n\tsignature\x18\x04 \x01(\x0c\x12\r\n\x05nonce\x18\x05 \x01(\x04\x12\x18\n\x10transaction_hash\x18\x06 \x01(\x0c\x12-\n\x08transfer\x18\x07 \x01(\x0b\x32\x19.qsc.Transaction.TransferH\x00\x12-\n\x08\x63oinbase\x18\x08 \x01(\x0b\x32\x19.qsc.Transaction.CoinBaseH\x00\x12\x36\n\tlatticePK\x18\t \x01(\x0b\x32!.qsc.Transaction.LatticePublicKeyH\x00\x12+\n\x07message\x18\n \x01(\x0b\x32\x18.qsc.Transaction.MessageH\x00\x12\'\n\x05token\x18\x0b \x01(\x0b\x32\x16.qsc.Transaction.TokenH\x00\x12\x38\n\x0etransfer_token\x18\x0c \x01(\x0b\x32\x1e.qsc.Transaction.TransferTokenH\x00\x12\'\n\x05slave\x18\r \x01(\x0b\x32\x16.qsc.Transaction.SlaveH\x00\x12;\n\x10multi_sig_create\x18\x0e \x01(\x0b\x32\x1f.qsc.Transaction.MultiSigCreateH\x00\x12\x39\n\x0fmulti_sig_spend\x18\x0f \x01(\x0b\x32\x1e.qsc.Transaction.MultiSigSpendH\x00\x12\x37\n\x0emulti_sig_vote\x18\x10 \x01(\x0b\x32\x1d.qsc.Transaction.MultiSigVoteH\x00\x12:\n\x0fproposal_create\x18\x11 \x01(\x0b\x32\x1f.qsc.Transaction.ProposalCreateH\x00\x12\x36\n\rproposal_vote\x18\x12 \x01(\x0b\x32\x1d.qsc.Transaction.ProposalVoteH\x00\x1a\x43\n\x08Transfer\x12\x10\n\x08\x61\x64\x64rs_to\x18\x01 \x03(\x0c\x12\x0f\n\x07\x61mounts\x18\x02 \x03(\x04\x12\x14\n\x0cmessage_data\x18\x03 \x01(\x0c\x1a+\n\x08\x43oinBase\x12\x0f\n\x07\x61\x64\x64r_to\x18\x01 \x01(\x0c\x12\x0e\n\x06\x61mount\x18\x02 \x01(\x04\x1a\x39\n\x10LatticePublicKey\x12\x0b\n\x03pk1\x18\x01 \x01(\x0c\x12\x0b\n\x03pk2\x18\x02 \x01(\x0c\x12\x0b\n\x03pk3\x18\x03 \x01(\x0c\x1a\x30\n\x07Message\x12\x14\n\x0cmessage_hash\x18\x01 \x01(\x0c\x12\x0f\n\x07\x61\x64\x64r_to\x18\x02 \x01(\x0c\x1at\n\x05Token\x12\x0e\n\x06symbol\x18\x01 \x01(\x0c\x12\x0c\n\x04name\x18\x02 \x01(\x0c\x12\r\n\x05owner\x18\x03 \x01(\x0c\x12\x10\n\x08\x64\x65\x63imals\x18\x04 \x01(\x04\x12,\n\x10initial_balances\x18\x05 \x03(\x0b\x32\x12.qsc.AddressAmount\x1aH\n\rTransferToken\x12\x14\n\x0ctoken_txhash\x18\x01 \x01(\x0c\x12\x10\n\x08\x61\x64\x64rs_to\x18\x02 \x03(\x0c\x12\x0f\n\x07\x61mounts\x18\x03 \x03(\x04\x1a\x30\n\x05Slave\x12\x11\n\tslave_pks\x18\x01 \x03(\x0c\x12\x14\n\x0c\x61\x63\x63\x65ss_types\x18\x02 \x03(\r\x1aI\n\x0eMultiSigCreate\x12\x13\n\x0bsignatories\x18\x01 \x03(\x0c\x12\x0f\n\x07weights\x18\x02 \x03(\r\x12\x11\n\tthreshold\x18\x03 \x01(\r\x1aj\n\rMultiSigSpend\x12\x19\n\x11multi_sig_address\x18\x01 \x01(\x0c\x12\x10\n\x08\x61\x64\x64rs_to\x18\x02 \x03(\x0c\x12\x0f\n\x07\x61mounts\x18\x03 \x03(\x04\x12\x1b\n\x13\x65xpiry_block_number\x18\x04 \x01(\x04\x1aH\n\x0cMultiSigVote\x12\x12\n\nshared_key\x18\x01 \x01(\x0c\x12\x0e\n\x06unvote\x18\x02 \x01(\x08\x12\x14\n\x0cprev_tx_hash\x18\x03 \x01(\x0c\x1a\x9b\t\n\x0eProposalCreate\x12\x1b\n\x13\x65xpiry_block_number\x18\x01 \x01(\x04\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x32\n\x03qip\x18\x03 \x01(\x0b\x32#.qsc.Transaction.ProposalCreate.QIPH\x00\x12\x38\n\x06\x63onfig\x18\x04 \x01(\x0b\x32&.qsc.Transaction.ProposalCreate.ConfigH\x00\x12\x36\n\x05other\x18\x05 \x01(\x0b\x32%.qsc.Transaction.ProposalCreate.OtherH\x00\x1a\x17\n\x03QIP\x12\x10\n\x08qip_link\x18\x01 \x01(\t\x1a\xed\x06\n\x06\x43onfig\x12\x18\n\x10\x63hanges_bitfield\x18\x01 \x03(\x0c\x12\x13\n\x0breorg_limit\x18\x02 \x01(\x04\x12\x17\n\x0fmax_coin_supply\x18\x03 \x01(\x04\x12,\n$complete_emission_time_span_in_years\x18\x04 \x01(\x04\x12\x1b\n\x13mining_nonce_offset\x18\x05 \x01(\x04\x12\x1a\n\x12\x65xtra_nonce_offset\x18\x06 \x01(\x04\x12!\n\x19mining_blob_size_in_bytes\x18\x07 \x01(\x04\x12\x1f\n\x17\x62lock_timing_in_seconds\x18\x08 \x01(\x04\x12 \n\x18number_of_blocks_analyze\x18\t \x01(\x04\x12\x1d\n\x15\x62lock_size_multiplier\x18\n \x01(\x04\x12%\n\x1d\x62lock_min_size_limit_in_bytes\x18\x0b \x01(\x04\x12&\n\x1etransaction_multi_output_limit\x18\x0c \x01(\x04\x12\x1a\n\x12message_max_length\x18\r \x01(\x04\x12\x1f\n\x17token_symbol_max_length\x18\x0e \x01(\x04\x12\x1d\n\x15token_name_max_length\x18\x0f \x01(\x04\x12\x1e\n\x16lattice_pk1_max_length\x18\x10 \x01(\x04\x12\x1e\n\x16lattice_pk2_max_length\x18\x11 \x01(\x04\x12\x1e\n\x16lattice_pk3_max_length\x18\x12 \x01(\x04\x12\x39\n1foundation_multi_sig_address_threshold_percentage\x18\x13 \x01(\x04\x12\x1e\n\x16proposal_threshold_per\x18\x14 \x01(\x04\x12 \n\x18proposal_default_options\x18\x15 \x03(\t\x12\x1e\n\x16\x64\x65scription_max_length\x18\x16 \x01(\x04\x12\x1a\n\x12options_max_number\x18\x17 \x01(\x04\x12\x1e\n\x16option_max_text_length\x18\x18 \x01(\x04\x12(\n proposal_config_activation_delay\x18\x19 \x01(\x04\x12\x15\n\rN_measurement\x18\x1a \x01(\x04\x12\n\n\x02kp\x18\x1b \x01(\x04\x1a\x18\n\x05Other\x12\x0f\n\x07options\x18\x01 \x03(\tB\x0e\n\x0cproposalType\x1a\x32\n\x0cProposalVote\x12\x12\n\nshared_key\x18\x01 \x01(\x0c\x12\x0e\n\x06option\x18\x02 \x01(\rB\x11\n\x0ftransactionType\"\xb8\x01\n\tVoteStats\x12\x19\n\x11multi_sig_address\x18\x01 \x01(\x0c\x12\x12\n\nshared_key\x18\x02 \x01(\x0c\x12\x13\n\x0bsignatories\x18\x03 \x03(\x0c\x12\x11\n\ttx_hashes\x18\x04 \x03(\x0c\x12\x0f\n\x07unvotes\x18\x05 \x03(\x08\x12\x1b\n\x13\x65xpiry_block_number\x18\x06 \x01(\x04\x12\x14\n\x0ctotal_weight\x18\x07 \x01(\x04\x12\x10\n\x08\x65xecuted\x18\x08 \x01(\x08\"\xb7\x01\n\x11ProposalVoteStats\x12\x11\n\taddr_from\x18\x01 \x01(\x0c\x12\x12\n\nshared_key\x18\x02 \x01(\x0c\x12\x15\n\rproposal_type\x18\x03 \x01(\t\x12\x18\n\x10weight_by_option\x18\x04 \x03(\x04\x12\x1b\n\x13\x65xpiry_block_number\x18\x05 \x01(\x04\x12\x10\n\x08\x65xecuted\x18\x06 \x01(\x08\x12\x1b\n\x13number_of_tx_hashes\x18\x07 \x01(\x04\"-\n\x0eProposalRecord\x12\x1b\n\x13number_of_tx_hashes\x18\x01 \x01(\x04\"!\n\tTokenList\x12\x14\n\x0ctoken_txhash\x18\x01 \x03(\x0c\"R\n\x0cTokenBalance\x12\x0f\n\x07\x62\x61lance\x18\x01 \x01(\x04\x12\x10\n\x08\x64\x65\x63imals\x18\x02 \x01(\x04\x12\x0f\n\x07tx_hash\x18\x03 \x01(\x0c\x12\x0e\n\x06\x64\x65lete\x18\x04 \x01(\x08\"E\n\rSlaveMetadata\x12\x13\n\x0b\x61\x63\x63\x65ss_type\x18\x01 \x01(\x04\x12\x0f\n\x07tx_hash\x18\x02 \x01(\x0c\x12\x0e\n\x06\x64\x65lete\x18\x03 \x01(\x08\"E\n\x11LatticePKMetadata\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12\x0f\n\x07tx_hash\x18\x02 \x01(\x0c\x12\x0e\n\x06\x64\x65lete\x18\x03 \x01(\x08\"G\n\rTokenMetadata\x12\x14\n\x0ctoken_txhash\x18\x01 \x01(\x0c\x12 \n\x18transfer_token_tx_hashes\x18\x02 \x03(\x0c\"\xc4\x01\n\x19\x45ncryptedEphemeralMessage\x12\x0e\n\x06msg_id\x18\x01 \x01(\x0c\x12\x0b\n\x03ttl\x18\x02 \x01(\x04\x12\x0b\n\x03ttr\x18\x03 \x01(\x04\x12\x37\n\x07\x63hannel\x18\x05 \x01(\x0b\x32&.qsc.EncryptedEphemeralMessage.Channel\x12\r\n\x05nonce\x18\x06 \x01(\x04\x12\x0f\n\x07payload\x18\x07 \x01(\x0c\x1a$\n\x07\x43hannel\x12\x19\n\x11\x65nc_aes256_symkey\x18\x04 \x01(\x0c\" \n\x0b\x41\x64\x64ressList\x12\x11\n\taddresses\x18\x01 \x03(\x0c\"`\n\x0f\x42lockHeightData\x12\x14\n\x0c\x62lock_number\x18\x01 \x01(\x04\x12\x18\n\x10\x62lock_headerhash\x18\x02 \x01(\x0c\x12\x1d\n\x15\x63umulative_difficulty\x18\x03 \x01(\x0c\"\x81\x01\n\rBlockMetaData\x12\x18\n\x10\x62lock_difficulty\x18\x01 \x01(\x0c\x12\x1d\n\x15\x63umulative_difficulty\x18\x02 \x01(\x0c\x12\x1a\n\x12\x63hild_headerhashes\x18\x03 \x03(\x0c\x12\x1b\n\x13last_N_headerhashes\x18\x04 \x03(\x0c\"A\n\x12\x42lockNumberMapping\x12\x12\n\nheaderhash\x18\x01 \x01(\x0c\x12\x17\n\x0fprev_headerhash\x18\x02 \x01(\x0c\"X\n\x08PeerStat\x12\x0f\n\x07peer_ip\x18\x01 \x01(\x0c\x12\x0c\n\x04port\x18\x02 \x01(\r\x12-\n\x10node_chain_state\x18\x03 \x01(\x0b\x32\x13.qsc.NodeChainState\"~\n\x0eNodeChainState\x12\x14\n\x0c\x62lock_number\x18\x01 \x01(\x04\x12\x13\n\x0bheader_hash\x18\x02 \x01(\x0c\x12\x1d\n\x15\x63umulative_difficulty\x18\x03 \x01(\x0c\x12\x0f\n\x07version\x18\x04 \x01(\t\x12\x11\n\ttimestamp\x18\x05 \x01(\x04\"<\n\x0eNodeHeaderHash\x12\x14\n\x0c\x62lock_number\x18\x01 \x01(\x04\x12\x14\n\x0cheaderhashes\x18\x02 \x03(\x0c\"-\n\x12P2PAcknowledgement\x12\x17\n\x0f\x62ytes_processed\x18\x01 \x01(\r\"|\n\x08PeerInfo\x12\x0f\n\x07peer_ip\x18\x01 \x01(\x0c\x12\x0c\n\x04port\x18\x02 \x01(\r\x12\x18\n\x10\x62\x61nned_timestamp\x18\x03 \x01(\r\x12\x13\n\x0b\x63redibility\x18\x04 \x01(\r\x12\"\n\x1alast_connections_timestamp\x18\x05 \x03(\r\".\n\x05Peers\x12%\n\x0epeer_info_list\x18\x01 \x03(\x0b\x32\r.qsc.PeerInfo\"\xbb\x0c\n\tDevConfig\x12\x16\n\x0eprev_state_key\x18\x01 \x01(\x0c\x12\x19\n\x11\x63urrent_state_key\x18\x02 \x01(\x0c\x12\x1e\n\x16\x61\x63tivation_header_hash\x18\x03 \x01(\x0c\x12\x1f\n\x17\x61\x63tivation_block_number\x18\x04 \x01(\x04\x12#\n\x05\x63hain\x18\x05 \x01(\x0b\x32\x14.qsc.DevConfig.Chain\x12#\n\x05\x62lock\x18\x06 \x01(\x0b\x32\x14.qsc.DevConfig.Block\x12/\n\x0btransaction\x18\x07 \x01(\x0b\x32\x1a.qsc.DevConfig.Transaction\x12\x1f\n\x03pow\x18\x08 \x01(\x0b\x32\x12.qsc.DevConfig.POW\x1a\x63\n\x05\x43hain\x12\x13\n\x0breorg_limit\x18\x01 \x01(\x04\x12\x17\n\x0fmax_coin_supply\x18\x02 \x01(\x04\x12,\n$complete_emission_time_span_in_years\x18\x03 \x01(\x04\x1a\xc6\x02\n\x05\x42lock\x12\x1b\n\x13mining_nonce_offset\x18\x01 \x01(\x04\x12\x1a\n\x12\x65xtra_nonce_offset\x18\x02 \x01(\x04\x12!\n\x19mining_blob_size_in_bytes\x18\x03 \x01(\x04\x12\x1f\n\x17\x62lock_timing_in_seconds\x18\x04 \x01(\x04\x12G\n\x15\x62lock_size_controller\x18\x05 \x01(\x0b\x32(.qsc.DevConfig.Block.BlockSizeController\x1aw\n\x13\x42lockSizeController\x12 \n\x18number_of_blocks_analyze\x18\x01 \x01(\x04\x12\x17\n\x0fsize_multiplier\x18\x02 \x01(\x04\x12%\n\x1d\x62lock_min_size_limit_in_bytes\x18\x03 \x01(\x04\x1a\xc5\x06\n\x0bTransaction\x12\x1a\n\x12multi_output_limit\x18\x01 \x01(\x04\x12\x33\n\x07message\x18\x02 \x01(\x0b\x32\".qsc.DevConfig.Transaction.Message\x12/\n\x05slave\x18\x03 \x01(\x0b\x32 .qsc.DevConfig.Transaction.Slave\x12/\n\x05token\x18\x04 \x01(\x0b\x32 .qsc.DevConfig.Transaction.Token\x12\x33\n\x07lattice\x18\x05 \x01(\x0b\x32\".qsc.DevConfig.Transaction.Lattice\x12K\n\x14\x66oundation_multi_sig\x18\x06 \x01(\x0b\x32-.qsc.DevConfig.Transaction.FoundationMultiSig\x12\x35\n\x08proposal\x18\x07 \x01(\x0b\x32#.qsc.DevConfig.Transaction.Proposal\x1a\x1d\n\x07Message\x12\x12\n\nmax_length\x18\x01 \x01(\x04\x1a$\n\x05Slave\x12\x1b\n\x13slave_pk_max_length\x18\x02 \x01(\x04\x1a;\n\x05Token\x12\x19\n\x11symbol_max_length\x18\x01 \x01(\x04\x12\x17\n\x0fname_max_length\x18\x02 \x01(\x04\x1aQ\n\x07Lattice\x12\x16\n\x0epk1_max_length\x18\x01 \x01(\x04\x12\x16\n\x0epk2_max_length\x18\x02 \x01(\x04\x12\x16\n\x0epk3_max_length\x18\x03 \x01(\x04\x1a\x32\n\x12\x46oundationMultiSig\x12\x1c\n\x14threshold_percentage\x18\x01 \x01(\x04\x1a\xc0\x01\n\x08Proposal\x12\x15\n\rthreshold_per\x18\x01 \x01(\x04\x12\x17\n\x0f\x64\x65\x66\x61ult_options\x18\x02 \x03(\t\x12\x1e\n\x16\x64\x65scription_max_length\x18\x03 \x01(\x04\x12\x1a\n\x12options_max_number\x18\x04 \x01(\x04\x12\x1e\n\x16option_max_text_length\x18\x05 \x01(\x04\x12(\n proposal_config_activation_delay\x18\x06 \x01(\x04\x1a(\n\x03POW\x12\x15\n\rN_measurement\x18\x01 \x01(\x04\x12\n\n\x02kp\x18\x02 \x01(\x04\x32\xbd\x1d\n\tPublicAPI\x12P\n\x0cGetNodeState\x12\x14.qsc.GetNodeStateReq\x1a\x15.qsc.GetNodeStateResp\"\x13\x82\xd3\xe4\x93\x02\r\x12\x0b/node-state\x12T\n\rGetKnownPeers\x12\x15.qsc.GetKnownPeersReq\x1a\x16.qsc.GetKnownPeersResp\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\x0c/known-peers\x12P\n\x0cGetPeersStat\x12\x14.qsc.GetPeersStatReq\x1a\x15.qsc.GetPeersStatResp\"\x13\x82\xd3\xe4\x93\x02\r\x12\x0b/peers-stat\x12?\n\x08GetStats\x12\x10.qsc.GetStatsReq\x1a\x11.qsc.GetStatsResp\"\x0e\x82\xd3\xe4\x93\x02\x08\x12\x06/stats\x12\\\n\x0fGetAddressState\x12\x17.qsc.GetAddressStateReq\x1a\x18.qsc.GetAddressStateResp\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/address-state\x12x\n\x18GetOptimizedAddressState\x12\x17.qsc.GetAddressStateReq\x1a!.qsc.GetOptimizedAddressStateResp\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/optimized-address-state\x12~\n\x17GetMultiSigAddressState\x12\x1f.qsc.GetMultiSigAddressStateReq\x1a .qsc.GetMultiSigAddressStateResp\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/multi-sig-address-state\x12?\n\x07IsSlave\x12\x0f.qsc.IsSlaveReq\x1a\x10.qsc.IsSlaveResp\"\x11\x82\xd3\xe4\x93\x02\x0b\x12\t/is-slave\x12\x43\n\tGetObject\x12\x11.qsc.GetObjectReq\x1a\x12.qsc.GetObjectResp\"\x0f\x82\xd3\xe4\x93\x02\t\x12\x07/object\x12T\n\rGetLatestData\x12\x15.qsc.GetLatestDataReq\x1a\x16.qsc.GetLatestDataResp\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\x0c/latest-data\x12_\n\x0fPushTransaction\x12\x17.qsc.PushTransactionReq\x1a\x18.qsc.PushTransactionResp\"\x19\x82\xd3\xe4\x93\x02\x13\"\x11/push-transaction\x12W\n\rTransferCoins\x12\x15.qsc.TransferCoinsReq\x1a\x16.qsc.TransferCoinsResp\"\x17\x82\xd3\xe4\x93\x02\x11\"\x0f/transfer-coins\x12S\n\x0cParseAddress\x12\x14.qsc.ParseAddressReq\x1a\x15.qsc.ParseAddressResp\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/parse-address\x12T\n\rGetChainStats\x12\x15.qsc.GetChainStatsReq\x1a\x16.qsc.GetChainStatsResp\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\x0c/chain-stats\x12\x61\n\x10GetAddressFromPK\x12\x18.qsc.GetAddressFromPKReq\x1a\x19.qsc.GetAddressFromPKResp\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/address-from-pk\x12h\n\x14GetMultiSigCreateTxn\x12\x19.qsc.MultiSigCreateTxnReq\x1a\x16.qsc.TransferCoinsResp\"\x1d\x82\xd3\xe4\x93\x02\x17\"\x15/multi-sig-create-txn\x12\x65\n\x13GetMultiSigSpendTxn\x12\x18.qsc.MultiSigSpendTxnReq\x1a\x16.qsc.TransferCoinsResp\"\x1c\x82\xd3\xe4\x93\x02\x16\"\x14/multi-sig-spend-txn\x12\x62\n\x12GetMultiSigVoteTxn\x12\x17.qsc.MultiSigVoteTxnReq\x1a\x16.qsc.TransferCoinsResp\"\x1b\x82\xd3\xe4\x93\x02\x15\"\x13/multi-sig-vote-txn\x12Q\n\rGetMessageTxn\x12\x12.qsc.MessageTxnReq\x1a\x16.qsc.TransferCoinsResp\"\x14\x82\xd3\xe4\x93\x02\x0e\"\x0c/message-txn\x12K\n\x0bGetTokenTxn\x12\x10.qsc.TokenTxnReq\x1a\x16.qsc.TransferCoinsResp\"\x12\x82\xd3\xe4\x93\x02\x0c\"\n/token-txn\x12\x64\n\x13GetTransferTokenTxn\x12\x18.qsc.TransferTokenTxnReq\x1a\x16.qsc.TransferCoinsResp\"\x1b\x82\xd3\xe4\x93\x02\x15\"\x13/transfer-token-txn\x12K\n\x0bGetSlaveTxn\x12\x10.qsc.SlaveTxnReq\x1a\x16.qsc.TransferCoinsResp\"\x12\x82\xd3\xe4\x93\x02\x0c\"\n/slave-txn\x12Q\n\rGetLatticeTxn\x12\x12.qsc.LatticeTxnReq\x1a\x16.qsc.TransferCoinsResp\"\x14\x82\xd3\xe4\x93\x02\x0e\"\x0c/lattice-txn\x12W\n\x0eGetTransaction\x12\x16.qsc.GetTransactionReq\x1a\x17.qsc.GetTransactionResp\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\x0c/transaction\x12\x91\x01\n\x1cGetMiniTransactionsByAddress\x12$.qsc.GetMiniTransactionsByAddressReq\x1a%.qsc.GetMiniTransactionsByAddressResp\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/mini-transaction-by-address\x12\x81\x01\n\x18GetTransactionsByAddress\x12 .qsc.GetTransactionsByAddressReq\x1a!.qsc.GetTransactionsByAddressResp\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/transactions-by-address\x12o\n\x12GetTokensByAddress\x12 .qsc.GetTransactionsByAddressReq\x1a\x1b.qsc.GetTokensByAddressResp\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/tokens-by-address\x12o\n\x12GetSlavesByAddress\x12 .qsc.GetTransactionsByAddressReq\x1a\x1b.qsc.GetSlavesByAddressResp\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/slaves-by-address\x12|\n\x16GetLatticePKsByAddress\x12 .qsc.GetTransactionsByAddressReq\x1a\x1f.qsc.GetLatticePKsByAddressResp\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/lattice-pks-by-address\x12\x92\x01\n\x1dGetMultiSigAddressesByAddress\x12 .qsc.GetTransactionsByAddressReq\x1a&.qsc.GetMultiSigAddressesByAddressResp\"\'\x82\xd3\xe4\x93\x02!\x12\x1f/multi-sig-addresses-by-address\x12\x94\x01\n\x1cGetMultiSigSpendTxsByAddress\x12$.qsc.GetMultiSigSpendTxsByAddressReq\x1a%.qsc.GetMultiSigSpendTxsByAddressResp\"\'\x82\xd3\xe4\x93\x02!\x12\x1f/multi-sig-spend-txs-by-address\x12P\n\x0cGetVoteStats\x12\x14.qsc.GetVoteStatsReq\x1a\x15.qsc.GetVoteStatsResp\"\x13\x82\xd3\xe4\x93\x02\r\x12\x0b/vote-stats\x12\x85\x01\n\x19GetInboxMessagesByAddress\x12 .qsc.GetTransactionsByAddressReq\x1a\".qsc.GetInboxMessagesByAddressResp\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/inbox-messages-by-address\x12G\n\nGetBalance\x12\x12.qsc.GetBalanceReq\x1a\x13.qsc.GetBalanceResp\"\x10\x82\xd3\xe4\x93\x02\n\x12\x08/balance\x12\\\n\x0fGetTotalBalance\x12\x17.qsc.GetTotalBalanceReq\x1a\x18.qsc.GetTotalBalanceResp\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/total-balance\x12\x37\n\x06GetOTS\x12\x0e.qsc.GetOTSReq\x1a\x0f.qsc.GetOTSResp\"\x0c\x82\xd3\xe4\x93\x02\x06\x12\x04/ots\x12\x43\n\tGetHeight\x12\x11.qsc.GetHeightReq\x1a\x12.qsc.GetHeightResp\"\x0f\x82\xd3\xe4\x93\x02\t\x12\x07/height\x12?\n\x08GetBlock\x12\x10.qsc.GetBlockReq\x1a\x11.qsc.GetBlockResp\"\x0e\x82\xd3\xe4\x93\x02\x08\x12\x06/block\x12\x61\n\x10GetBlockByNumber\x12\x18.qsc.GetBlockByNumberReq\x1a\x19.qsc.GetBlockByNumberResp\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/block-by-number2\n\n\x08\x41\x64minAPIb\x06proto3')



_EMPTY = DESCRIPTOR.message_types_by_name['Empty']
_GETNODESTATEREQ = DESCRIPTOR.message_types_by_name['GetNodeStateReq']
_GETNODESTATERESP = DESCRIPTOR.message_types_by_name['GetNodeStateResp']
_GETKNOWNPEERSREQ = DESCRIPTOR.message_types_by_name['GetKnownPeersReq']
_GETKNOWNPEERSRESP = DESCRIPTOR.message_types_by_name['GetKnownPeersResp']
_GETPEERSSTATREQ = DESCRIPTOR.message_types_by_name['GetPeersStatReq']
_GETPEERSSTATRESP = DESCRIPTOR.message_types_by_name['GetPeersStatResp']
_GETCHAINSTATSREQ = DESCRIPTOR.message_types_by_name['GetChainStatsReq']
_GETCHAINSTATSRESP = DESCRIPTOR.message_types_by_name['GetChainStatsResp']
_GETSTATSREQ = DESCRIPTOR.message_types_by_name['GetStatsReq']
_GETSTATSRESP = DESCRIPTOR.message_types_by_name['GetStatsResp']
_GETADDRESSFROMPKREQ = DESCRIPTOR.message_types_by_name['GetAddressFromPKReq']
_GETADDRESSFROMPKRESP = DESCRIPTOR.message_types_by_name['GetAddressFromPKResp']
_BLOCKDATAPOINT = DESCRIPTOR.message_types_by_name['BlockDataPoint']
_GETADDRESSSTATEREQ = DESCRIPTOR.message_types_by_name['GetAddressStateReq']
_GETADDRESSSTATERESP = DESCRIPTOR.message_types_by_name['GetAddressStateResp']
_GETOPTIMIZEDADDRESSSTATERESP = DESCRIPTOR.message_types_by_name['GetOptimizedAddressStateResp']
_GETMULTISIGADDRESSSTATEREQ = DESCRIPTOR.message_types_by_name['GetMultiSigAddressStateReq']
_GETMULTISIGADDRESSSTATERESP = DESCRIPTOR.message_types_by_name['GetMultiSigAddressStateResp']
_ISSLAVEREQ = DESCRIPTOR.message_types_by_name['IsSlaveReq']
_ISSLAVERESP = DESCRIPTOR.message_types_by_name['IsSlaveResp']
_PARSEADDRESSREQ = DESCRIPTOR.message_types_by_name['ParseAddressReq']
_PARSEADDRESSRESP = DESCRIPTOR.message_types_by_name['ParseAddressResp']
_GETOBJECTREQ = DESCRIPTOR.message_types_by_name['GetObjectReq']
_GETOBJECTRESP = DESCRIPTOR.message_types_by_name['GetObjectResp']
_GETLATESTDATAREQ = DESCRIPTOR.message_types_by_name['GetLatestDataReq']
_GETLATESTDATARESP = DESCRIPTOR.message_types_by_name['GetLatestDataResp']
_TRANSFERCOINSREQ = DESCRIPTOR.message_types_by_name['TransferCoinsReq']
_TRANSFERCOINSRESP = DESCRIPTOR.message_types_by_name['TransferCoinsResp']
_PUSHTRANSACTIONREQ = DESCRIPTOR.message_types_by_name['PushTransactionReq']
_PUSHTRANSACTIONRESP = DESCRIPTOR.message_types_by_name['PushTransactionResp']
_MULTISIGCREATETXNREQ = DESCRIPTOR.message_types_by_name['MultiSigCreateTxnReq']
_MULTISIGSPENDTXNREQ = DESCRIPTOR.message_types_by_name['MultiSigSpendTxnReq']
_MULTISIGVOTETXNREQ = DESCRIPTOR.message_types_by_name['MultiSigVoteTxnReq']
_MESSAGETXNREQ = DESCRIPTOR.message_types_by_name['MessageTxnReq']
_TOKENTXNREQ = DESCRIPTOR.message_types_by_name['TokenTxnReq']
_TRANSFERTOKENTXNREQ = DESCRIPTOR.message_types_by_name['TransferTokenTxnReq']
_SLAVETXNREQ = DESCRIPTOR.message_types_by_name['SlaveTxnReq']
_LATTICETXNREQ = DESCRIPTOR.message_types_by_name['LatticeTxnReq']
_MINITRANSACTION = DESCRIPTOR.message_types_by_name['MiniTransaction']
_GETTRANSACTIONREQ = DESCRIPTOR.message_types_by_name['GetTransactionReq']
_GETTRANSACTIONRESP = DESCRIPTOR.message_types_by_name['GetTransactionResp']
_GETMINITRANSACTIONSBYADDRESSREQ = DESCRIPTOR.message_types_by_name['GetMiniTransactionsByAddressReq']
_GETMINITRANSACTIONSBYADDRESSRESP = DESCRIPTOR.message_types_by_name['GetMiniTransactionsByAddressResp']
_GETTRANSACTIONSBYADDRESSREQ = DESCRIPTOR.message_types_by_name['GetTransactionsByAddressReq']
_GETTRANSACTIONSBYADDRESSRESP = DESCRIPTOR.message_types_by_name['GetTransactionsByAddressResp']
_GETMULTISIGSPENDTXSBYADDRESSREQ = DESCRIPTOR.message_types_by_name['GetMultiSigSpendTxsByAddressReq']
_GETMULTISIGSPENDTXSBYADDRESSRESP = DESCRIPTOR.message_types_by_name['GetMultiSigSpendTxsByAddressResp']
_GETVOTESTATSREQ = DESCRIPTOR.message_types_by_name['GetVoteStatsReq']
_GETVOTESTATSRESP = DESCRIPTOR.message_types_by_name['GetVoteStatsResp']
_GETINBOXMESSAGESBYADDRESSRESP = DESCRIPTOR.message_types_by_name['GetInboxMessagesByAddressResp']
_INBOXMESSAGE = DESCRIPTOR.message_types_by_name['InboxMessage']
_TOKENDETAIL = DESCRIPTOR.message_types_by_name['TokenDetail']
_GETTOKENSBYADDRESSRESP = DESCRIPTOR.message_types_by_name['GetTokensByAddressResp']
_SLAVEDETAIL = DESCRIPTOR.message_types_by_name['SlaveDetail']
_GETSLAVESBYADDRESSRESP = DESCRIPTOR.message_types_by_name['GetSlavesByAddressResp']
_LATTICEPKSDETAIL = DESCRIPTOR.message_types_by_name['LatticePKsDetail']
_GETLATTICEPKSBYADDRESSRESP = DESCRIPTOR.message_types_by_name['GetLatticePKsByAddressResp']
_MULTISIGDETAIL = DESCRIPTOR.message_types_by_name['MultiSigDetail']
_GETMULTISIGADDRESSESBYADDRESSRESP = DESCRIPTOR.message_types_by_name['GetMultiSigAddressesByAddressResp']
_GETBALANCEREQ = DESCRIPTOR.message_types_by_name['GetBalanceReq']
_GETBALANCERESP = DESCRIPTOR.message_types_by_name['GetBalanceResp']
_GETTOTALBALANCEREQ = DESCRIPTOR.message_types_by_name['GetTotalBalanceReq']
_GETTOTALBALANCERESP = DESCRIPTOR.message_types_by_name['GetTotalBalanceResp']
_GETOTSREQ = DESCRIPTOR.message_types_by_name['GetOTSReq']
_OTSBITFIELDBYPAGE = DESCRIPTOR.message_types_by_name['OTSBitfieldByPage']
_GETOTSRESP = DESCRIPTOR.message_types_by_name['GetOTSResp']
_GETHEIGHTREQ = DESCRIPTOR.message_types_by_name['GetHeightReq']
_GETHEIGHTRESP = DESCRIPTOR.message_types_by_name['GetHeightResp']
_GETBLOCKREQ = DESCRIPTOR.message_types_by_name['GetBlockReq']
_GETBLOCKRESP = DESCRIPTOR.message_types_by_name['GetBlockResp']
_GETBLOCKBYNUMBERREQ = DESCRIPTOR.message_types_by_name['GetBlockByNumberReq']
_GETBLOCKBYNUMBERRESP = DESCRIPTOR.message_types_by_name['GetBlockByNumberResp']
_GETLOCALADDRESSESREQ = DESCRIPTOR.message_types_by_name['GetLocalAddressesReq']
_GETLOCALADDRESSESRESP = DESCRIPTOR.message_types_by_name['GetLocalAddressesResp']
_NODEINFO = DESCRIPTOR.message_types_by_name['NodeInfo']
_ADDRESSDESCRIPTOR = DESCRIPTOR.message_types_by_name['AddressDescriptor']
_STOREDPEERS = DESCRIPTOR.message_types_by_name['StoredPeers']
_PEER = DESCRIPTOR.message_types_by_name['Peer']
_ADDRESSSTATE = DESCRIPTOR.message_types_by_name['AddressState']
_ADDRESSSTATE_TOKENSENTRY = _ADDRESSSTATE.nested_types_by_name['TokensEntry']
_ADDRESSSTATE_SLAVEPKSACCESSTYPEENTRY = _ADDRESSSTATE.nested_types_by_name['SlavePksAccessTypeEntry']
_OPTIMIZEDADDRESSSTATE = DESCRIPTOR.message_types_by_name['OptimizedAddressState']
_MULTISIGADDRESSSTATE = DESCRIPTOR.message_types_by_name['MultiSigAddressState']
_MULTISIGADDRESSESLIST = DESCRIPTOR.message_types_by_name['MultiSigAddressesList']
_DATALIST = DESCRIPTOR.message_types_by_name['DataList']
_BITFIELD = DESCRIPTOR.message_types_by_name['Bitfield']
_TRANSACTIONHASHLIST = DESCRIPTOR.message_types_by_name['TransactionHashList']
_LATTICEPK = DESCRIPTOR.message_types_by_name['LatticePK']
_ADDRESSAMOUNT = DESCRIPTOR.message_types_by_name['AddressAmount']
_BLOCKHEADER = DESCRIPTOR.message_types_by_name['BlockHeader']
_BLOCKHEADEREXTENDED = DESCRIPTOR.message_types_by_name['BlockHeaderExtended']
_TRANSACTIONCOUNT = DESCRIPTOR.message_types_by_name['TransactionCount']
_TRANSACTIONCOUNT_COUNTENTRY = _TRANSACTIONCOUNT.nested_types_by_name['CountEntry']
_TRANSACTIONEXTENDED = DESCRIPTOR.message_types_by_name['TransactionExtended']
_BLOCKEXTENDED = DESCRIPTOR.message_types_by_name['BlockExtended']
_BLOCK = DESCRIPTOR.message_types_by_name['Block']
_GENESISBALANCE = DESCRIPTOR.message_types_by_name['GenesisBalance']
_BLOCKMETADATALIST = DESCRIPTOR.message_types_by_name['BlockMetaDataList']
_TRANSACTION = DESCRIPTOR.message_types_by_name['Transaction']
_TRANSACTION_TRANSFER = _TRANSACTION.nested_types_by_name['Transfer']
_TRANSACTION_COINBASE = _TRANSACTION.nested_types_by_name['CoinBase']
_TRANSACTION_LATTICEPUBLICKEY = _TRANSACTION.nested_types_by_name['LatticePublicKey']
_TRANSACTION_MESSAGE = _TRANSACTION.nested_types_by_name['Message']
_TRANSACTION_TOKEN = _TRANSACTION.nested_types_by_name['Token']
_TRANSACTION_TRANSFERTOKEN = _TRANSACTION.nested_types_by_name['TransferToken']
_TRANSACTION_SLAVE = _TRANSACTION.nested_types_by_name['Slave']
_TRANSACTION_MULTISIGCREATE = _TRANSACTION.nested_types_by_name['MultiSigCreate']
_TRANSACTION_MULTISIGSPEND = _TRANSACTION.nested_types_by_name['MultiSigSpend']
_TRANSACTION_MULTISIGVOTE = _TRANSACTION.nested_types_by_name['MultiSigVote']
_TRANSACTION_PROPOSALCREATE = _TRANSACTION.nested_types_by_name['ProposalCreate']
_TRANSACTION_PROPOSALCREATE_QIP = _TRANSACTION_PROPOSALCREATE.nested_types_by_name['QIP']
_TRANSACTION_PROPOSALCREATE_CONFIG = _TRANSACTION_PROPOSALCREATE.nested_types_by_name['Config']
_TRANSACTION_PROPOSALCREATE_OTHER = _TRANSACTION_PROPOSALCREATE.nested_types_by_name['Other']
_TRANSACTION_PROPOSALVOTE = _TRANSACTION.nested_types_by_name['ProposalVote']
_VOTESTATS = DESCRIPTOR.message_types_by_name['VoteStats']
_PROPOSALVOTESTATS = DESCRIPTOR.message_types_by_name['ProposalVoteStats']
_PROPOSALRECORD = DESCRIPTOR.message_types_by_name['ProposalRecord']
_TOKENLIST = DESCRIPTOR.message_types_by_name['TokenList']
_TOKENBALANCE = DESCRIPTOR.message_types_by_name['TokenBalance']
_SLAVEMETADATA = DESCRIPTOR.message_types_by_name['SlaveMetadata']
_LATTICEPKMETADATA = DESCRIPTOR.message_types_by_name['LatticePKMetadata']
_TOKENMETADATA = DESCRIPTOR.message_types_by_name['TokenMetadata']
_ENCRYPTEDEPHEMERALMESSAGE = DESCRIPTOR.message_types_by_name['EncryptedEphemeralMessage']
_ENCRYPTEDEPHEMERALMESSAGE_CHANNEL = _ENCRYPTEDEPHEMERALMESSAGE.nested_types_by_name['Channel']
_ADDRESSLIST = DESCRIPTOR.message_types_by_name['AddressList']
_BLOCKHEIGHTDATA = DESCRIPTOR.message_types_by_name['BlockHeightData']
_BLOCKMETADATA = DESCRIPTOR.message_types_by_name['BlockMetaData']
_BLOCKNUMBERMAPPING = DESCRIPTOR.message_types_by_name['BlockNumberMapping']
_PEERSTAT = DESCRIPTOR.message_types_by_name['PeerStat']
_NODECHAINSTATE = DESCRIPTOR.message_types_by_name['NodeChainState']
_NODEHEADERHASH = DESCRIPTOR.message_types_by_name['NodeHeaderHash']
_P2PACKNOWLEDGEMENT = DESCRIPTOR.message_types_by_name['P2PAcknowledgement']
_PEERINFO = DESCRIPTOR.message_types_by_name['PeerInfo']
_PEERS = DESCRIPTOR.message_types_by_name['Peers']
_DEVCONFIG = DESCRIPTOR.message_types_by_name['DevConfig']
_DEVCONFIG_CHAIN = _DEVCONFIG.nested_types_by_name['Chain']
_DEVCONFIG_BLOCK = _DEVCONFIG.nested_types_by_name['Block']
_DEVCONFIG_BLOCK_BLOCKSIZECONTROLLER = _DEVCONFIG_BLOCK.nested_types_by_name['BlockSizeController']
_DEVCONFIG_TRANSACTION = _DEVCONFIG.nested_types_by_name['Transaction']
_DEVCONFIG_TRANSACTION_MESSAGE = _DEVCONFIG_TRANSACTION.nested_types_by_name['Message']
_DEVCONFIG_TRANSACTION_SLAVE = _DEVCONFIG_TRANSACTION.nested_types_by_name['Slave']
_DEVCONFIG_TRANSACTION_TOKEN = _DEVCONFIG_TRANSACTION.nested_types_by_name['Token']
_DEVCONFIG_TRANSACTION_LATTICE = _DEVCONFIG_TRANSACTION.nested_types_by_name['Lattice']
_DEVCONFIG_TRANSACTION_FOUNDATIONMULTISIG = _DEVCONFIG_TRANSACTION.nested_types_by_name['FoundationMultiSig']
_DEVCONFIG_TRANSACTION_PROPOSAL = _DEVCONFIG_TRANSACTION.nested_types_by_name['Proposal']
_DEVCONFIG_POW = _DEVCONFIG.nested_types_by_name['POW']
_GETLATESTDATAREQ_FILTER = _GETLATESTDATAREQ.enum_types_by_name['Filter']
_PUSHTRANSACTIONRESP_RESPONSECODE = _PUSHTRANSACTIONRESP.enum_types_by_name['ResponseCode']
_GETMULTISIGSPENDTXSBYADDRESSREQ_FILTERTYPE = _GETMULTISIGSPENDTXSBYADDRESSREQ.enum_types_by_name['FilterType']
_NODEINFO_STATE = _NODEINFO.enum_types_by_name['State']
Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.Empty)
  })
_sym_db.RegisterMessage(Empty)

GetNodeStateReq = _reflection.GeneratedProtocolMessageType('GetNodeStateReq', (_message.Message,), {
  'DESCRIPTOR' : _GETNODESTATEREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetNodeStateReq)
  })
_sym_db.RegisterMessage(GetNodeStateReq)

GetNodeStateResp = _reflection.GeneratedProtocolMessageType('GetNodeStateResp', (_message.Message,), {
  'DESCRIPTOR' : _GETNODESTATERESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetNodeStateResp)
  })
_sym_db.RegisterMessage(GetNodeStateResp)

GetKnownPeersReq = _reflection.GeneratedProtocolMessageType('GetKnownPeersReq', (_message.Message,), {
  'DESCRIPTOR' : _GETKNOWNPEERSREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetKnownPeersReq)
  })
_sym_db.RegisterMessage(GetKnownPeersReq)

GetKnownPeersResp = _reflection.GeneratedProtocolMessageType('GetKnownPeersResp', (_message.Message,), {
  'DESCRIPTOR' : _GETKNOWNPEERSRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetKnownPeersResp)
  })
_sym_db.RegisterMessage(GetKnownPeersResp)

GetPeersStatReq = _reflection.GeneratedProtocolMessageType('GetPeersStatReq', (_message.Message,), {
  'DESCRIPTOR' : _GETPEERSSTATREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetPeersStatReq)
  })
_sym_db.RegisterMessage(GetPeersStatReq)

GetPeersStatResp = _reflection.GeneratedProtocolMessageType('GetPeersStatResp', (_message.Message,), {
  'DESCRIPTOR' : _GETPEERSSTATRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetPeersStatResp)
  })
_sym_db.RegisterMessage(GetPeersStatResp)

GetChainStatsReq = _reflection.GeneratedProtocolMessageType('GetChainStatsReq', (_message.Message,), {
  'DESCRIPTOR' : _GETCHAINSTATSREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetChainStatsReq)
  })
_sym_db.RegisterMessage(GetChainStatsReq)

GetChainStatsResp = _reflection.GeneratedProtocolMessageType('GetChainStatsResp', (_message.Message,), {
  'DESCRIPTOR' : _GETCHAINSTATSRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetChainStatsResp)
  })
_sym_db.RegisterMessage(GetChainStatsResp)

GetStatsReq = _reflection.GeneratedProtocolMessageType('GetStatsReq', (_message.Message,), {
  'DESCRIPTOR' : _GETSTATSREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetStatsReq)
  })
_sym_db.RegisterMessage(GetStatsReq)

GetStatsResp = _reflection.GeneratedProtocolMessageType('GetStatsResp', (_message.Message,), {
  'DESCRIPTOR' : _GETSTATSRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetStatsResp)
  })
_sym_db.RegisterMessage(GetStatsResp)

GetAddressFromPKReq = _reflection.GeneratedProtocolMessageType('GetAddressFromPKReq', (_message.Message,), {
  'DESCRIPTOR' : _GETADDRESSFROMPKREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetAddressFromPKReq)
  })
_sym_db.RegisterMessage(GetAddressFromPKReq)

GetAddressFromPKResp = _reflection.GeneratedProtocolMessageType('GetAddressFromPKResp', (_message.Message,), {
  'DESCRIPTOR' : _GETADDRESSFROMPKRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetAddressFromPKResp)
  })
_sym_db.RegisterMessage(GetAddressFromPKResp)

BlockDataPoint = _reflection.GeneratedProtocolMessageType('BlockDataPoint', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKDATAPOINT,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.BlockDataPoint)
  })
_sym_db.RegisterMessage(BlockDataPoint)

GetAddressStateReq = _reflection.GeneratedProtocolMessageType('GetAddressStateReq', (_message.Message,), {
  'DESCRIPTOR' : _GETADDRESSSTATEREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetAddressStateReq)
  })
_sym_db.RegisterMessage(GetAddressStateReq)

GetAddressStateResp = _reflection.GeneratedProtocolMessageType('GetAddressStateResp', (_message.Message,), {
  'DESCRIPTOR' : _GETADDRESSSTATERESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetAddressStateResp)
  })
_sym_db.RegisterMessage(GetAddressStateResp)

GetOptimizedAddressStateResp = _reflection.GeneratedProtocolMessageType('GetOptimizedAddressStateResp', (_message.Message,), {
  'DESCRIPTOR' : _GETOPTIMIZEDADDRESSSTATERESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetOptimizedAddressStateResp)
  })
_sym_db.RegisterMessage(GetOptimizedAddressStateResp)

GetMultiSigAddressStateReq = _reflection.GeneratedProtocolMessageType('GetMultiSigAddressStateReq', (_message.Message,), {
  'DESCRIPTOR' : _GETMULTISIGADDRESSSTATEREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetMultiSigAddressStateReq)
  })
_sym_db.RegisterMessage(GetMultiSigAddressStateReq)

GetMultiSigAddressStateResp = _reflection.GeneratedProtocolMessageType('GetMultiSigAddressStateResp', (_message.Message,), {
  'DESCRIPTOR' : _GETMULTISIGADDRESSSTATERESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetMultiSigAddressStateResp)
  })
_sym_db.RegisterMessage(GetMultiSigAddressStateResp)

IsSlaveReq = _reflection.GeneratedProtocolMessageType('IsSlaveReq', (_message.Message,), {
  'DESCRIPTOR' : _ISSLAVEREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.IsSlaveReq)
  })
_sym_db.RegisterMessage(IsSlaveReq)

IsSlaveResp = _reflection.GeneratedProtocolMessageType('IsSlaveResp', (_message.Message,), {
  'DESCRIPTOR' : _ISSLAVERESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.IsSlaveResp)
  })
_sym_db.RegisterMessage(IsSlaveResp)

ParseAddressReq = _reflection.GeneratedProtocolMessageType('ParseAddressReq', (_message.Message,), {
  'DESCRIPTOR' : _PARSEADDRESSREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.ParseAddressReq)
  })
_sym_db.RegisterMessage(ParseAddressReq)

ParseAddressResp = _reflection.GeneratedProtocolMessageType('ParseAddressResp', (_message.Message,), {
  'DESCRIPTOR' : _PARSEADDRESSRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.ParseAddressResp)
  })
_sym_db.RegisterMessage(ParseAddressResp)

GetObjectReq = _reflection.GeneratedProtocolMessageType('GetObjectReq', (_message.Message,), {
  'DESCRIPTOR' : _GETOBJECTREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetObjectReq)
  })
_sym_db.RegisterMessage(GetObjectReq)

GetObjectResp = _reflection.GeneratedProtocolMessageType('GetObjectResp', (_message.Message,), {
  'DESCRIPTOR' : _GETOBJECTRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetObjectResp)
  })
_sym_db.RegisterMessage(GetObjectResp)

GetLatestDataReq = _reflection.GeneratedProtocolMessageType('GetLatestDataReq', (_message.Message,), {
  'DESCRIPTOR' : _GETLATESTDATAREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetLatestDataReq)
  })
_sym_db.RegisterMessage(GetLatestDataReq)

GetLatestDataResp = _reflection.GeneratedProtocolMessageType('GetLatestDataResp', (_message.Message,), {
  'DESCRIPTOR' : _GETLATESTDATARESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetLatestDataResp)
  })
_sym_db.RegisterMessage(GetLatestDataResp)

TransferCoinsReq = _reflection.GeneratedProtocolMessageType('TransferCoinsReq', (_message.Message,), {
  'DESCRIPTOR' : _TRANSFERCOINSREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.TransferCoinsReq)
  })
_sym_db.RegisterMessage(TransferCoinsReq)

TransferCoinsResp = _reflection.GeneratedProtocolMessageType('TransferCoinsResp', (_message.Message,), {
  'DESCRIPTOR' : _TRANSFERCOINSRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.TransferCoinsResp)
  })
_sym_db.RegisterMessage(TransferCoinsResp)

PushTransactionReq = _reflection.GeneratedProtocolMessageType('PushTransactionReq', (_message.Message,), {
  'DESCRIPTOR' : _PUSHTRANSACTIONREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.PushTransactionReq)
  })
_sym_db.RegisterMessage(PushTransactionReq)

PushTransactionResp = _reflection.GeneratedProtocolMessageType('PushTransactionResp', (_message.Message,), {
  'DESCRIPTOR' : _PUSHTRANSACTIONRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.PushTransactionResp)
  })
_sym_db.RegisterMessage(PushTransactionResp)

MultiSigCreateTxnReq = _reflection.GeneratedProtocolMessageType('MultiSigCreateTxnReq', (_message.Message,), {
  'DESCRIPTOR' : _MULTISIGCREATETXNREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.MultiSigCreateTxnReq)
  })
_sym_db.RegisterMessage(MultiSigCreateTxnReq)

MultiSigSpendTxnReq = _reflection.GeneratedProtocolMessageType('MultiSigSpendTxnReq', (_message.Message,), {
  'DESCRIPTOR' : _MULTISIGSPENDTXNREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.MultiSigSpendTxnReq)
  })
_sym_db.RegisterMessage(MultiSigSpendTxnReq)

MultiSigVoteTxnReq = _reflection.GeneratedProtocolMessageType('MultiSigVoteTxnReq', (_message.Message,), {
  'DESCRIPTOR' : _MULTISIGVOTETXNREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.MultiSigVoteTxnReq)
  })
_sym_db.RegisterMessage(MultiSigVoteTxnReq)

MessageTxnReq = _reflection.GeneratedProtocolMessageType('MessageTxnReq', (_message.Message,), {
  'DESCRIPTOR' : _MESSAGETXNREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.MessageTxnReq)
  })
_sym_db.RegisterMessage(MessageTxnReq)

TokenTxnReq = _reflection.GeneratedProtocolMessageType('TokenTxnReq', (_message.Message,), {
  'DESCRIPTOR' : _TOKENTXNREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.TokenTxnReq)
  })
_sym_db.RegisterMessage(TokenTxnReq)

TransferTokenTxnReq = _reflection.GeneratedProtocolMessageType('TransferTokenTxnReq', (_message.Message,), {
  'DESCRIPTOR' : _TRANSFERTOKENTXNREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.TransferTokenTxnReq)
  })
_sym_db.RegisterMessage(TransferTokenTxnReq)

SlaveTxnReq = _reflection.GeneratedProtocolMessageType('SlaveTxnReq', (_message.Message,), {
  'DESCRIPTOR' : _SLAVETXNREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.SlaveTxnReq)
  })
_sym_db.RegisterMessage(SlaveTxnReq)

LatticeTxnReq = _reflection.GeneratedProtocolMessageType('LatticeTxnReq', (_message.Message,), {
  'DESCRIPTOR' : _LATTICETXNREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.LatticeTxnReq)
  })
_sym_db.RegisterMessage(LatticeTxnReq)

MiniTransaction = _reflection.GeneratedProtocolMessageType('MiniTransaction', (_message.Message,), {
  'DESCRIPTOR' : _MINITRANSACTION,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.MiniTransaction)
  })
_sym_db.RegisterMessage(MiniTransaction)

GetTransactionReq = _reflection.GeneratedProtocolMessageType('GetTransactionReq', (_message.Message,), {
  'DESCRIPTOR' : _GETTRANSACTIONREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetTransactionReq)
  })
_sym_db.RegisterMessage(GetTransactionReq)

GetTransactionResp = _reflection.GeneratedProtocolMessageType('GetTransactionResp', (_message.Message,), {
  'DESCRIPTOR' : _GETTRANSACTIONRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetTransactionResp)
  })
_sym_db.RegisterMessage(GetTransactionResp)

GetMiniTransactionsByAddressReq = _reflection.GeneratedProtocolMessageType('GetMiniTransactionsByAddressReq', (_message.Message,), {
  'DESCRIPTOR' : _GETMINITRANSACTIONSBYADDRESSREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetMiniTransactionsByAddressReq)
  })
_sym_db.RegisterMessage(GetMiniTransactionsByAddressReq)

GetMiniTransactionsByAddressResp = _reflection.GeneratedProtocolMessageType('GetMiniTransactionsByAddressResp', (_message.Message,), {
  'DESCRIPTOR' : _GETMINITRANSACTIONSBYADDRESSRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetMiniTransactionsByAddressResp)
  })
_sym_db.RegisterMessage(GetMiniTransactionsByAddressResp)

GetTransactionsByAddressReq = _reflection.GeneratedProtocolMessageType('GetTransactionsByAddressReq', (_message.Message,), {
  'DESCRIPTOR' : _GETTRANSACTIONSBYADDRESSREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetTransactionsByAddressReq)
  })
_sym_db.RegisterMessage(GetTransactionsByAddressReq)

GetTransactionsByAddressResp = _reflection.GeneratedProtocolMessageType('GetTransactionsByAddressResp', (_message.Message,), {
  'DESCRIPTOR' : _GETTRANSACTIONSBYADDRESSRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetTransactionsByAddressResp)
  })
_sym_db.RegisterMessage(GetTransactionsByAddressResp)

GetMultiSigSpendTxsByAddressReq = _reflection.GeneratedProtocolMessageType('GetMultiSigSpendTxsByAddressReq', (_message.Message,), {
  'DESCRIPTOR' : _GETMULTISIGSPENDTXSBYADDRESSREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetMultiSigSpendTxsByAddressReq)
  })
_sym_db.RegisterMessage(GetMultiSigSpendTxsByAddressReq)

GetMultiSigSpendTxsByAddressResp = _reflection.GeneratedProtocolMessageType('GetMultiSigSpendTxsByAddressResp', (_message.Message,), {
  'DESCRIPTOR' : _GETMULTISIGSPENDTXSBYADDRESSRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetMultiSigSpendTxsByAddressResp)
  })
_sym_db.RegisterMessage(GetMultiSigSpendTxsByAddressResp)

GetVoteStatsReq = _reflection.GeneratedProtocolMessageType('GetVoteStatsReq', (_message.Message,), {
  'DESCRIPTOR' : _GETVOTESTATSREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetVoteStatsReq)
  })
_sym_db.RegisterMessage(GetVoteStatsReq)

GetVoteStatsResp = _reflection.GeneratedProtocolMessageType('GetVoteStatsResp', (_message.Message,), {
  'DESCRIPTOR' : _GETVOTESTATSRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetVoteStatsResp)
  })
_sym_db.RegisterMessage(GetVoteStatsResp)

GetInboxMessagesByAddressResp = _reflection.GeneratedProtocolMessageType('GetInboxMessagesByAddressResp', (_message.Message,), {
  'DESCRIPTOR' : _GETINBOXMESSAGESBYADDRESSRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetInboxMessagesByAddressResp)
  })
_sym_db.RegisterMessage(GetInboxMessagesByAddressResp)

InboxMessage = _reflection.GeneratedProtocolMessageType('InboxMessage', (_message.Message,), {
  'DESCRIPTOR' : _INBOXMESSAGE,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.InboxMessage)
  })
_sym_db.RegisterMessage(InboxMessage)

TokenDetail = _reflection.GeneratedProtocolMessageType('TokenDetail', (_message.Message,), {
  'DESCRIPTOR' : _TOKENDETAIL,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.TokenDetail)
  })
_sym_db.RegisterMessage(TokenDetail)

GetTokensByAddressResp = _reflection.GeneratedProtocolMessageType('GetTokensByAddressResp', (_message.Message,), {
  'DESCRIPTOR' : _GETTOKENSBYADDRESSRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetTokensByAddressResp)
  })
_sym_db.RegisterMessage(GetTokensByAddressResp)

SlaveDetail = _reflection.GeneratedProtocolMessageType('SlaveDetail', (_message.Message,), {
  'DESCRIPTOR' : _SLAVEDETAIL,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.SlaveDetail)
  })
_sym_db.RegisterMessage(SlaveDetail)

GetSlavesByAddressResp = _reflection.GeneratedProtocolMessageType('GetSlavesByAddressResp', (_message.Message,), {
  'DESCRIPTOR' : _GETSLAVESBYADDRESSRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetSlavesByAddressResp)
  })
_sym_db.RegisterMessage(GetSlavesByAddressResp)

LatticePKsDetail = _reflection.GeneratedProtocolMessageType('LatticePKsDetail', (_message.Message,), {
  'DESCRIPTOR' : _LATTICEPKSDETAIL,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.LatticePKsDetail)
  })
_sym_db.RegisterMessage(LatticePKsDetail)

GetLatticePKsByAddressResp = _reflection.GeneratedProtocolMessageType('GetLatticePKsByAddressResp', (_message.Message,), {
  'DESCRIPTOR' : _GETLATTICEPKSBYADDRESSRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetLatticePKsByAddressResp)
  })
_sym_db.RegisterMessage(GetLatticePKsByAddressResp)

MultiSigDetail = _reflection.GeneratedProtocolMessageType('MultiSigDetail', (_message.Message,), {
  'DESCRIPTOR' : _MULTISIGDETAIL,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.MultiSigDetail)
  })
_sym_db.RegisterMessage(MultiSigDetail)

GetMultiSigAddressesByAddressResp = _reflection.GeneratedProtocolMessageType('GetMultiSigAddressesByAddressResp', (_message.Message,), {
  'DESCRIPTOR' : _GETMULTISIGADDRESSESBYADDRESSRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetMultiSigAddressesByAddressResp)
  })
_sym_db.RegisterMessage(GetMultiSigAddressesByAddressResp)

GetBalanceReq = _reflection.GeneratedProtocolMessageType('GetBalanceReq', (_message.Message,), {
  'DESCRIPTOR' : _GETBALANCEREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetBalanceReq)
  })
_sym_db.RegisterMessage(GetBalanceReq)

GetBalanceResp = _reflection.GeneratedProtocolMessageType('GetBalanceResp', (_message.Message,), {
  'DESCRIPTOR' : _GETBALANCERESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetBalanceResp)
  })
_sym_db.RegisterMessage(GetBalanceResp)

GetTotalBalanceReq = _reflection.GeneratedProtocolMessageType('GetTotalBalanceReq', (_message.Message,), {
  'DESCRIPTOR' : _GETTOTALBALANCEREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetTotalBalanceReq)
  })
_sym_db.RegisterMessage(GetTotalBalanceReq)

GetTotalBalanceResp = _reflection.GeneratedProtocolMessageType('GetTotalBalanceResp', (_message.Message,), {
  'DESCRIPTOR' : _GETTOTALBALANCERESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetTotalBalanceResp)
  })
_sym_db.RegisterMessage(GetTotalBalanceResp)

GetOTSReq = _reflection.GeneratedProtocolMessageType('GetOTSReq', (_message.Message,), {
  'DESCRIPTOR' : _GETOTSREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetOTSReq)
  })
_sym_db.RegisterMessage(GetOTSReq)

OTSBitfieldByPage = _reflection.GeneratedProtocolMessageType('OTSBitfieldByPage', (_message.Message,), {
  'DESCRIPTOR' : _OTSBITFIELDBYPAGE,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.OTSBitfieldByPage)
  })
_sym_db.RegisterMessage(OTSBitfieldByPage)

GetOTSResp = _reflection.GeneratedProtocolMessageType('GetOTSResp', (_message.Message,), {
  'DESCRIPTOR' : _GETOTSRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetOTSResp)
  })
_sym_db.RegisterMessage(GetOTSResp)

GetHeightReq = _reflection.GeneratedProtocolMessageType('GetHeightReq', (_message.Message,), {
  'DESCRIPTOR' : _GETHEIGHTREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetHeightReq)
  })
_sym_db.RegisterMessage(GetHeightReq)

GetHeightResp = _reflection.GeneratedProtocolMessageType('GetHeightResp', (_message.Message,), {
  'DESCRIPTOR' : _GETHEIGHTRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetHeightResp)
  })
_sym_db.RegisterMessage(GetHeightResp)

GetBlockReq = _reflection.GeneratedProtocolMessageType('GetBlockReq', (_message.Message,), {
  'DESCRIPTOR' : _GETBLOCKREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetBlockReq)
  })
_sym_db.RegisterMessage(GetBlockReq)

GetBlockResp = _reflection.GeneratedProtocolMessageType('GetBlockResp', (_message.Message,), {
  'DESCRIPTOR' : _GETBLOCKRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetBlockResp)
  })
_sym_db.RegisterMessage(GetBlockResp)

GetBlockByNumberReq = _reflection.GeneratedProtocolMessageType('GetBlockByNumberReq', (_message.Message,), {
  'DESCRIPTOR' : _GETBLOCKBYNUMBERREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetBlockByNumberReq)
  })
_sym_db.RegisterMessage(GetBlockByNumberReq)

GetBlockByNumberResp = _reflection.GeneratedProtocolMessageType('GetBlockByNumberResp', (_message.Message,), {
  'DESCRIPTOR' : _GETBLOCKBYNUMBERRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetBlockByNumberResp)
  })
_sym_db.RegisterMessage(GetBlockByNumberResp)

GetLocalAddressesReq = _reflection.GeneratedProtocolMessageType('GetLocalAddressesReq', (_message.Message,), {
  'DESCRIPTOR' : _GETLOCALADDRESSESREQ,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetLocalAddressesReq)
  })
_sym_db.RegisterMessage(GetLocalAddressesReq)

GetLocalAddressesResp = _reflection.GeneratedProtocolMessageType('GetLocalAddressesResp', (_message.Message,), {
  'DESCRIPTOR' : _GETLOCALADDRESSESRESP,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetLocalAddressesResp)
  })
_sym_db.RegisterMessage(GetLocalAddressesResp)

NodeInfo = _reflection.GeneratedProtocolMessageType('NodeInfo', (_message.Message,), {
  'DESCRIPTOR' : _NODEINFO,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.NodeInfo)
  })
_sym_db.RegisterMessage(NodeInfo)

AddressDescriptor = _reflection.GeneratedProtocolMessageType('AddressDescriptor', (_message.Message,), {
  'DESCRIPTOR' : _ADDRESSDESCRIPTOR,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.AddressDescriptor)
  })
_sym_db.RegisterMessage(AddressDescriptor)

StoredPeers = _reflection.GeneratedProtocolMessageType('StoredPeers', (_message.Message,), {
  'DESCRIPTOR' : _STOREDPEERS,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.StoredPeers)
  })
_sym_db.RegisterMessage(StoredPeers)

Peer = _reflection.GeneratedProtocolMessageType('Peer', (_message.Message,), {
  'DESCRIPTOR' : _PEER,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.Peer)
  })
_sym_db.RegisterMessage(Peer)

AddressState = _reflection.GeneratedProtocolMessageType('AddressState', (_message.Message,), {

  'TokensEntry' : _reflection.GeneratedProtocolMessageType('TokensEntry', (_message.Message,), {
    'DESCRIPTOR' : _ADDRESSSTATE_TOKENSENTRY,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.AddressState.TokensEntry)
    })
  ,

  'SlavePksAccessTypeEntry' : _reflection.GeneratedProtocolMessageType('SlavePksAccessTypeEntry', (_message.Message,), {
    'DESCRIPTOR' : _ADDRESSSTATE_SLAVEPKSACCESSTYPEENTRY,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.AddressState.SlavePksAccessTypeEntry)
    })
  ,
  'DESCRIPTOR' : _ADDRESSSTATE,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.AddressState)
  })
_sym_db.RegisterMessage(AddressState)
_sym_db.RegisterMessage(AddressState.TokensEntry)
_sym_db.RegisterMessage(AddressState.SlavePksAccessTypeEntry)

OptimizedAddressState = _reflection.GeneratedProtocolMessageType('OptimizedAddressState', (_message.Message,), {
  'DESCRIPTOR' : _OPTIMIZEDADDRESSSTATE,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.OptimizedAddressState)
  })
_sym_db.RegisterMessage(OptimizedAddressState)

MultiSigAddressState = _reflection.GeneratedProtocolMessageType('MultiSigAddressState', (_message.Message,), {
  'DESCRIPTOR' : _MULTISIGADDRESSSTATE,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.MultiSigAddressState)
  })
_sym_db.RegisterMessage(MultiSigAddressState)

MultiSigAddressesList = _reflection.GeneratedProtocolMessageType('MultiSigAddressesList', (_message.Message,), {
  'DESCRIPTOR' : _MULTISIGADDRESSESLIST,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.MultiSigAddressesList)
  })
_sym_db.RegisterMessage(MultiSigAddressesList)

DataList = _reflection.GeneratedProtocolMessageType('DataList', (_message.Message,), {
  'DESCRIPTOR' : _DATALIST,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.DataList)
  })
_sym_db.RegisterMessage(DataList)

Bitfield = _reflection.GeneratedProtocolMessageType('Bitfield', (_message.Message,), {
  'DESCRIPTOR' : _BITFIELD,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.Bitfield)
  })
_sym_db.RegisterMessage(Bitfield)

TransactionHashList = _reflection.GeneratedProtocolMessageType('TransactionHashList', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONHASHLIST,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.TransactionHashList)
  })
_sym_db.RegisterMessage(TransactionHashList)

LatticePK = _reflection.GeneratedProtocolMessageType('LatticePK', (_message.Message,), {
  'DESCRIPTOR' : _LATTICEPK,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.LatticePK)
  })
_sym_db.RegisterMessage(LatticePK)

AddressAmount = _reflection.GeneratedProtocolMessageType('AddressAmount', (_message.Message,), {
  'DESCRIPTOR' : _ADDRESSAMOUNT,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.AddressAmount)
  })
_sym_db.RegisterMessage(AddressAmount)

BlockHeader = _reflection.GeneratedProtocolMessageType('BlockHeader', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKHEADER,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.BlockHeader)
  })
_sym_db.RegisterMessage(BlockHeader)

BlockHeaderExtended = _reflection.GeneratedProtocolMessageType('BlockHeaderExtended', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKHEADEREXTENDED,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.BlockHeaderExtended)
  })
_sym_db.RegisterMessage(BlockHeaderExtended)

TransactionCount = _reflection.GeneratedProtocolMessageType('TransactionCount', (_message.Message,), {

  'CountEntry' : _reflection.GeneratedProtocolMessageType('CountEntry', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTIONCOUNT_COUNTENTRY,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.TransactionCount.CountEntry)
    })
  ,
  'DESCRIPTOR' : _TRANSACTIONCOUNT,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.TransactionCount)
  })
_sym_db.RegisterMessage(TransactionCount)
_sym_db.RegisterMessage(TransactionCount.CountEntry)

TransactionExtended = _reflection.GeneratedProtocolMessageType('TransactionExtended', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONEXTENDED,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.TransactionExtended)
  })
_sym_db.RegisterMessage(TransactionExtended)

BlockExtended = _reflection.GeneratedProtocolMessageType('BlockExtended', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKEXTENDED,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.BlockExtended)
  })
_sym_db.RegisterMessage(BlockExtended)

Block = _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), {
  'DESCRIPTOR' : _BLOCK,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.Block)
  })
_sym_db.RegisterMessage(Block)

GenesisBalance = _reflection.GeneratedProtocolMessageType('GenesisBalance', (_message.Message,), {
  'DESCRIPTOR' : _GENESISBALANCE,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GenesisBalance)
  })
_sym_db.RegisterMessage(GenesisBalance)

BlockMetaDataList = _reflection.GeneratedProtocolMessageType('BlockMetaDataList', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKMETADATALIST,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.BlockMetaDataList)
  })
_sym_db.RegisterMessage(BlockMetaDataList)

Transaction = _reflection.GeneratedProtocolMessageType('Transaction', (_message.Message,), {

  'Transfer' : _reflection.GeneratedProtocolMessageType('Transfer', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTION_TRANSFER,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.Transaction.Transfer)
    })
  ,

  'CoinBase' : _reflection.GeneratedProtocolMessageType('CoinBase', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTION_COINBASE,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.Transaction.CoinBase)
    })
  ,

  'LatticePublicKey' : _reflection.GeneratedProtocolMessageType('LatticePublicKey', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTION_LATTICEPUBLICKEY,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.Transaction.LatticePublicKey)
    })
  ,

  'Message' : _reflection.GeneratedProtocolMessageType('Message', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTION_MESSAGE,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.Transaction.Message)
    })
  ,

  'Token' : _reflection.GeneratedProtocolMessageType('Token', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTION_TOKEN,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.Transaction.Token)
    })
  ,

  'TransferToken' : _reflection.GeneratedProtocolMessageType('TransferToken', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTION_TRANSFERTOKEN,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.Transaction.TransferToken)
    })
  ,

  'Slave' : _reflection.GeneratedProtocolMessageType('Slave', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTION_SLAVE,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.Transaction.Slave)
    })
  ,

  'MultiSigCreate' : _reflection.GeneratedProtocolMessageType('MultiSigCreate', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTION_MULTISIGCREATE,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.Transaction.MultiSigCreate)
    })
  ,

  'MultiSigSpend' : _reflection.GeneratedProtocolMessageType('MultiSigSpend', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTION_MULTISIGSPEND,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.Transaction.MultiSigSpend)
    })
  ,

  'MultiSigVote' : _reflection.GeneratedProtocolMessageType('MultiSigVote', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTION_MULTISIGVOTE,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.Transaction.MultiSigVote)
    })
  ,

  'ProposalCreate' : _reflection.GeneratedProtocolMessageType('ProposalCreate', (_message.Message,), {

    'QIP' : _reflection.GeneratedProtocolMessageType('QIP', (_message.Message,), {
      'DESCRIPTOR' : _TRANSACTION_PROPOSALCREATE_QIP,
      '__module__' : 'qsc_pb2'
      # @@protoc_insertion_point(class_scope:qsc.Transaction.ProposalCreate.QIP)
      })
    ,

    'Config' : _reflection.GeneratedProtocolMessageType('Config', (_message.Message,), {
      'DESCRIPTOR' : _TRANSACTION_PROPOSALCREATE_CONFIG,
      '__module__' : 'qsc_pb2'
      # @@protoc_insertion_point(class_scope:qsc.Transaction.ProposalCreate.Config)
      })
    ,

    'Other' : _reflection.GeneratedProtocolMessageType('Other', (_message.Message,), {
      'DESCRIPTOR' : _TRANSACTION_PROPOSALCREATE_OTHER,
      '__module__' : 'qsc_pb2'
      # @@protoc_insertion_point(class_scope:qsc.Transaction.ProposalCreate.Other)
      })
    ,
    'DESCRIPTOR' : _TRANSACTION_PROPOSALCREATE,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.Transaction.ProposalCreate)
    })
  ,

  'ProposalVote' : _reflection.GeneratedProtocolMessageType('ProposalVote', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTION_PROPOSALVOTE,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.Transaction.ProposalVote)
    })
  ,
  'DESCRIPTOR' : _TRANSACTION,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.Transaction)
  })
_sym_db.RegisterMessage(Transaction)
_sym_db.RegisterMessage(Transaction.Transfer)
_sym_db.RegisterMessage(Transaction.CoinBase)
_sym_db.RegisterMessage(Transaction.LatticePublicKey)
_sym_db.RegisterMessage(Transaction.Message)
_sym_db.RegisterMessage(Transaction.Token)
_sym_db.RegisterMessage(Transaction.TransferToken)
_sym_db.RegisterMessage(Transaction.Slave)
_sym_db.RegisterMessage(Transaction.MultiSigCreate)
_sym_db.RegisterMessage(Transaction.MultiSigSpend)
_sym_db.RegisterMessage(Transaction.MultiSigVote)
_sym_db.RegisterMessage(Transaction.ProposalCreate)
_sym_db.RegisterMessage(Transaction.ProposalCreate.QIP)
_sym_db.RegisterMessage(Transaction.ProposalCreate.Config)
_sym_db.RegisterMessage(Transaction.ProposalCreate.Other)
_sym_db.RegisterMessage(Transaction.ProposalVote)

VoteStats = _reflection.GeneratedProtocolMessageType('VoteStats', (_message.Message,), {
  'DESCRIPTOR' : _VOTESTATS,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.VoteStats)
  })
_sym_db.RegisterMessage(VoteStats)

ProposalVoteStats = _reflection.GeneratedProtocolMessageType('ProposalVoteStats', (_message.Message,), {
  'DESCRIPTOR' : _PROPOSALVOTESTATS,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.ProposalVoteStats)
  })
_sym_db.RegisterMessage(ProposalVoteStats)

ProposalRecord = _reflection.GeneratedProtocolMessageType('ProposalRecord', (_message.Message,), {
  'DESCRIPTOR' : _PROPOSALRECORD,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.ProposalRecord)
  })
_sym_db.RegisterMessage(ProposalRecord)

TokenList = _reflection.GeneratedProtocolMessageType('TokenList', (_message.Message,), {
  'DESCRIPTOR' : _TOKENLIST,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.TokenList)
  })
_sym_db.RegisterMessage(TokenList)

TokenBalance = _reflection.GeneratedProtocolMessageType('TokenBalance', (_message.Message,), {
  'DESCRIPTOR' : _TOKENBALANCE,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.TokenBalance)
  })
_sym_db.RegisterMessage(TokenBalance)

SlaveMetadata = _reflection.GeneratedProtocolMessageType('SlaveMetadata', (_message.Message,), {
  'DESCRIPTOR' : _SLAVEMETADATA,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.SlaveMetadata)
  })
_sym_db.RegisterMessage(SlaveMetadata)

LatticePKMetadata = _reflection.GeneratedProtocolMessageType('LatticePKMetadata', (_message.Message,), {
  'DESCRIPTOR' : _LATTICEPKMETADATA,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.LatticePKMetadata)
  })
_sym_db.RegisterMessage(LatticePKMetadata)

TokenMetadata = _reflection.GeneratedProtocolMessageType('TokenMetadata', (_message.Message,), {
  'DESCRIPTOR' : _TOKENMETADATA,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.TokenMetadata)
  })
_sym_db.RegisterMessage(TokenMetadata)

EncryptedEphemeralMessage = _reflection.GeneratedProtocolMessageType('EncryptedEphemeralMessage', (_message.Message,), {

  'Channel' : _reflection.GeneratedProtocolMessageType('Channel', (_message.Message,), {
    'DESCRIPTOR' : _ENCRYPTEDEPHEMERALMESSAGE_CHANNEL,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.EncryptedEphemeralMessage.Channel)
    })
  ,
  'DESCRIPTOR' : _ENCRYPTEDEPHEMERALMESSAGE,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.EncryptedEphemeralMessage)
  })
_sym_db.RegisterMessage(EncryptedEphemeralMessage)
_sym_db.RegisterMessage(EncryptedEphemeralMessage.Channel)

AddressList = _reflection.GeneratedProtocolMessageType('AddressList', (_message.Message,), {
  'DESCRIPTOR' : _ADDRESSLIST,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.AddressList)
  })
_sym_db.RegisterMessage(AddressList)

BlockHeightData = _reflection.GeneratedProtocolMessageType('BlockHeightData', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKHEIGHTDATA,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.BlockHeightData)
  })
_sym_db.RegisterMessage(BlockHeightData)

BlockMetaData = _reflection.GeneratedProtocolMessageType('BlockMetaData', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKMETADATA,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.BlockMetaData)
  })
_sym_db.RegisterMessage(BlockMetaData)

BlockNumberMapping = _reflection.GeneratedProtocolMessageType('BlockNumberMapping', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKNUMBERMAPPING,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.BlockNumberMapping)
  })
_sym_db.RegisterMessage(BlockNumberMapping)

PeerStat = _reflection.GeneratedProtocolMessageType('PeerStat', (_message.Message,), {
  'DESCRIPTOR' : _PEERSTAT,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.PeerStat)
  })
_sym_db.RegisterMessage(PeerStat)

NodeChainState = _reflection.GeneratedProtocolMessageType('NodeChainState', (_message.Message,), {
  'DESCRIPTOR' : _NODECHAINSTATE,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.NodeChainState)
  })
_sym_db.RegisterMessage(NodeChainState)

NodeHeaderHash = _reflection.GeneratedProtocolMessageType('NodeHeaderHash', (_message.Message,), {
  'DESCRIPTOR' : _NODEHEADERHASH,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.NodeHeaderHash)
  })
_sym_db.RegisterMessage(NodeHeaderHash)

P2PAcknowledgement = _reflection.GeneratedProtocolMessageType('P2PAcknowledgement', (_message.Message,), {
  'DESCRIPTOR' : _P2PACKNOWLEDGEMENT,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.P2PAcknowledgement)
  })
_sym_db.RegisterMessage(P2PAcknowledgement)

PeerInfo = _reflection.GeneratedProtocolMessageType('PeerInfo', (_message.Message,), {
  'DESCRIPTOR' : _PEERINFO,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.PeerInfo)
  })
_sym_db.RegisterMessage(PeerInfo)

Peers = _reflection.GeneratedProtocolMessageType('Peers', (_message.Message,), {
  'DESCRIPTOR' : _PEERS,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.Peers)
  })
_sym_db.RegisterMessage(Peers)

DevConfig = _reflection.GeneratedProtocolMessageType('DevConfig', (_message.Message,), {

  'Chain' : _reflection.GeneratedProtocolMessageType('Chain', (_message.Message,), {
    'DESCRIPTOR' : _DEVCONFIG_CHAIN,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.DevConfig.Chain)
    })
  ,

  'Block' : _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), {

    'BlockSizeController' : _reflection.GeneratedProtocolMessageType('BlockSizeController', (_message.Message,), {
      'DESCRIPTOR' : _DEVCONFIG_BLOCK_BLOCKSIZECONTROLLER,
      '__module__' : 'qsc_pb2'
      # @@protoc_insertion_point(class_scope:qsc.DevConfig.Block.BlockSizeController)
      })
    ,
    'DESCRIPTOR' : _DEVCONFIG_BLOCK,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.DevConfig.Block)
    })
  ,

  'Transaction' : _reflection.GeneratedProtocolMessageType('Transaction', (_message.Message,), {

    'Message' : _reflection.GeneratedProtocolMessageType('Message', (_message.Message,), {
      'DESCRIPTOR' : _DEVCONFIG_TRANSACTION_MESSAGE,
      '__module__' : 'qsc_pb2'
      # @@protoc_insertion_point(class_scope:qsc.DevConfig.Transaction.Message)
      })
    ,

    'Slave' : _reflection.GeneratedProtocolMessageType('Slave', (_message.Message,), {
      'DESCRIPTOR' : _DEVCONFIG_TRANSACTION_SLAVE,
      '__module__' : 'qsc_pb2'
      # @@protoc_insertion_point(class_scope:qsc.DevConfig.Transaction.Slave)
      })
    ,

    'Token' : _reflection.GeneratedProtocolMessageType('Token', (_message.Message,), {
      'DESCRIPTOR' : _DEVCONFIG_TRANSACTION_TOKEN,
      '__module__' : 'qsc_pb2'
      # @@protoc_insertion_point(class_scope:qsc.DevConfig.Transaction.Token)
      })
    ,

    'Lattice' : _reflection.GeneratedProtocolMessageType('Lattice', (_message.Message,), {
      'DESCRIPTOR' : _DEVCONFIG_TRANSACTION_LATTICE,
      '__module__' : 'qsc_pb2'
      # @@protoc_insertion_point(class_scope:qsc.DevConfig.Transaction.Lattice)
      })
    ,

    'FoundationMultiSig' : _reflection.GeneratedProtocolMessageType('FoundationMultiSig', (_message.Message,), {
      'DESCRIPTOR' : _DEVCONFIG_TRANSACTION_FOUNDATIONMULTISIG,
      '__module__' : 'qsc_pb2'
      # @@protoc_insertion_point(class_scope:qsc.DevConfig.Transaction.FoundationMultiSig)
      })
    ,

    'Proposal' : _reflection.GeneratedProtocolMessageType('Proposal', (_message.Message,), {
      'DESCRIPTOR' : _DEVCONFIG_TRANSACTION_PROPOSAL,
      '__module__' : 'qsc_pb2'
      # @@protoc_insertion_point(class_scope:qsc.DevConfig.Transaction.Proposal)
      })
    ,
    'DESCRIPTOR' : _DEVCONFIG_TRANSACTION,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.DevConfig.Transaction)
    })
  ,

  'POW' : _reflection.GeneratedProtocolMessageType('POW', (_message.Message,), {
    'DESCRIPTOR' : _DEVCONFIG_POW,
    '__module__' : 'qsc_pb2'
    # @@protoc_insertion_point(class_scope:qsc.DevConfig.POW)
    })
  ,
  'DESCRIPTOR' : _DEVCONFIG,
  '__module__' : 'qsc_pb2'
  # @@protoc_insertion_point(class_scope:qsc.DevConfig)
  })
_sym_db.RegisterMessage(DevConfig)
_sym_db.RegisterMessage(DevConfig.Chain)
_sym_db.RegisterMessage(DevConfig.Block)
_sym_db.RegisterMessage(DevConfig.Block.BlockSizeController)
_sym_db.RegisterMessage(DevConfig.Transaction)
_sym_db.RegisterMessage(DevConfig.Transaction.Message)
_sym_db.RegisterMessage(DevConfig.Transaction.Slave)
_sym_db.RegisterMessage(DevConfig.Transaction.Token)
_sym_db.RegisterMessage(DevConfig.Transaction.Lattice)
_sym_db.RegisterMessage(DevConfig.Transaction.FoundationMultiSig)
_sym_db.RegisterMessage(DevConfig.Transaction.Proposal)
_sym_db.RegisterMessage(DevConfig.POW)

_PUBLICAPI = DESCRIPTOR.services_by_name['PublicAPI']
_ADMINAPI = DESCRIPTOR.services_by_name['AdminAPI']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _ADDRESSSTATE_TOKENSENTRY._options = None
  _ADDRESSSTATE_TOKENSENTRY._serialized_options = b'8\001'
  _ADDRESSSTATE_SLAVEPKSACCESSTYPEENTRY._options = None
  _ADDRESSSTATE_SLAVEPKSACCESSTYPEENTRY._serialized_options = b'8\001'
  _TRANSACTIONCOUNT_COUNTENTRY._options = None
  _TRANSACTIONCOUNT_COUNTENTRY._serialized_options = b'8\001'
  _PUBLICAPI.methods_by_name['GetNodeState']._options = None
  _PUBLICAPI.methods_by_name['GetNodeState']._serialized_options = b'\202\323\344\223\002\r\022\013/node-state'
  _PUBLICAPI.methods_by_name['GetKnownPeers']._options = None
  _PUBLICAPI.methods_by_name['GetKnownPeers']._serialized_options = b'\202\323\344\223\002\016\022\014/known-peers'
  _PUBLICAPI.methods_by_name['GetPeersStat']._options = None
  _PUBLICAPI.methods_by_name['GetPeersStat']._serialized_options = b'\202\323\344\223\002\r\022\013/peers-stat'
  _PUBLICAPI.methods_by_name['GetStats']._options = None
  _PUBLICAPI.methods_by_name['GetStats']._serialized_options = b'\202\323\344\223\002\010\022\006/stats'
  _PUBLICAPI.methods_by_name['GetAddressState']._options = None
  _PUBLICAPI.methods_by_name['GetAddressState']._serialized_options = b'\202\323\344\223\002\020\022\016/address-state'
  _PUBLICAPI.methods_by_name['GetOptimizedAddressState']._options = None
  _PUBLICAPI.methods_by_name['GetOptimizedAddressState']._serialized_options = b'\202\323\344\223\002\032\022\030/optimized-address-state'
  _PUBLICAPI.methods_by_name['GetMultiSigAddressState']._options = None
  _PUBLICAPI.methods_by_name['GetMultiSigAddressState']._serialized_options = b'\202\323\344\223\002\032\022\030/multi-sig-address-state'
  _PUBLICAPI.methods_by_name['IsSlave']._options = None
  _PUBLICAPI.methods_by_name['IsSlave']._serialized_options = b'\202\323\344\223\002\013\022\t/is-slave'
  _PUBLICAPI.methods_by_name['GetObject']._options = None
  _PUBLICAPI.methods_by_name['GetObject']._serialized_options = b'\202\323\344\223\002\t\022\007/object'
  _PUBLICAPI.methods_by_name['GetLatestData']._options = None
  _PUBLICAPI.methods_by_name['GetLatestData']._serialized_options = b'\202\323\344\223\002\016\022\014/latest-data'
  _PUBLICAPI.methods_by_name['PushTransaction']._options = None
  _PUBLICAPI.methods_by_name['PushTransaction']._serialized_options = b'\202\323\344\223\002\023\"\021/push-transaction'
  _PUBLICAPI.methods_by_name['TransferCoins']._options = None
  _PUBLICAPI.methods_by_name['TransferCoins']._serialized_options = b'\202\323\344\223\002\021\"\017/transfer-coins'
  _PUBLICAPI.methods_by_name['ParseAddress']._options = None
  _PUBLICAPI.methods_by_name['ParseAddress']._serialized_options = b'\202\323\344\223\002\020\022\016/parse-address'
  _PUBLICAPI.methods_by_name['GetChainStats']._options = None
  _PUBLICAPI.methods_by_name['GetChainStats']._serialized_options = b'\202\323\344\223\002\016\022\014/chain-stats'
  _PUBLICAPI.methods_by_name['GetAddressFromPK']._options = None
  _PUBLICAPI.methods_by_name['GetAddressFromPK']._serialized_options = b'\202\323\344\223\002\022\022\020/address-from-pk'
  _PUBLICAPI.methods_by_name['GetMultiSigCreateTxn']._options = None
  _PUBLICAPI.methods_by_name['GetMultiSigCreateTxn']._serialized_options = b'\202\323\344\223\002\027\"\025/multi-sig-create-txn'
  _PUBLICAPI.methods_by_name['GetMultiSigSpendTxn']._options = None
  _PUBLICAPI.methods_by_name['GetMultiSigSpendTxn']._serialized_options = b'\202\323\344\223\002\026\"\024/multi-sig-spend-txn'
  _PUBLICAPI.methods_by_name['GetMultiSigVoteTxn']._options = None
  _PUBLICAPI.methods_by_name['GetMultiSigVoteTxn']._serialized_options = b'\202\323\344\223\002\025\"\023/multi-sig-vote-txn'
  _PUBLICAPI.methods_by_name['GetMessageTxn']._options = None
  _PUBLICAPI.methods_by_name['GetMessageTxn']._serialized_options = b'\202\323\344\223\002\016\"\014/message-txn'
  _PUBLICAPI.methods_by_name['GetTokenTxn']._options = None
  _PUBLICAPI.methods_by_name['GetTokenTxn']._serialized_options = b'\202\323\344\223\002\014\"\n/token-txn'
  _PUBLICAPI.methods_by_name['GetTransferTokenTxn']._options = None
  _PUBLICAPI.methods_by_name['GetTransferTokenTxn']._serialized_options = b'\202\323\344\223\002\025\"\023/transfer-token-txn'
  _PUBLICAPI.methods_by_name['GetSlaveTxn']._options = None
  _PUBLICAPI.methods_by_name['GetSlaveTxn']._serialized_options = b'\202\323\344\223\002\014\"\n/slave-txn'
  _PUBLICAPI.methods_by_name['GetLatticeTxn']._options = None
  _PUBLICAPI.methods_by_name['GetLatticeTxn']._serialized_options = b'\202\323\344\223\002\016\"\014/lattice-txn'
  _PUBLICAPI.methods_by_name['GetTransaction']._options = None
  _PUBLICAPI.methods_by_name['GetTransaction']._serialized_options = b'\202\323\344\223\002\016\022\014/transaction'
  _PUBLICAPI.methods_by_name['GetMiniTransactionsByAddress']._options = None
  _PUBLICAPI.methods_by_name['GetMiniTransactionsByAddress']._serialized_options = b'\202\323\344\223\002\036\022\034/mini-transaction-by-address'
  _PUBLICAPI.methods_by_name['GetTransactionsByAddress']._options = None
  _PUBLICAPI.methods_by_name['GetTransactionsByAddress']._serialized_options = b'\202\323\344\223\002\032\022\030/transactions-by-address'
  _PUBLICAPI.methods_by_name['GetTokensByAddress']._options = None
  _PUBLICAPI.methods_by_name['GetTokensByAddress']._serialized_options = b'\202\323\344\223\002\024\022\022/tokens-by-address'
  _PUBLICAPI.methods_by_name['GetSlavesByAddress']._options = None
  _PUBLICAPI.methods_by_name['GetSlavesByAddress']._serialized_options = b'\202\323\344\223\002\024\022\022/slaves-by-address'
  _PUBLICAPI.methods_by_name['GetLatticePKsByAddress']._options = None
  _PUBLICAPI.methods_by_name['GetLatticePKsByAddress']._serialized_options = b'\202\323\344\223\002\031\022\027/lattice-pks-by-address'
  _PUBLICAPI.methods_by_name['GetMultiSigAddressesByAddress']._options = None
  _PUBLICAPI.methods_by_name['GetMultiSigAddressesByAddress']._serialized_options = b'\202\323\344\223\002!\022\037/multi-sig-addresses-by-address'
  _PUBLICAPI.methods_by_name['GetMultiSigSpendTxsByAddress']._options = None
  _PUBLICAPI.methods_by_name['GetMultiSigSpendTxsByAddress']._serialized_options = b'\202\323\344\223\002!\022\037/multi-sig-spend-txs-by-address'
  _PUBLICAPI.methods_by_name['GetVoteStats']._options = None
  _PUBLICAPI.methods_by_name['GetVoteStats']._serialized_options = b'\202\323\344\223\002\r\022\013/vote-stats'
  _PUBLICAPI.methods_by_name['GetInboxMessagesByAddress']._options = None
  _PUBLICAPI.methods_by_name['GetInboxMessagesByAddress']._serialized_options = b'\202\323\344\223\002\034\022\032/inbox-messages-by-address'
  _PUBLICAPI.methods_by_name['GetBalance']._options = None
  _PUBLICAPI.methods_by_name['GetBalance']._serialized_options = b'\202\323\344\223\002\n\022\010/balance'
  _PUBLICAPI.methods_by_name['GetTotalBalance']._options = None
  _PUBLICAPI.methods_by_name['GetTotalBalance']._serialized_options = b'\202\323\344\223\002\020\022\016/total-balance'
  _PUBLICAPI.methods_by_name['GetOTS']._options = None
  _PUBLICAPI.methods_by_name['GetOTS']._serialized_options = b'\202\323\344\223\002\006\022\004/ots'
  _PUBLICAPI.methods_by_name['GetHeight']._options = None
  _PUBLICAPI.methods_by_name['GetHeight']._serialized_options = b'\202\323\344\223\002\t\022\007/height'
  _PUBLICAPI.methods_by_name['GetBlock']._options = None
  _PUBLICAPI.methods_by_name['GetBlock']._serialized_options = b'\202\323\344\223\002\010\022\006/block'
  _PUBLICAPI.methods_by_name['GetBlockByNumber']._options = None
  _PUBLICAPI.methods_by_name['GetBlockByNumber']._serialized_options = b'\202\323\344\223\002\022\022\020/block-by-number'
  _EMPTY._serialized_start=48
  _EMPTY._serialized_end=55
  _GETNODESTATEREQ._serialized_start=57
  _GETNODESTATEREQ._serialized_end=74
  _GETNODESTATERESP._serialized_start=76
  _GETNODESTATERESP._serialized_end=123
  _GETKNOWNPEERSREQ._serialized_start=125
  _GETKNOWNPEERSREQ._serialized_end=143
  _GETKNOWNPEERSRESP._serialized_start=145
  _GETKNOWNPEERSRESP._serialized_end=230
  _GETPEERSSTATREQ._serialized_start=232
  _GETPEERSSTATREQ._serialized_end=249
  _GETPEERSSTATRESP._serialized_start=251
  _GETPEERSSTATRESP._serialized_end=304
  _GETCHAINSTATSREQ._serialized_start=306
  _GETCHAINSTATSREQ._serialized_end=324
  _GETCHAINSTATSRESP._serialized_start=326
  _GETCHAINSTATSRESP._serialized_end=411
  _GETSTATSREQ._serialized_start=413
  _GETSTATSREQ._serialized_end=454
  _GETSTATSRESP._serialized_start=457
  _GETSTATSRESP._serialized_end=717
  _GETADDRESSFROMPKREQ._serialized_start=719
  _GETADDRESSFROMPKREQ._serialized_end=752
  _GETADDRESSFROMPKRESP._serialized_start=754
  _GETADDRESSFROMPKRESP._serialized_end=793
  _BLOCKDATAPOINT._serialized_start=796
  _BLOCKDATAPOINT._serialized_end=974
  _GETADDRESSSTATEREQ._serialized_start=976
  _GETADDRESSSTATEREQ._serialized_end=1079
  _GETADDRESSSTATERESP._serialized_start=1081
  _GETADDRESSSTATERESP._serialized_end=1136
  _GETOPTIMIZEDADDRESSSTATERESP._serialized_start=1138
  _GETOPTIMIZEDADDRESSSTATERESP._serialized_end=1211
  _GETMULTISIGADDRESSSTATEREQ._serialized_start=1213
  _GETMULTISIGADDRESSSTATEREQ._serialized_end=1258
  _GETMULTISIGADDRESSSTATERESP._serialized_start=1260
  _GETMULTISIGADDRESSSTATERESP._serialized_end=1331
  _ISSLAVEREQ._serialized_start=1333
  _ISSLAVEREQ._serialized_end=1387
  _ISSLAVERESP._serialized_start=1389
  _ISSLAVERESP._serialized_end=1418
  _PARSEADDRESSREQ._serialized_start=1420
  _PARSEADDRESSREQ._serialized_end=1454
  _PARSEADDRESSRESP._serialized_start=1456
  _PARSEADDRESSRESP._serialized_end=1530
  _GETOBJECTREQ._serialized_start=1532
  _GETOBJECTREQ._serialized_end=1561
  _GETOBJECTRESP._serialized_start=1564
  _GETOBJECTRESP._serialized_end=1752
  _GETLATESTDATAREQ._serialized_start=1755
  _GETLATESTDATAREQ._serialized_end=1938
  _GETLATESTDATAREQ_FILTER._serialized_start=1855
  _GETLATESTDATAREQ_FILTER._serialized_end=1938
  _GETLATESTDATARESP._serialized_start=1941
  _GETLATESTDATARESP._serialized_end=2116
  _TRANSFERCOINSREQ._serialized_start=2119
  _TRANSFERCOINSREQ._serialized_end=2249
  _TRANSFERCOINSRESP._serialized_start=2251
  _TRANSFERCOINSRESP._serialized_end=2335
  _PUSHTRANSACTIONREQ._serialized_start=2337
  _PUSHTRANSACTIONREQ._serialized_end=2403
  _PUSHTRANSACTIONRESP._serialized_start=2406
  _PUSHTRANSACTIONRESP._serialized_end=2608
  _PUSHTRANSACTIONRESP_RESPONSECODE._serialized_start=2532
  _PUSHTRANSACTIONRESP_RESPONSECODE._serialized_end=2608
  _MULTISIGCREATETXNREQ._serialized_start=2611
  _MULTISIGCREATETXNREQ._serialized_end=2741
  _MULTISIGSPENDTXNREQ._serialized_start=2744
  _MULTISIGSPENDTXNREQ._serialized_end=2907
  _MULTISIGVOTETXNREQ._serialized_start=2909
  _MULTISIGVOTETXNREQ._serialized_end=3016
  _MESSAGETXNREQ._serialized_start=3018
  _MESSAGETXNREQ._serialized_end=3118
  _TOKENTXNREQ._serialized_start=3121
  _TOKENTXNREQ._serialized_end=3294
  _TRANSFERTOKENTXNREQ._serialized_start=3297
  _TRANSFERTOKENTXNREQ._serialized_end=3430
  _SLAVETXNREQ._serialized_start=3432
  _SLAVETXNREQ._serialized_end=3537
  _LATTICETXNREQ._serialized_start=3539
  _LATTICETXNREQ._serialized_end=3644
  _MINITRANSACTION._serialized_start=3646
  _MINITRANSACTION._serialized_end=3718
  _GETTRANSACTIONREQ._serialized_start=3720
  _GETTRANSACTIONREQ._serialized_end=3756
  _GETTRANSACTIONRESP._serialized_start=3759
  _GETTRANSACTIONRESP._serialized_end=3919
  _GETMINITRANSACTIONSBYADDRESSREQ._serialized_start=3921
  _GETMINITRANSACTIONSBYADDRESSREQ._serialized_end=4015
  _GETMINITRANSACTIONSBYADDRESSRESP._serialized_start=4017
  _GETMINITRANSACTIONSBYADDRESSRESP._serialized_end=4117
  _GETTRANSACTIONSBYADDRESSREQ._serialized_start=4119
  _GETTRANSACTIONSBYADDRESSREQ._serialized_end=4209
  _GETTRANSACTIONSBYADDRESSRESP._serialized_start=4211
  _GETTRANSACTIONSBYADDRESSRESP._serialized_end=4295
  _GETMULTISIGSPENDTXSBYADDRESSREQ._serialized_start=4298
  _GETMULTISIGSPENDTXSBYADDRESSREQ._serialized_end=4610
  _GETMULTISIGSPENDTXSBYADDRESSREQ_FILTERTYPE._serialized_start=4465
  _GETMULTISIGSPENDTXSBYADDRESSREQ_FILTERTYPE._serialized_end=4610
  _GETMULTISIGSPENDTXSBYADDRESSRESP._serialized_start=4612
  _GETMULTISIGSPENDTXSBYADDRESSRESP._serialized_end=4700
  _GETVOTESTATSREQ._serialized_start=4702
  _GETVOTESTATSREQ._serialized_end=4752
  _GETVOTESTATSRESP._serialized_start=4754
  _GETVOTESTATSRESP._serialized_end=4808
  _GETINBOXMESSAGESBYADDRESSRESP._serialized_start=4810
  _GETINBOXMESSAGESBYADDRESSRESP._serialized_end=4895
  _INBOXMESSAGE._serialized_start=4897
  _INBOXMESSAGE._serialized_end=5005
  _TOKENDETAIL._serialized_start=5007
  _TOKENDETAIL._serialized_end=5089
  _GETTOKENSBYADDRESSRESP._serialized_start=5091
  _GETTOKENSBYADDRESSRESP._serialized_end=5156
  _SLAVEDETAIL._serialized_start=5158
  _SLAVEDETAIL._serialized_end=5215
  _GETSLAVESBYADDRESSRESP._serialized_start=5217
  _GETSLAVESBYADDRESSRESP._serialized_end=5282
  _LATTICEPKSDETAIL._serialized_start=5284
  _LATTICEPKSDETAIL._serialized_end=5358
  _GETLATTICEPKSBYADDRESSRESP._serialized_start=5360
  _GETLATTICEPKSBYADDRESSRESP._serialized_end=5439
  _MULTISIGDETAIL._serialized_start=5441
  _MULTISIGDETAIL._serialized_end=5491
  _GETMULTISIGADDRESSESBYADDRESSRESP._serialized_start=5493
  _GETMULTISIGADDRESSESBYADDRESSRESP._serialized_end=5575
  _GETBALANCEREQ._serialized_start=5577
  _GETBALANCEREQ._serialized_end=5609
  _GETBALANCERESP._serialized_start=5611
  _GETBALANCERESP._serialized_end=5644
  _GETTOTALBALANCEREQ._serialized_start=5646
  _GETTOTALBALANCEREQ._serialized_end=5685
  _GETTOTALBALANCERESP._serialized_start=5687
  _GETTOTALBALANCERESP._serialized_end=5725
  _GETOTSREQ._serialized_start=5727
  _GETOTSREQ._serialized_end=5825
  _OTSBITFIELDBYPAGE._serialized_start=5827
  _OTSBITFIELDBYPAGE._serialized_end=5889
  _GETOTSRESP._serialized_start=5892
  _GETOTSRESP._serialized_end=6021
  _GETHEIGHTREQ._serialized_start=6023
  _GETHEIGHTREQ._serialized_end=6037
  _GETHEIGHTRESP._serialized_start=6039
  _GETHEIGHTRESP._serialized_end=6070
  _GETBLOCKREQ._serialized_start=6072
  _GETBLOCKREQ._serialized_end=6106
  _GETBLOCKRESP._serialized_start=6108
  _GETBLOCKRESP._serialized_end=6149
  _GETBLOCKBYNUMBERREQ._serialized_start=6151
  _GETBLOCKBYNUMBERREQ._serialized_end=6194
  _GETBLOCKBYNUMBERRESP._serialized_start=6196
  _GETBLOCKBYNUMBERRESP._serialized_end=6245
  _GETLOCALADDRESSESREQ._serialized_start=6247
  _GETLOCALADDRESSESREQ._serialized_end=6269
  _GETLOCALADDRESSESRESP._serialized_start=6271
  _GETLOCALADDRESSESRESP._serialized_end=6313
  _NODEINFO._serialized_start=6316
  _NODEINFO._serialized_end=6585
  _NODEINFO_STATE._serialized_start=6514
  _NODEINFO_STATE._serialized_end=6585
  _ADDRESSDESCRIPTOR._serialized_start=6588
  _ADDRESSDESCRIPTOR._serialized_end=6721
  _STOREDPEERS._serialized_start=6723
  _STOREDPEERS._serialized_end=6762
  _PEER._serialized_start=6764
  _PEER._serialized_end=6782
  _ADDRESSSTATE._serialized_start=6785
  _ADDRESSSTATE._serialized_end=7186
  _ADDRESSSTATE_TOKENSENTRY._serialized_start=7082
  _ADDRESSSTATE_TOKENSENTRY._serialized_end=7127
  _ADDRESSSTATE_SLAVEPKSACCESSTYPEENTRY._serialized_start=7129
  _ADDRESSSTATE_SLAVEPKSACCESSTYPEENTRY._serialized_end=7186
  _OPTIMIZEDADDRESSSTATE._serialized_start=7189
  _OPTIMIZEDADDRESSSTATE._serialized_end=7669
  _MULTISIGADDRESSSTATE._serialized_start=7672
  _MULTISIGADDRESSSTATE._serialized_end=8075
  _MULTISIGADDRESSESLIST._serialized_start=8077
  _MULTISIGADDRESSESLIST._serialized_end=8116
  _DATALIST._serialized_start=8118
  _DATALIST._serialized_end=8144
  _BITFIELD._serialized_start=8146
  _BITFIELD._serialized_end=8175
  _TRANSACTIONHASHLIST._serialized_start=8177
  _TRANSACTIONHASHLIST._serialized_end=8214
  _LATTICEPK._serialized_start=8216
  _LATTICEPK._serialized_end=8267
  _ADDRESSAMOUNT._serialized_start=8269
  _ADDRESSAMOUNT._serialized_end=8317
  _BLOCKHEADER._serialized_start=8320
  _BLOCKHEADER._serialized_end=8535
  _BLOCKHEADEREXTENDED._serialized_start=8537
  _BLOCKHEADEREXTENDED._serialized_end=8642
  _TRANSACTIONCOUNT._serialized_start=8644
  _TRANSACTIONCOUNT._serialized_end=8757
  _TRANSACTIONCOUNT_COUNTENTRY._serialized_start=8713
  _TRANSACTIONCOUNT_COUNTENTRY._serialized_end=8757
  _TRANSACTIONEXTENDED._serialized_start=8760
  _TRANSACTIONEXTENDED._serialized_end=8905
  _BLOCKEXTENDED._serialized_start=8908
  _BLOCKEXTENDED._serialized_end=9074
  _BLOCK._serialized_start=9076
  _BLOCK._serialized_end=9203
  _GENESISBALANCE._serialized_start=9205
  _GENESISBALANCE._serialized_end=9255
  _BLOCKMETADATALIST._serialized_start=9257
  _BLOCKMETADATALIST._serialized_end=9325
  _TRANSACTION._serialized_start=9328
  _TRANSACTION._serialized_end=12058
  _TRANSACTION_TRANSFER._serialized_start=10085
  _TRANSACTION_TRANSFER._serialized_end=10152
  _TRANSACTION_COINBASE._serialized_start=10154
  _TRANSACTION_COINBASE._serialized_end=10197
  _TRANSACTION_LATTICEPUBLICKEY._serialized_start=10199
  _TRANSACTION_LATTICEPUBLICKEY._serialized_end=10256
  _TRANSACTION_MESSAGE._serialized_start=10258
  _TRANSACTION_MESSAGE._serialized_end=10306
  _TRANSACTION_TOKEN._serialized_start=10308
  _TRANSACTION_TOKEN._serialized_end=10424
  _TRANSACTION_TRANSFERTOKEN._serialized_start=10426
  _TRANSACTION_TRANSFERTOKEN._serialized_end=10498
  _TRANSACTION_SLAVE._serialized_start=10500
  _TRANSACTION_SLAVE._serialized_end=10548
  _TRANSACTION_MULTISIGCREATE._serialized_start=10550
  _TRANSACTION_MULTISIGCREATE._serialized_end=10623
  _TRANSACTION_MULTISIGSPEND._serialized_start=10625
  _TRANSACTION_MULTISIGSPEND._serialized_end=10731
  _TRANSACTION_MULTISIGVOTE._serialized_start=10733
  _TRANSACTION_MULTISIGVOTE._serialized_end=10805
  _TRANSACTION_PROPOSALCREATE._serialized_start=10808
  _TRANSACTION_PROPOSALCREATE._serialized_end=11987
  _TRANSACTION_PROPOSALCREATE_QIP._serialized_start=11042
  _TRANSACTION_PROPOSALCREATE_QIP._serialized_end=11065
  _TRANSACTION_PROPOSALCREATE_CONFIG._serialized_start=11068
  _TRANSACTION_PROPOSALCREATE_CONFIG._serialized_end=11945
  _TRANSACTION_PROPOSALCREATE_OTHER._serialized_start=11947
  _TRANSACTION_PROPOSALCREATE_OTHER._serialized_end=11971
  _TRANSACTION_PROPOSALVOTE._serialized_start=11989
  _TRANSACTION_PROPOSALVOTE._serialized_end=12039
  _VOTESTATS._serialized_start=12061
  _VOTESTATS._serialized_end=12245
  _PROPOSALVOTESTATS._serialized_start=12248
  _PROPOSALVOTESTATS._serialized_end=12431
  _PROPOSALRECORD._serialized_start=12433
  _PROPOSALRECORD._serialized_end=12478
  _TOKENLIST._serialized_start=12480
  _TOKENLIST._serialized_end=12513
  _TOKENBALANCE._serialized_start=12515
  _TOKENBALANCE._serialized_end=12597
  _SLAVEMETADATA._serialized_start=12599
  _SLAVEMETADATA._serialized_end=12668
  _LATTICEPKMETADATA._serialized_start=12670
  _LATTICEPKMETADATA._serialized_end=12739
  _TOKENMETADATA._serialized_start=12741
  _TOKENMETADATA._serialized_end=12812
  _ENCRYPTEDEPHEMERALMESSAGE._serialized_start=12815
  _ENCRYPTEDEPHEMERALMESSAGE._serialized_end=13011
  _ENCRYPTEDEPHEMERALMESSAGE_CHANNEL._serialized_start=12975
  _ENCRYPTEDEPHEMERALMESSAGE_CHANNEL._serialized_end=13011
  _ADDRESSLIST._serialized_start=13013
  _ADDRESSLIST._serialized_end=13045
  _BLOCKHEIGHTDATA._serialized_start=13047
  _BLOCKHEIGHTDATA._serialized_end=13143
  _BLOCKMETADATA._serialized_start=13146
  _BLOCKMETADATA._serialized_end=13275
  _BLOCKNUMBERMAPPING._serialized_start=13277
  _BLOCKNUMBERMAPPING._serialized_end=13342
  _PEERSTAT._serialized_start=13344
  _PEERSTAT._serialized_end=13432
  _NODECHAINSTATE._serialized_start=13434
  _NODECHAINSTATE._serialized_end=13560
  _NODEHEADERHASH._serialized_start=13562
  _NODEHEADERHASH._serialized_end=13622
  _P2PACKNOWLEDGEMENT._serialized_start=13624
  _P2PACKNOWLEDGEMENT._serialized_end=13669
  _PEERINFO._serialized_start=13671
  _PEERINFO._serialized_end=13795
  _PEERS._serialized_start=13797
  _PEERS._serialized_end=13843
  _DEVCONFIG._serialized_start=13846
  _DEVCONFIG._serialized_end=15441
  _DEVCONFIG_CHAIN._serialized_start=14131
  _DEVCONFIG_CHAIN._serialized_end=14230
  _DEVCONFIG_BLOCK._serialized_start=14233
  _DEVCONFIG_BLOCK._serialized_end=14559
  _DEVCONFIG_BLOCK_BLOCKSIZECONTROLLER._serialized_start=14440
  _DEVCONFIG_BLOCK_BLOCKSIZECONTROLLER._serialized_end=14559
  _DEVCONFIG_TRANSACTION._serialized_start=14562
  _DEVCONFIG_TRANSACTION._serialized_end=15399
  _DEVCONFIG_TRANSACTION_MESSAGE._serialized_start=14941
  _DEVCONFIG_TRANSACTION_MESSAGE._serialized_end=14970
  _DEVCONFIG_TRANSACTION_SLAVE._serialized_start=14972
  _DEVCONFIG_TRANSACTION_SLAVE._serialized_end=15008
  _DEVCONFIG_TRANSACTION_TOKEN._serialized_start=15010
  _DEVCONFIG_TRANSACTION_TOKEN._serialized_end=15069
  _DEVCONFIG_TRANSACTION_LATTICE._serialized_start=15071
  _DEVCONFIG_TRANSACTION_LATTICE._serialized_end=15152
  _DEVCONFIG_TRANSACTION_FOUNDATIONMULTISIG._serialized_start=15154
  _DEVCONFIG_TRANSACTION_FOUNDATIONMULTISIG._serialized_end=15204
  _DEVCONFIG_TRANSACTION_PROPOSAL._serialized_start=15207
  _DEVCONFIG_TRANSACTION_PROPOSAL._serialized_end=15399
  _DEVCONFIG_POW._serialized_start=15401
  _DEVCONFIG_POW._serialized_end=15441
  _PUBLICAPI._serialized_start=15444
  _PUBLICAPI._serialized_end=19217
  _ADMINAPI._serialized_start=19219
  _ADMINAPI._serialized_end=19229
# @@protoc_insertion_point(module_scope)
