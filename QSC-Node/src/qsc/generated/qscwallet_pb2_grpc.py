# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import qsc.generated.qscwallet_pb2 as qscwallet__pb2


class WalletAPIStub(object):
    """//////////////////////////
    //////////////////////////
    //////////////////////////
    ////     API       ///////
    //////////////////////////
    //////////////////////////
    //////////////////////////

    This service describes the Wallet API
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddNewAddress = channel.unary_unary(
                '/qsc.WalletAPI/AddNewAddress',
                request_serializer=qscwallet__pb2.AddNewAddressReq.SerializeToString,
                response_deserializer=qscwallet__pb2.AddNewAddressResp.FromString,
                )
        self.AddNewAddressWithSlaves = channel.unary_unary(
                '/qsc.WalletAPI/AddNewAddressWithSlaves',
                request_serializer=qscwallet__pb2.AddNewAddressWithSlavesReq.SerializeToString,
                response_deserializer=qscwallet__pb2.AddNewAddressResp.FromString,
                )
        self.ListAddresses = channel.unary_unary(
                '/qsc.WalletAPI/ListAddresses',
                request_serializer=qscwallet__pb2.ListAddressesReq.SerializeToString,
                response_deserializer=qscwallet__pb2.ListAddressesResp.FromString,
                )
        self.RemoveAddress = channel.unary_unary(
                '/qsc.WalletAPI/RemoveAddress',
                request_serializer=qscwallet__pb2.RemoveAddressReq.SerializeToString,
                response_deserializer=qscwallet__pb2.RemoveAddressResp.FromString,
                )
        self.IsValidAddress = channel.unary_unary(
                '/qsc.WalletAPI/IsValidAddress',
                request_serializer=qscwallet__pb2.ValidAddressReq.SerializeToString,
                response_deserializer=qscwallet__pb2.ValidAddressResp.FromString,
                )
        self.EncryptWallet = channel.unary_unary(
                '/qsc.WalletAPI/EncryptWallet',
                request_serializer=qscwallet__pb2.EncryptWalletReq.SerializeToString,
                response_deserializer=qscwallet__pb2.EncryptWalletResp.FromString,
                )
        self.LockWallet = channel.unary_unary(
                '/qsc.WalletAPI/LockWallet',
                request_serializer=qscwallet__pb2.LockWalletReq.SerializeToString,
                response_deserializer=qscwallet__pb2.LockWalletResp.FromString,
                )
        self.UnlockWallet = channel.unary_unary(
                '/qsc.WalletAPI/UnlockWallet',
                request_serializer=qscwallet__pb2.UnlockWalletReq.SerializeToString,
                response_deserializer=qscwallet__pb2.UnlockWalletResp.FromString,
                )
        self.GetRecoverySeeds = channel.unary_unary(
                '/qsc.WalletAPI/GetRecoverySeeds',
                request_serializer=qscwallet__pb2.GetRecoverySeedsReq.SerializeToString,
                response_deserializer=qscwallet__pb2.GetRecoverySeedsResp.FromString,
                )
        self.GetWalletInfo = channel.unary_unary(
                '/qsc.WalletAPI/GetWalletInfo',
                request_serializer=qscwallet__pb2.GetWalletInfoReq.SerializeToString,
                response_deserializer=qscwallet__pb2.GetWalletInfoResp.FromString,
                )
        self.RelayTransferTxn = channel.unary_unary(
                '/qsc.WalletAPI/RelayTransferTxn',
                request_serializer=qscwallet__pb2.RelayTransferTxnReq.SerializeToString,
                response_deserializer=qscwallet__pb2.RelayTxnResp.FromString,
                )
        self.RelayTransferTxnBySlave = channel.unary_unary(
                '/qsc.WalletAPI/RelayTransferTxnBySlave',
                request_serializer=qscwallet__pb2.RelayTransferTxnBySlaveReq.SerializeToString,
                response_deserializer=qscwallet__pb2.RelayTxnResp.FromString,
                )
        self.RelayMessageTxn = channel.unary_unary(
                '/qsc.WalletAPI/RelayMessageTxn',
                request_serializer=qscwallet__pb2.RelayMessageTxnReq.SerializeToString,
                response_deserializer=qscwallet__pb2.RelayTxnResp.FromString,
                )
        self.RelayMessageTxnBySlave = channel.unary_unary(
                '/qsc.WalletAPI/RelayMessageTxnBySlave',
                request_serializer=qscwallet__pb2.RelayMessageTxnBySlaveReq.SerializeToString,
                response_deserializer=qscwallet__pb2.RelayTxnResp.FromString,
                )
        self.RelayTokenTxn = channel.unary_unary(
                '/qsc.WalletAPI/RelayTokenTxn',
                request_serializer=qscwallet__pb2.RelayTokenTxnReq.SerializeToString,
                response_deserializer=qscwallet__pb2.RelayTxnResp.FromString,
                )
        self.RelayTokenTxnBySlave = channel.unary_unary(
                '/qsc.WalletAPI/RelayTokenTxnBySlave',
                request_serializer=qscwallet__pb2.RelayTokenTxnBySlaveReq.SerializeToString,
                response_deserializer=qscwallet__pb2.RelayTxnResp.FromString,
                )
        self.RelayTransferTokenTxn = channel.unary_unary(
                '/qsc.WalletAPI/RelayTransferTokenTxn',
                request_serializer=qscwallet__pb2.RelayTransferTokenTxnReq.SerializeToString,
                response_deserializer=qscwallet__pb2.RelayTxnResp.FromString,
                )
        self.RelayTransferTokenTxnBySlave = channel.unary_unary(
                '/qsc.WalletAPI/RelayTransferTokenTxnBySlave',
                request_serializer=qscwallet__pb2.RelayTransferTokenTxnBySlaveReq.SerializeToString,
                response_deserializer=qscwallet__pb2.RelayTxnResp.FromString,
                )
        self.RelaySlaveTxn = channel.unary_unary(
                '/qsc.WalletAPI/RelaySlaveTxn',
                request_serializer=qscwallet__pb2.RelaySlaveTxnReq.SerializeToString,
                response_deserializer=qscwallet__pb2.RelayTxnResp.FromString,
                )
        self.RelaySlaveTxnBySlave = channel.unary_unary(
                '/qsc.WalletAPI/RelaySlaveTxnBySlave',
                request_serializer=qscwallet__pb2.RelaySlaveTxnBySlaveReq.SerializeToString,
                response_deserializer=qscwallet__pb2.RelayTxnResp.FromString,
                )
        self.ChangePassphrase = channel.unary_unary(
                '/qsc.WalletAPI/ChangePassphrase',
                request_serializer=qscwallet__pb2.ChangePassphraseReq.SerializeToString,
                response_deserializer=qscwallet__pb2.ChangePassphraseResp.FromString,
                )
        self.GetTransactionsByAddress = channel.unary_unary(
                '/qsc.WalletAPI/GetTransactionsByAddress',
                request_serializer=qscwallet__pb2.TransactionsByAddressReq.SerializeToString,
                response_deserializer=qscwallet__pb2.TransactionsByAddressResp.FromString,
                )
        self.GetPaginatedTransactionsByAddress = channel.unary_unary(
                '/qsc.WalletAPI/GetPaginatedTransactionsByAddress',
                request_serializer=qscwallet__pb2.PaginatedTransactionsByAddressReq.SerializeToString,
                response_deserializer=qscwallet__pb2.PaginatedTransactionsByAddressResp.FromString,
                )
        self.GetTransaction = channel.unary_unary(
                '/qsc.WalletAPI/GetTransaction',
                request_serializer=qscwallet__pb2.TransactionReq.SerializeToString,
                response_deserializer=qscwallet__pb2.TransactionResp.FromString,
                )
        self.GetBalance = channel.unary_unary(
                '/qsc.WalletAPI/GetBalance',
                request_serializer=qscwallet__pb2.BalanceReq.SerializeToString,
                response_deserializer=qscwallet__pb2.BalanceResp.FromString,
                )
        self.GetTotalBalance = channel.unary_unary(
                '/qsc.WalletAPI/GetTotalBalance',
                request_serializer=qscwallet__pb2.TotalBalanceReq.SerializeToString,
                response_deserializer=qscwallet__pb2.TotalBalanceResp.FromString,
                )
        self.GetOTS = channel.unary_unary(
                '/qsc.WalletAPI/GetOTS',
                request_serializer=qscwallet__pb2.OTSReq.SerializeToString,
                response_deserializer=qscwallet__pb2.OTSResp.FromString,
                )
        self.GetHeight = channel.unary_unary(
                '/qsc.WalletAPI/GetHeight',
                request_serializer=qscwallet__pb2.HeightReq.SerializeToString,
                response_deserializer=qscwallet__pb2.HeightResp.FromString,
                )
        self.GetBlock = channel.unary_unary(
                '/qsc.WalletAPI/GetBlock',
                request_serializer=qscwallet__pb2.BlockReq.SerializeToString,
                response_deserializer=qscwallet__pb2.BlockResp.FromString,
                )
        self.GetBlockByNumber = channel.unary_unary(
                '/qsc.WalletAPI/GetBlockByNumber',
                request_serializer=qscwallet__pb2.BlockByNumberReq.SerializeToString,
                response_deserializer=qscwallet__pb2.BlockResp.FromString,
                )
        self.GetAddressFromPK = channel.unary_unary(
                '/qsc.WalletAPI/GetAddressFromPK',
                request_serializer=qscwallet__pb2.AddressFromPKReq.SerializeToString,
                response_deserializer=qscwallet__pb2.AddressFromPKResp.FromString,
                )
        self.GetNodeInfo = channel.unary_unary(
                '/qsc.WalletAPI/GetNodeInfo',
                request_serializer=qscwallet__pb2.NodeInfoReq.SerializeToString,
                response_deserializer=qscwallet__pb2.NodeInfoResp.FromString,
                )


class WalletAPIServicer(object):
    """//////////////////////////
    //////////////////////////
    //////////////////////////
    ////     API       ///////
    //////////////////////////
    //////////////////////////
    //////////////////////////

    This service describes the Wallet API
    """

    def AddNewAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddNewAddressWithSlaves(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAddresses(self, request, context):
        """rpc AddAddressFromSeed(AddAddressFromSeedReq) returns (AddAddressFromSeedResp);

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsValidAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EncryptWallet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LockWallet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnlockWallet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRecoverySeeds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWalletInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RelayTransferTxn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RelayTransferTxnBySlave(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RelayMessageTxn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RelayMessageTxnBySlave(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RelayTokenTxn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RelayTokenTxnBySlave(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RelayTransferTokenTxn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RelayTransferTokenTxnBySlave(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RelaySlaveTxn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RelaySlaveTxnBySlave(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangePassphrase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionsByAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaginatedTransactionsByAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTotalBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOTS(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHeight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockByNumber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAddressFromPK(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNodeInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WalletAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddNewAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.AddNewAddress,
                    request_deserializer=qscwallet__pb2.AddNewAddressReq.FromString,
                    response_serializer=qscwallet__pb2.AddNewAddressResp.SerializeToString,
            ),
            'AddNewAddressWithSlaves': grpc.unary_unary_rpc_method_handler(
                    servicer.AddNewAddressWithSlaves,
                    request_deserializer=qscwallet__pb2.AddNewAddressWithSlavesReq.FromString,
                    response_serializer=qscwallet__pb2.AddNewAddressResp.SerializeToString,
            ),
            'ListAddresses': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAddresses,
                    request_deserializer=qscwallet__pb2.ListAddressesReq.FromString,
                    response_serializer=qscwallet__pb2.ListAddressesResp.SerializeToString,
            ),
            'RemoveAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveAddress,
                    request_deserializer=qscwallet__pb2.RemoveAddressReq.FromString,
                    response_serializer=qscwallet__pb2.RemoveAddressResp.SerializeToString,
            ),
            'IsValidAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.IsValidAddress,
                    request_deserializer=qscwallet__pb2.ValidAddressReq.FromString,
                    response_serializer=qscwallet__pb2.ValidAddressResp.SerializeToString,
            ),
            'EncryptWallet': grpc.unary_unary_rpc_method_handler(
                    servicer.EncryptWallet,
                    request_deserializer=qscwallet__pb2.EncryptWalletReq.FromString,
                    response_serializer=qscwallet__pb2.EncryptWalletResp.SerializeToString,
            ),
            'LockWallet': grpc.unary_unary_rpc_method_handler(
                    servicer.LockWallet,
                    request_deserializer=qscwallet__pb2.LockWalletReq.FromString,
                    response_serializer=qscwallet__pb2.LockWalletResp.SerializeToString,
            ),
            'UnlockWallet': grpc.unary_unary_rpc_method_handler(
                    servicer.UnlockWallet,
                    request_deserializer=qscwallet__pb2.UnlockWalletReq.FromString,
                    response_serializer=qscwallet__pb2.UnlockWalletResp.SerializeToString,
            ),
            'GetRecoverySeeds': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRecoverySeeds,
                    request_deserializer=qscwallet__pb2.GetRecoverySeedsReq.FromString,
                    response_serializer=qscwallet__pb2.GetRecoverySeedsResp.SerializeToString,
            ),
            'GetWalletInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWalletInfo,
                    request_deserializer=qscwallet__pb2.GetWalletInfoReq.FromString,
                    response_serializer=qscwallet__pb2.GetWalletInfoResp.SerializeToString,
            ),
            'RelayTransferTxn': grpc.unary_unary_rpc_method_handler(
                    servicer.RelayTransferTxn,
                    request_deserializer=qscwallet__pb2.RelayTransferTxnReq.FromString,
                    response_serializer=qscwallet__pb2.RelayTxnResp.SerializeToString,
            ),
            'RelayTransferTxnBySlave': grpc.unary_unary_rpc_method_handler(
                    servicer.RelayTransferTxnBySlave,
                    request_deserializer=qscwallet__pb2.RelayTransferTxnBySlaveReq.FromString,
                    response_serializer=qscwallet__pb2.RelayTxnResp.SerializeToString,
            ),
            'RelayMessageTxn': grpc.unary_unary_rpc_method_handler(
                    servicer.RelayMessageTxn,
                    request_deserializer=qscwallet__pb2.RelayMessageTxnReq.FromString,
                    response_serializer=qscwallet__pb2.RelayTxnResp.SerializeToString,
            ),
            'RelayMessageTxnBySlave': grpc.unary_unary_rpc_method_handler(
                    servicer.RelayMessageTxnBySlave,
                    request_deserializer=qscwallet__pb2.RelayMessageTxnBySlaveReq.FromString,
                    response_serializer=qscwallet__pb2.RelayTxnResp.SerializeToString,
            ),
            'RelayTokenTxn': grpc.unary_unary_rpc_method_handler(
                    servicer.RelayTokenTxn,
                    request_deserializer=qscwallet__pb2.RelayTokenTxnReq.FromString,
                    response_serializer=qscwallet__pb2.RelayTxnResp.SerializeToString,
            ),
            'RelayTokenTxnBySlave': grpc.unary_unary_rpc_method_handler(
                    servicer.RelayTokenTxnBySlave,
                    request_deserializer=qscwallet__pb2.RelayTokenTxnBySlaveReq.FromString,
                    response_serializer=qscwallet__pb2.RelayTxnResp.SerializeToString,
            ),
            'RelayTransferTokenTxn': grpc.unary_unary_rpc_method_handler(
                    servicer.RelayTransferTokenTxn,
                    request_deserializer=qscwallet__pb2.RelayTransferTokenTxnReq.FromString,
                    response_serializer=qscwallet__pb2.RelayTxnResp.SerializeToString,
            ),
            'RelayTransferTokenTxnBySlave': grpc.unary_unary_rpc_method_handler(
                    servicer.RelayTransferTokenTxnBySlave,
                    request_deserializer=qscwallet__pb2.RelayTransferTokenTxnBySlaveReq.FromString,
                    response_serializer=qscwallet__pb2.RelayTxnResp.SerializeToString,
            ),
            'RelaySlaveTxn': grpc.unary_unary_rpc_method_handler(
                    servicer.RelaySlaveTxn,
                    request_deserializer=qscwallet__pb2.RelaySlaveTxnReq.FromString,
                    response_serializer=qscwallet__pb2.RelayTxnResp.SerializeToString,
            ),
            'RelaySlaveTxnBySlave': grpc.unary_unary_rpc_method_handler(
                    servicer.RelaySlaveTxnBySlave,
                    request_deserializer=qscwallet__pb2.RelaySlaveTxnBySlaveReq.FromString,
                    response_serializer=qscwallet__pb2.RelayTxnResp.SerializeToString,
            ),
            'ChangePassphrase': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangePassphrase,
                    request_deserializer=qscwallet__pb2.ChangePassphraseReq.FromString,
                    response_serializer=qscwallet__pb2.ChangePassphraseResp.SerializeToString,
            ),
            'GetTransactionsByAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionsByAddress,
                    request_deserializer=qscwallet__pb2.TransactionsByAddressReq.FromString,
                    response_serializer=qscwallet__pb2.TransactionsByAddressResp.SerializeToString,
            ),
            'GetPaginatedTransactionsByAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaginatedTransactionsByAddress,
                    request_deserializer=qscwallet__pb2.PaginatedTransactionsByAddressReq.FromString,
                    response_serializer=qscwallet__pb2.PaginatedTransactionsByAddressResp.SerializeToString,
            ),
            'GetTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransaction,
                    request_deserializer=qscwallet__pb2.TransactionReq.FromString,
                    response_serializer=qscwallet__pb2.TransactionResp.SerializeToString,
            ),
            'GetBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBalance,
                    request_deserializer=qscwallet__pb2.BalanceReq.FromString,
                    response_serializer=qscwallet__pb2.BalanceResp.SerializeToString,
            ),
            'GetTotalBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTotalBalance,
                    request_deserializer=qscwallet__pb2.TotalBalanceReq.FromString,
                    response_serializer=qscwallet__pb2.TotalBalanceResp.SerializeToString,
            ),
            'GetOTS': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOTS,
                    request_deserializer=qscwallet__pb2.OTSReq.FromString,
                    response_serializer=qscwallet__pb2.OTSResp.SerializeToString,
            ),
            'GetHeight': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHeight,
                    request_deserializer=qscwallet__pb2.HeightReq.FromString,
                    response_serializer=qscwallet__pb2.HeightResp.SerializeToString,
            ),
            'GetBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlock,
                    request_deserializer=qscwallet__pb2.BlockReq.FromString,
                    response_serializer=qscwallet__pb2.BlockResp.SerializeToString,
            ),
            'GetBlockByNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockByNumber,
                    request_deserializer=qscwallet__pb2.BlockByNumberReq.FromString,
                    response_serializer=qscwallet__pb2.BlockResp.SerializeToString,
            ),
            'GetAddressFromPK': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAddressFromPK,
                    request_deserializer=qscwallet__pb2.AddressFromPKReq.FromString,
                    response_serializer=qscwallet__pb2.AddressFromPKResp.SerializeToString,
            ),
            'GetNodeInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNodeInfo,
                    request_deserializer=qscwallet__pb2.NodeInfoReq.FromString,
                    response_serializer=qscwallet__pb2.NodeInfoResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qsc.WalletAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WalletAPI(object):
    """//////////////////////////
    //////////////////////////
    //////////////////////////
    ////     API       ///////
    //////////////////////////
    //////////////////////////
    //////////////////////////

    This service describes the Wallet API
    """

    @staticmethod
    def AddNewAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/AddNewAddress',
            qscwallet__pb2.AddNewAddressReq.SerializeToString,
            qscwallet__pb2.AddNewAddressResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddNewAddressWithSlaves(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/AddNewAddressWithSlaves',
            qscwallet__pb2.AddNewAddressWithSlavesReq.SerializeToString,
            qscwallet__pb2.AddNewAddressResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAddresses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/ListAddresses',
            qscwallet__pb2.ListAddressesReq.SerializeToString,
            qscwallet__pb2.ListAddressesResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/RemoveAddress',
            qscwallet__pb2.RemoveAddressReq.SerializeToString,
            qscwallet__pb2.RemoveAddressResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsValidAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/IsValidAddress',
            qscwallet__pb2.ValidAddressReq.SerializeToString,
            qscwallet__pb2.ValidAddressResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EncryptWallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/EncryptWallet',
            qscwallet__pb2.EncryptWalletReq.SerializeToString,
            qscwallet__pb2.EncryptWalletResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LockWallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/LockWallet',
            qscwallet__pb2.LockWalletReq.SerializeToString,
            qscwallet__pb2.LockWalletResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnlockWallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/UnlockWallet',
            qscwallet__pb2.UnlockWalletReq.SerializeToString,
            qscwallet__pb2.UnlockWalletResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRecoverySeeds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/GetRecoverySeeds',
            qscwallet__pb2.GetRecoverySeedsReq.SerializeToString,
            qscwallet__pb2.GetRecoverySeedsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWalletInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/GetWalletInfo',
            qscwallet__pb2.GetWalletInfoReq.SerializeToString,
            qscwallet__pb2.GetWalletInfoResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RelayTransferTxn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/RelayTransferTxn',
            qscwallet__pb2.RelayTransferTxnReq.SerializeToString,
            qscwallet__pb2.RelayTxnResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RelayTransferTxnBySlave(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/RelayTransferTxnBySlave',
            qscwallet__pb2.RelayTransferTxnBySlaveReq.SerializeToString,
            qscwallet__pb2.RelayTxnResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RelayMessageTxn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/RelayMessageTxn',
            qscwallet__pb2.RelayMessageTxnReq.SerializeToString,
            qscwallet__pb2.RelayTxnResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RelayMessageTxnBySlave(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/RelayMessageTxnBySlave',
            qscwallet__pb2.RelayMessageTxnBySlaveReq.SerializeToString,
            qscwallet__pb2.RelayTxnResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RelayTokenTxn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/RelayTokenTxn',
            qscwallet__pb2.RelayTokenTxnReq.SerializeToString,
            qscwallet__pb2.RelayTxnResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RelayTokenTxnBySlave(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/RelayTokenTxnBySlave',
            qscwallet__pb2.RelayTokenTxnBySlaveReq.SerializeToString,
            qscwallet__pb2.RelayTxnResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RelayTransferTokenTxn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/RelayTransferTokenTxn',
            qscwallet__pb2.RelayTransferTokenTxnReq.SerializeToString,
            qscwallet__pb2.RelayTxnResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RelayTransferTokenTxnBySlave(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/RelayTransferTokenTxnBySlave',
            qscwallet__pb2.RelayTransferTokenTxnBySlaveReq.SerializeToString,
            qscwallet__pb2.RelayTxnResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RelaySlaveTxn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/RelaySlaveTxn',
            qscwallet__pb2.RelaySlaveTxnReq.SerializeToString,
            qscwallet__pb2.RelayTxnResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RelaySlaveTxnBySlave(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/RelaySlaveTxnBySlave',
            qscwallet__pb2.RelaySlaveTxnBySlaveReq.SerializeToString,
            qscwallet__pb2.RelayTxnResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangePassphrase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/ChangePassphrase',
            qscwallet__pb2.ChangePassphraseReq.SerializeToString,
            qscwallet__pb2.ChangePassphraseResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionsByAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/GetTransactionsByAddress',
            qscwallet__pb2.TransactionsByAddressReq.SerializeToString,
            qscwallet__pb2.TransactionsByAddressResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPaginatedTransactionsByAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/GetPaginatedTransactionsByAddress',
            qscwallet__pb2.PaginatedTransactionsByAddressReq.SerializeToString,
            qscwallet__pb2.PaginatedTransactionsByAddressResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/GetTransaction',
            qscwallet__pb2.TransactionReq.SerializeToString,
            qscwallet__pb2.TransactionResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/GetBalance',
            qscwallet__pb2.BalanceReq.SerializeToString,
            qscwallet__pb2.BalanceResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTotalBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/GetTotalBalance',
            qscwallet__pb2.TotalBalanceReq.SerializeToString,
            qscwallet__pb2.TotalBalanceResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOTS(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/GetOTS',
            qscwallet__pb2.OTSReq.SerializeToString,
            qscwallet__pb2.OTSResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHeight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/GetHeight',
            qscwallet__pb2.HeightReq.SerializeToString,
            qscwallet__pb2.HeightResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/GetBlock',
            qscwallet__pb2.BlockReq.SerializeToString,
            qscwallet__pb2.BlockResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockByNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/GetBlockByNumber',
            qscwallet__pb2.BlockByNumberReq.SerializeToString,
            qscwallet__pb2.BlockResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAddressFromPK(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/GetAddressFromPK',
            qscwallet__pb2.AddressFromPKReq.SerializeToString,
            qscwallet__pb2.AddressFromPKResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNodeInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.WalletAPI/GetNodeInfo',
            qscwallet__pb2.NodeInfoReq.SerializeToString,
            qscwallet__pb2.NodeInfoResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
