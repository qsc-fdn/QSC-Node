# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import qsc.generated.qscmining_pb2 as qscmining__pb2


class MiningAPIStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBlockMiningCompatible = channel.unary_unary(
                '/qsc.MiningAPI/GetBlockMiningCompatible',
                request_serializer=qscmining__pb2.GetBlockMiningCompatibleReq.SerializeToString,
                response_deserializer=qscmining__pb2.GetBlockMiningCompatibleResp.FromString,
                )
        self.GetLastBlockHeader = channel.unary_unary(
                '/qsc.MiningAPI/GetLastBlockHeader',
                request_serializer=qscmining__pb2.GetLastBlockHeaderReq.SerializeToString,
                response_deserializer=qscmining__pb2.GetLastBlockHeaderResp.FromString,
                )
        self.GetBlockToMine = channel.unary_unary(
                '/qsc.MiningAPI/GetBlockToMine',
                request_serializer=qscmining__pb2.GetBlockToMineReq.SerializeToString,
                response_deserializer=qscmining__pb2.GetBlockToMineResp.FromString,
                )
        self.SubmitMinedBlock = channel.unary_unary(
                '/qsc.MiningAPI/SubmitMinedBlock',
                request_serializer=qscmining__pb2.SubmitMinedBlockReq.SerializeToString,
                response_deserializer=qscmining__pb2.SubmitMinedBlockResp.FromString,
                )


class MiningAPIServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetBlockMiningCompatible(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLastBlockHeader(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockToMine(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitMinedBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MiningAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBlockMiningCompatible': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockMiningCompatible,
                    request_deserializer=qscmining__pb2.GetBlockMiningCompatibleReq.FromString,
                    response_serializer=qscmining__pb2.GetBlockMiningCompatibleResp.SerializeToString,
            ),
            'GetLastBlockHeader': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLastBlockHeader,
                    request_deserializer=qscmining__pb2.GetLastBlockHeaderReq.FromString,
                    response_serializer=qscmining__pb2.GetLastBlockHeaderResp.SerializeToString,
            ),
            'GetBlockToMine': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockToMine,
                    request_deserializer=qscmining__pb2.GetBlockToMineReq.FromString,
                    response_serializer=qscmining__pb2.GetBlockToMineResp.SerializeToString,
            ),
            'SubmitMinedBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitMinedBlock,
                    request_deserializer=qscmining__pb2.SubmitMinedBlockReq.FromString,
                    response_serializer=qscmining__pb2.SubmitMinedBlockResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qsc.MiningAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MiningAPI(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetBlockMiningCompatible(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.MiningAPI/GetBlockMiningCompatible',
            qscmining__pb2.GetBlockMiningCompatibleReq.SerializeToString,
            qscmining__pb2.GetBlockMiningCompatibleResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLastBlockHeader(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.MiningAPI/GetLastBlockHeader',
            qscmining__pb2.GetLastBlockHeaderReq.SerializeToString,
            qscmining__pb2.GetLastBlockHeaderResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockToMine(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.MiningAPI/GetBlockToMine',
            qscmining__pb2.GetBlockToMineReq.SerializeToString,
            qscmining__pb2.GetBlockToMineResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitMinedBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qsc.MiningAPI/SubmitMinedBlock',
            qscmining__pb2.SubmitMinedBlockReq.SerializeToString,
            qscmining__pb2.SubmitMinedBlockResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
