# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: qscwallet.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import qsc.generated.qsc_pb2 as qsc__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0fqscwallet.proto\x12\x03qsc\x1a\tqsc.proto\"9\n\x10\x41\x64\x64NewAddressReq\x12\x0e\n\x06height\x18\x01 \x01(\x04\x12\x15\n\rhash_function\x18\x02 \x01(\t\"A\n\x11\x41\x64\x64NewAddressResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12\x0f\n\x07\x61\x64\x64ress\x18\x03 \x01(\t\"]\n\x1a\x41\x64\x64NewAddressWithSlavesReq\x12\x0e\n\x06height\x18\x01 \x01(\x04\x12\x18\n\x10number_of_slaves\x18\x02 \x01(\x04\x12\x15\n\rhash_function\x18\x03 \x01(\t\"%\n\x15\x41\x64\x64\x41\x64\x64ressFromSeedReq\x12\x0c\n\x04seed\x18\x01 \x01(\t\"F\n\x16\x41\x64\x64\x41\x64\x64ressFromSeedResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12\x0f\n\x07\x61\x64\x64ress\x18\x03 \x01(\t\"\x12\n\x10ListAddressesReq\"C\n\x11ListAddressesResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12\x11\n\taddresses\x18\x03 \x03(\t\"#\n\x10RemoveAddressReq\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\"0\n\x11RemoveAddressResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\"\"\n\x0fValidAddressReq\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\">\n\x10ValidAddressResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12\r\n\x05valid\x18\x03 \x01(\t\"&\n\x10\x45ncryptWalletReq\x12\x12\n\npassphrase\x18\x01 \x01(\t\"0\n\x11\x45ncryptWalletResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\"%\n\x0fUnlockWalletReq\x12\x12\n\npassphrase\x18\x01 \x01(\t\"/\n\x10UnlockWalletResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\"\x0f\n\rLockWalletReq\"-\n\x0eLockWalletResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\"&\n\x13GetRecoverySeedsReq\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\"V\n\x14GetRecoverySeedsResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12\x0f\n\x07hexseed\x18\x03 \x01(\t\x12\x10\n\x08mnemonic\x18\x04 \x01(\t\"\x12\n\x10GetWalletInfoReq\"n\n\x11GetWalletInfoResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12\x0f\n\x07version\x18\x03 \x01(\r\x12\x15\n\raddress_count\x18\x04 \x01(\x04\x12\x14\n\x0cis_encrypted\x18\x05 \x01(\x08\"\x8c\x01\n\x13RelayTransferTxnReq\x12\x14\n\x0c\x61\x64\x64resses_to\x18\x01 \x03(\t\x12\x0f\n\x07\x61mounts\x18\x02 \x03(\x04\x12\x0b\n\x03\x66\x65\x65\x18\x03 \x01(\x04\x12\x16\n\x0emaster_address\x18\x04 \x01(\t\x12\x16\n\x0esigner_address\x18\x05 \x01(\t\x12\x11\n\tots_index\x18\x06 \x01(\x04\"h\n\x1aRelayTransferTxnBySlaveReq\x12\x14\n\x0c\x61\x64\x64resses_to\x18\x01 \x03(\t\x12\x0f\n\x07\x61mounts\x18\x02 \x03(\x04\x12\x0b\n\x03\x66\x65\x65\x18\x03 \x01(\x04\x12\x16\n\x0emaster_address\x18\x04 \x01(\t\"u\n\x12RelayMessageTxnReq\x12\x0f\n\x07message\x18\x01 \x01(\t\x12\x0b\n\x03\x66\x65\x65\x18\x02 \x01(\x04\x12\x16\n\x0emaster_address\x18\x03 \x01(\t\x12\x16\n\x0esigner_address\x18\x04 \x01(\t\x12\x11\n\tots_index\x18\x05 \x01(\x04\"Q\n\x19RelayMessageTxnBySlaveReq\x12\x0f\n\x07message\x18\x01 \x01(\t\x12\x0b\n\x03\x66\x65\x65\x18\x02 \x01(\x04\x12\x16\n\x0emaster_address\x18\x03 \x01(\t\"\xc5\x01\n\x10RelayTokenTxnReq\x12\x0e\n\x06symbol\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\r\n\x05owner\x18\x03 \x01(\t\x12\x10\n\x08\x64\x65\x63imals\x18\x04 \x01(\x04\x12\x11\n\taddresses\x18\x05 \x03(\t\x12\x0f\n\x07\x61mounts\x18\x06 \x03(\x04\x12\x0b\n\x03\x66\x65\x65\x18\x07 \x01(\x04\x12\x16\n\x0emaster_address\x18\x08 \x01(\t\x12\x16\n\x0esigner_address\x18\t \x01(\t\x12\x11\n\tots_index\x18\n \x01(\x04\"\xa1\x01\n\x17RelayTokenTxnBySlaveReq\x12\x0e\n\x06symbol\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\r\n\x05owner\x18\x03 \x01(\t\x12\x10\n\x08\x64\x65\x63imals\x18\x04 \x01(\x04\x12\x11\n\taddresses\x18\x05 \x03(\t\x12\x0f\n\x07\x61mounts\x18\x06 \x03(\x04\x12\x0b\n\x03\x66\x65\x65\x18\x07 \x01(\x04\x12\x16\n\x0emaster_address\x18\x08 \x01(\t\"\xa7\x01\n\x18RelayTransferTokenTxnReq\x12\x14\n\x0c\x61\x64\x64resses_to\x18\x01 \x03(\t\x12\x14\n\x0ctoken_txhash\x18\x02 \x01(\t\x12\x0f\n\x07\x61mounts\x18\x03 \x03(\x04\x12\x0b\n\x03\x66\x65\x65\x18\x04 \x01(\x04\x12\x16\n\x0emaster_address\x18\x05 \x01(\t\x12\x16\n\x0esigner_address\x18\x06 \x01(\t\x12\x11\n\tots_index\x18\x07 \x01(\x04\"\x83\x01\n\x1fRelayTransferTokenTxnBySlaveReq\x12\x14\n\x0c\x61\x64\x64resses_to\x18\x01 \x03(\t\x12\x14\n\x0ctoken_txhash\x18\x02 \x01(\t\x12\x0f\n\x07\x61mounts\x18\x03 \x03(\x04\x12\x0b\n\x03\x66\x65\x65\x18\x04 \x01(\x04\x12\x16\n\x0emaster_address\x18\x05 \x01(\t\"\x8b\x01\n\x10RelaySlaveTxnReq\x12\x11\n\tslave_pks\x18\x01 \x03(\x0c\x12\x14\n\x0c\x61\x63\x63\x65ss_types\x18\x02 \x03(\r\x12\x0b\n\x03\x66\x65\x65\x18\x03 \x01(\x04\x12\x16\n\x0emaster_address\x18\x04 \x01(\t\x12\x16\n\x0esigner_address\x18\x05 \x01(\t\x12\x11\n\tots_index\x18\x06 \x01(\x04\"g\n\x17RelaySlaveTxnBySlaveReq\x12\x11\n\tslave_pks\x18\x01 \x03(\x0c\x12\x14\n\x0c\x61\x63\x63\x65ss_types\x18\x02 \x03(\r\x12\x0b\n\x03\x66\x65\x65\x18\x03 \x01(\x04\x12\x16\n\x0emaster_address\x18\x04 \x01(\t\"N\n\x0cRelayTxnResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12!\n\x02tx\x18\x03 \x01(\x0b\x32\x15.qsc.PlainTransaction\"C\n\x13\x43hangePassphraseReq\x12\x15\n\roldPassphrase\x18\x01 \x01(\t\x12\x15\n\rnewPassphrase\x18\x02 \x01(\t\"3\n\x14\x43hangePassphraseResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\"+\n\x18TransactionsByAddressReq\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\"z\n\x19TransactionsByAddressResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12/\n\x11mini_transactions\x18\x03 \x03(\x0b\x32\x14.qsc.MiniTransaction\x12\x0f\n\x07\x62\x61lance\x18\x04 \x01(\x04\"`\n!PaginatedTransactionsByAddressReq\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\x12\x15\n\ritem_per_page\x18\x02 \x01(\x04\x12\x13\n\x0bpage_number\x18\x03 \x01(\x04\"\x83\x01\n\"PaginatedTransactionsByAddressResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12/\n\x11mini_transactions\x18\x03 \x03(\x0b\x32\x14.qsc.MiniTransaction\x12\x0f\n\x07\x62\x61lance\x18\x04 \x01(\x04\"!\n\x0eTransactionReq\x12\x0f\n\x07tx_hash\x18\x01 \x01(\t\"\x99\x01\n\x0fTransactionResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12!\n\x02tx\x18\x03 \x01(\x0b\x32\x15.qsc.PlainTransaction\x12\x15\n\rconfirmations\x18\x04 \x01(\t\x12\x14\n\x0c\x62lock_number\x18\x05 \x01(\x04\x12\x19\n\x11\x62lock_header_hash\x18\x06 \x01(\t\"\x1d\n\nBalanceReq\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\";\n\x0b\x42\x61lanceResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12\x0f\n\x07\x62\x61lance\x18\x03 \x01(\t\"\x11\n\x0fTotalBalanceReq\"@\n\x10TotalBalanceResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12\x0f\n\x07\x62\x61lance\x18\x03 \x01(\t\"\x19\n\x06OTSReq\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\"\x9b\x01\n\x07OTSResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12\x34\n\x14ots_bitfield_by_page\x18\x03 \x03(\x0b\x32\x16.qsc.OTSBitfieldByPage\x12\x1d\n\x15next_unused_ots_index\x18\x04 \x01(\x04\x12\x1e\n\x16unused_ots_index_found\x18\x05 \x01(\x08\"\x0b\n\tHeightReq\"9\n\nHeightResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12\x0e\n\x06height\x18\x03 \x01(\x04\"\x1f\n\x08\x42lockReq\x12\x13\n\x0bheader_hash\x18\x01 \x01(\t\"H\n\tBlockResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12\x1e\n\x05\x62lock\x18\x03 \x01(\x0b\x32\x0f.qsc.PlainBlock\"(\n\x10\x42lockByNumberReq\x12\x14\n\x0c\x62lock_number\x18\x01 \x01(\x04\"\x1e\n\x10\x41\x64\x64ressFromPKReq\x12\n\n\x02pk\x18\x01 \x01(\t\"A\n\x11\x41\x64\x64ressFromPKResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12\x0f\n\x07\x61\x64\x64ress\x18\x03 \x01(\t\"\r\n\x0bNodeInfoReq\"\xc1\x01\n\x0cNodeInfoResp\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12\x0f\n\x07version\x18\x03 \x01(\t\x12\x17\n\x0fnum_connections\x18\x04 \x01(\t\x12\x17\n\x0fnum_known_peers\x18\x05 \x01(\t\x12\x0e\n\x06uptime\x18\x06 \x01(\x04\x12\x14\n\x0c\x62lock_height\x18\x07 \x01(\x04\x12\x17\n\x0f\x62lock_last_hash\x18\x08 \x01(\t\x12\x12\n\nnetwork_id\x18\t \x01(\t\"7\n\x13PlainGenesisBalance\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\x12\x0f\n\x07\x62\x61lance\x18\x02 \x01(\x04\"5\n\x12PlainAddressAmount\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\x12\x0e\n\x06\x61mount\x18\x02 \x01(\x04\"\xce\x07\n\x10PlainTransaction\x12\x13\n\x0bmaster_addr\x18\x01 \x01(\t\x12\x0b\n\x03\x66\x65\x65\x18\x02 \x01(\x04\x12\x12\n\npublic_key\x18\x03 \x01(\t\x12\x11\n\tsignature\x18\x04 \x01(\t\x12\r\n\x05nonce\x18\x05 \x01(\x04\x12\x18\n\x10transaction_hash\x18\x06 \x01(\t\x12\x13\n\x0bsigner_addr\x18\x07 \x01(\t\x12\x32\n\x08transfer\x18\x08 \x01(\x0b\x32\x1e.qsc.PlainTransaction.TransferH\x00\x12\x32\n\x08\x63oinbase\x18\t \x01(\x0b\x32\x1e.qsc.PlainTransaction.CoinBaseH\x00\x12;\n\tlatticePK\x18\n \x01(\x0b\x32&.qsc.PlainTransaction.LatticePublicKeyH\x00\x12\x30\n\x07message\x18\x0b \x01(\x0b\x32\x1d.qsc.PlainTransaction.MessageH\x00\x12,\n\x05token\x18\x0c \x01(\x0b\x32\x1b.qsc.PlainTransaction.TokenH\x00\x12=\n\x0etransfer_token\x18\r \x01(\x0b\x32#.qsc.PlainTransaction.TransferTokenH\x00\x12,\n\x05slave\x18\x0e \x01(\x0b\x32\x1b.qsc.PlainTransaction.SlaveH\x00\x1a-\n\x08Transfer\x12\x10\n\x08\x61\x64\x64rs_to\x18\x01 \x03(\t\x12\x0f\n\x07\x61mounts\x18\x02 \x03(\x04\x1a+\n\x08\x43oinBase\x12\x0f\n\x07\x61\x64\x64r_to\x18\x01 \x01(\t\x12\x0e\n\x06\x61mount\x18\x02 \x01(\x04\x1a:\n\x10LatticePublicKey\x12\x10\n\x08kyber_pk\x18\x01 \x01(\t\x12\x14\n\x0c\x64ilithium_pk\x18\x02 \x01(\t\x1a\x1f\n\x07Message\x12\x14\n\x0cmessage_hash\x18\x01 \x01(\t\x1ay\n\x05Token\x12\x0e\n\x06symbol\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\r\n\x05owner\x18\x03 \x01(\t\x12\x10\n\x08\x64\x65\x63imals\x18\x04 \x01(\x04\x12\x31\n\x10initial_balances\x18\x05 \x03(\x0b\x32\x17.qsc.PlainAddressAmount\x1aH\n\rTransferToken\x12\x14\n\x0ctoken_txhash\x18\x01 \x01(\t\x12\x10\n\x08\x61\x64\x64rs_to\x18\x02 \x03(\t\x12\x0f\n\x07\x61mounts\x18\x03 \x03(\x04\x1a\x30\n\x05Slave\x12\x11\n\tslave_pks\x18\x01 \x03(\t\x12\x14\n\x0c\x61\x63\x63\x65ss_types\x18\x02 \x03(\rB\x11\n\x0ftransactionType\"\xdc\x01\n\x10PlainBlockHeader\x12\x13\n\x0bhash_header\x18\x01 \x01(\t\x12\x14\n\x0c\x62lock_number\x18\x02 \x01(\x04\x12\x19\n\x11timestamp_seconds\x18\x03 \x01(\x04\x12\x18\n\x10hash_header_prev\x18\x04 \x01(\t\x12\x14\n\x0creward_block\x18\x05 \x01(\x04\x12\x12\n\nreward_fee\x18\x06 \x01(\x04\x12\x13\n\x0bmerkle_root\x18\x07 \x01(\t\x12\x14\n\x0cmining_nonce\x18\x08 \x01(\r\x12\x13\n\x0b\x65xtra_nonce\x18\t \x01(\x04\"\x93\x01\n\nPlainBlock\x12%\n\x06header\x18\x01 \x01(\x0b\x32\x15.qsc.PlainBlockHeader\x12+\n\x0ctransactions\x18\x02 \x03(\x0b\x32\x15.qsc.PlainTransaction\x12\x31\n\x0fgenesis_balance\x18\x03 \x03(\x0b\x32\x18.qsc.PlainGenesisBalance2\xdb\x10\n\tWalletAPI\x12>\n\rAddNewAddress\x12\x15.qsc.AddNewAddressReq\x1a\x16.qsc.AddNewAddressResp\x12R\n\x17\x41\x64\x64NewAddressWithSlaves\x12\x1f.qsc.AddNewAddressWithSlavesReq\x1a\x16.qsc.AddNewAddressResp\x12>\n\rListAddresses\x12\x15.qsc.ListAddressesReq\x1a\x16.qsc.ListAddressesResp\x12>\n\rRemoveAddress\x12\x15.qsc.RemoveAddressReq\x1a\x16.qsc.RemoveAddressResp\x12=\n\x0eIsValidAddress\x12\x14.qsc.ValidAddressReq\x1a\x15.qsc.ValidAddressResp\x12>\n\rEncryptWallet\x12\x15.qsc.EncryptWalletReq\x1a\x16.qsc.EncryptWalletResp\x12\x35\n\nLockWallet\x12\x12.qsc.LockWalletReq\x1a\x13.qsc.LockWalletResp\x12;\n\x0cUnlockWallet\x12\x14.qsc.UnlockWalletReq\x1a\x15.qsc.UnlockWalletResp\x12G\n\x10GetRecoverySeeds\x12\x18.qsc.GetRecoverySeedsReq\x1a\x19.qsc.GetRecoverySeedsResp\x12>\n\rGetWalletInfo\x12\x15.qsc.GetWalletInfoReq\x1a\x16.qsc.GetWalletInfoResp\x12?\n\x10RelayTransferTxn\x12\x18.qsc.RelayTransferTxnReq\x1a\x11.qsc.RelayTxnResp\x12M\n\x17RelayTransferTxnBySlave\x12\x1f.qsc.RelayTransferTxnBySlaveReq\x1a\x11.qsc.RelayTxnResp\x12=\n\x0fRelayMessageTxn\x12\x17.qsc.RelayMessageTxnReq\x1a\x11.qsc.RelayTxnResp\x12K\n\x16RelayMessageTxnBySlave\x12\x1e.qsc.RelayMessageTxnBySlaveReq\x1a\x11.qsc.RelayTxnResp\x12\x39\n\rRelayTokenTxn\x12\x15.qsc.RelayTokenTxnReq\x1a\x11.qsc.RelayTxnResp\x12G\n\x14RelayTokenTxnBySlave\x12\x1c.qsc.RelayTokenTxnBySlaveReq\x1a\x11.qsc.RelayTxnResp\x12I\n\x15RelayTransferTokenTxn\x12\x1d.qsc.RelayTransferTokenTxnReq\x1a\x11.qsc.RelayTxnResp\x12W\n\x1cRelayTransferTokenTxnBySlave\x12$.qsc.RelayTransferTokenTxnBySlaveReq\x1a\x11.qsc.RelayTxnResp\x12\x39\n\rRelaySlaveTxn\x12\x15.qsc.RelaySlaveTxnReq\x1a\x11.qsc.RelayTxnResp\x12G\n\x14RelaySlaveTxnBySlave\x12\x1c.qsc.RelaySlaveTxnBySlaveReq\x1a\x11.qsc.RelayTxnResp\x12G\n\x10\x43hangePassphrase\x12\x18.qsc.ChangePassphraseReq\x1a\x19.qsc.ChangePassphraseResp\x12Y\n\x18GetTransactionsByAddress\x12\x1d.qsc.TransactionsByAddressReq\x1a\x1e.qsc.TransactionsByAddressResp\x12t\n!GetPaginatedTransactionsByAddress\x12&.qsc.PaginatedTransactionsByAddressReq\x1a\'.qsc.PaginatedTransactionsByAddressResp\x12;\n\x0eGetTransaction\x12\x13.qsc.TransactionReq\x1a\x14.qsc.TransactionResp\x12/\n\nGetBalance\x12\x0f.qsc.BalanceReq\x1a\x10.qsc.BalanceResp\x12>\n\x0fGetTotalBalance\x12\x14.qsc.TotalBalanceReq\x1a\x15.qsc.TotalBalanceResp\x12#\n\x06GetOTS\x12\x0b.qsc.OTSReq\x1a\x0c.qsc.OTSResp\x12,\n\tGetHeight\x12\x0e.qsc.HeightReq\x1a\x0f.qsc.HeightResp\x12)\n\x08GetBlock\x12\r.qsc.BlockReq\x1a\x0e.qsc.BlockResp\x12\x39\n\x10GetBlockByNumber\x12\x15.qsc.BlockByNumberReq\x1a\x0e.qsc.BlockResp\x12\x41\n\x10GetAddressFromPK\x12\x15.qsc.AddressFromPKReq\x1a\x16.qsc.AddressFromPKResp\x12\x32\n\x0bGetNodeInfo\x12\x10.qsc.NodeInfoReq\x1a\x11.qsc.NodeInfoRespb\x06proto3')



_ADDNEWADDRESSREQ = DESCRIPTOR.message_types_by_name['AddNewAddressReq']
_ADDNEWADDRESSRESP = DESCRIPTOR.message_types_by_name['AddNewAddressResp']
_ADDNEWADDRESSWITHSLAVESREQ = DESCRIPTOR.message_types_by_name['AddNewAddressWithSlavesReq']
_ADDADDRESSFROMSEEDREQ = DESCRIPTOR.message_types_by_name['AddAddressFromSeedReq']
_ADDADDRESSFROMSEEDRESP = DESCRIPTOR.message_types_by_name['AddAddressFromSeedResp']
_LISTADDRESSESREQ = DESCRIPTOR.message_types_by_name['ListAddressesReq']
_LISTADDRESSESRESP = DESCRIPTOR.message_types_by_name['ListAddressesResp']
_REMOVEADDRESSREQ = DESCRIPTOR.message_types_by_name['RemoveAddressReq']
_REMOVEADDRESSRESP = DESCRIPTOR.message_types_by_name['RemoveAddressResp']
_VALIDADDRESSREQ = DESCRIPTOR.message_types_by_name['ValidAddressReq']
_VALIDADDRESSRESP = DESCRIPTOR.message_types_by_name['ValidAddressResp']
_ENCRYPTWALLETREQ = DESCRIPTOR.message_types_by_name['EncryptWalletReq']
_ENCRYPTWALLETRESP = DESCRIPTOR.message_types_by_name['EncryptWalletResp']
_UNLOCKWALLETREQ = DESCRIPTOR.message_types_by_name['UnlockWalletReq']
_UNLOCKWALLETRESP = DESCRIPTOR.message_types_by_name['UnlockWalletResp']
_LOCKWALLETREQ = DESCRIPTOR.message_types_by_name['LockWalletReq']
_LOCKWALLETRESP = DESCRIPTOR.message_types_by_name['LockWalletResp']
_GETRECOVERYSEEDSREQ = DESCRIPTOR.message_types_by_name['GetRecoverySeedsReq']
_GETRECOVERYSEEDSRESP = DESCRIPTOR.message_types_by_name['GetRecoverySeedsResp']
_GETWALLETINFOREQ = DESCRIPTOR.message_types_by_name['GetWalletInfoReq']
_GETWALLETINFORESP = DESCRIPTOR.message_types_by_name['GetWalletInfoResp']
_RELAYTRANSFERTXNREQ = DESCRIPTOR.message_types_by_name['RelayTransferTxnReq']
_RELAYTRANSFERTXNBYSLAVEREQ = DESCRIPTOR.message_types_by_name['RelayTransferTxnBySlaveReq']
_RELAYMESSAGETXNREQ = DESCRIPTOR.message_types_by_name['RelayMessageTxnReq']
_RELAYMESSAGETXNBYSLAVEREQ = DESCRIPTOR.message_types_by_name['RelayMessageTxnBySlaveReq']
_RELAYTOKENTXNREQ = DESCRIPTOR.message_types_by_name['RelayTokenTxnReq']
_RELAYTOKENTXNBYSLAVEREQ = DESCRIPTOR.message_types_by_name['RelayTokenTxnBySlaveReq']
_RELAYTRANSFERTOKENTXNREQ = DESCRIPTOR.message_types_by_name['RelayTransferTokenTxnReq']
_RELAYTRANSFERTOKENTXNBYSLAVEREQ = DESCRIPTOR.message_types_by_name['RelayTransferTokenTxnBySlaveReq']
_RELAYSLAVETXNREQ = DESCRIPTOR.message_types_by_name['RelaySlaveTxnReq']
_RELAYSLAVETXNBYSLAVEREQ = DESCRIPTOR.message_types_by_name['RelaySlaveTxnBySlaveReq']
_RELAYTXNRESP = DESCRIPTOR.message_types_by_name['RelayTxnResp']
_CHANGEPASSPHRASEREQ = DESCRIPTOR.message_types_by_name['ChangePassphraseReq']
_CHANGEPASSPHRASERESP = DESCRIPTOR.message_types_by_name['ChangePassphraseResp']
_TRANSACTIONSBYADDRESSREQ = DESCRIPTOR.message_types_by_name['TransactionsByAddressReq']
_TRANSACTIONSBYADDRESSRESP = DESCRIPTOR.message_types_by_name['TransactionsByAddressResp']
_PAGINATEDTRANSACTIONSBYADDRESSREQ = DESCRIPTOR.message_types_by_name['PaginatedTransactionsByAddressReq']
_PAGINATEDTRANSACTIONSBYADDRESSRESP = DESCRIPTOR.message_types_by_name['PaginatedTransactionsByAddressResp']
_TRANSACTIONREQ = DESCRIPTOR.message_types_by_name['TransactionReq']
_TRANSACTIONRESP = DESCRIPTOR.message_types_by_name['TransactionResp']
_BALANCEREQ = DESCRIPTOR.message_types_by_name['BalanceReq']
_BALANCERESP = DESCRIPTOR.message_types_by_name['BalanceResp']
_TOTALBALANCEREQ = DESCRIPTOR.message_types_by_name['TotalBalanceReq']
_TOTALBALANCERESP = DESCRIPTOR.message_types_by_name['TotalBalanceResp']
_OTSREQ = DESCRIPTOR.message_types_by_name['OTSReq']
_OTSRESP = DESCRIPTOR.message_types_by_name['OTSResp']
_HEIGHTREQ = DESCRIPTOR.message_types_by_name['HeightReq']
_HEIGHTRESP = DESCRIPTOR.message_types_by_name['HeightResp']
_BLOCKREQ = DESCRIPTOR.message_types_by_name['BlockReq']
_BLOCKRESP = DESCRIPTOR.message_types_by_name['BlockResp']
_BLOCKBYNUMBERREQ = DESCRIPTOR.message_types_by_name['BlockByNumberReq']
_ADDRESSFROMPKREQ = DESCRIPTOR.message_types_by_name['AddressFromPKReq']
_ADDRESSFROMPKRESP = DESCRIPTOR.message_types_by_name['AddressFromPKResp']
_NODEINFOREQ = DESCRIPTOR.message_types_by_name['NodeInfoReq']
_NODEINFORESP = DESCRIPTOR.message_types_by_name['NodeInfoResp']
_PLAINGENESISBALANCE = DESCRIPTOR.message_types_by_name['PlainGenesisBalance']
_PLAINADDRESSAMOUNT = DESCRIPTOR.message_types_by_name['PlainAddressAmount']
_PLAINTRANSACTION = DESCRIPTOR.message_types_by_name['PlainTransaction']
_PLAINTRANSACTION_TRANSFER = _PLAINTRANSACTION.nested_types_by_name['Transfer']
_PLAINTRANSACTION_COINBASE = _PLAINTRANSACTION.nested_types_by_name['CoinBase']
_PLAINTRANSACTION_LATTICEPUBLICKEY = _PLAINTRANSACTION.nested_types_by_name['LatticePublicKey']
_PLAINTRANSACTION_MESSAGE = _PLAINTRANSACTION.nested_types_by_name['Message']
_PLAINTRANSACTION_TOKEN = _PLAINTRANSACTION.nested_types_by_name['Token']
_PLAINTRANSACTION_TRANSFERTOKEN = _PLAINTRANSACTION.nested_types_by_name['TransferToken']
_PLAINTRANSACTION_SLAVE = _PLAINTRANSACTION.nested_types_by_name['Slave']
_PLAINBLOCKHEADER = DESCRIPTOR.message_types_by_name['PlainBlockHeader']
_PLAINBLOCK = DESCRIPTOR.message_types_by_name['PlainBlock']
AddNewAddressReq = _reflection.GeneratedProtocolMessageType('AddNewAddressReq', (_message.Message,), {
  'DESCRIPTOR' : _ADDNEWADDRESSREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.AddNewAddressReq)
  })
_sym_db.RegisterMessage(AddNewAddressReq)

AddNewAddressResp = _reflection.GeneratedProtocolMessageType('AddNewAddressResp', (_message.Message,), {
  'DESCRIPTOR' : _ADDNEWADDRESSRESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.AddNewAddressResp)
  })
_sym_db.RegisterMessage(AddNewAddressResp)

AddNewAddressWithSlavesReq = _reflection.GeneratedProtocolMessageType('AddNewAddressWithSlavesReq', (_message.Message,), {
  'DESCRIPTOR' : _ADDNEWADDRESSWITHSLAVESREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.AddNewAddressWithSlavesReq)
  })
_sym_db.RegisterMessage(AddNewAddressWithSlavesReq)

AddAddressFromSeedReq = _reflection.GeneratedProtocolMessageType('AddAddressFromSeedReq', (_message.Message,), {
  'DESCRIPTOR' : _ADDADDRESSFROMSEEDREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.AddAddressFromSeedReq)
  })
_sym_db.RegisterMessage(AddAddressFromSeedReq)

AddAddressFromSeedResp = _reflection.GeneratedProtocolMessageType('AddAddressFromSeedResp', (_message.Message,), {
  'DESCRIPTOR' : _ADDADDRESSFROMSEEDRESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.AddAddressFromSeedResp)
  })
_sym_db.RegisterMessage(AddAddressFromSeedResp)

ListAddressesReq = _reflection.GeneratedProtocolMessageType('ListAddressesReq', (_message.Message,), {
  'DESCRIPTOR' : _LISTADDRESSESREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.ListAddressesReq)
  })
_sym_db.RegisterMessage(ListAddressesReq)

ListAddressesResp = _reflection.GeneratedProtocolMessageType('ListAddressesResp', (_message.Message,), {
  'DESCRIPTOR' : _LISTADDRESSESRESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.ListAddressesResp)
  })
_sym_db.RegisterMessage(ListAddressesResp)

RemoveAddressReq = _reflection.GeneratedProtocolMessageType('RemoveAddressReq', (_message.Message,), {
  'DESCRIPTOR' : _REMOVEADDRESSREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.RemoveAddressReq)
  })
_sym_db.RegisterMessage(RemoveAddressReq)

RemoveAddressResp = _reflection.GeneratedProtocolMessageType('RemoveAddressResp', (_message.Message,), {
  'DESCRIPTOR' : _REMOVEADDRESSRESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.RemoveAddressResp)
  })
_sym_db.RegisterMessage(RemoveAddressResp)

ValidAddressReq = _reflection.GeneratedProtocolMessageType('ValidAddressReq', (_message.Message,), {
  'DESCRIPTOR' : _VALIDADDRESSREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.ValidAddressReq)
  })
_sym_db.RegisterMessage(ValidAddressReq)

ValidAddressResp = _reflection.GeneratedProtocolMessageType('ValidAddressResp', (_message.Message,), {
  'DESCRIPTOR' : _VALIDADDRESSRESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.ValidAddressResp)
  })
_sym_db.RegisterMessage(ValidAddressResp)

EncryptWalletReq = _reflection.GeneratedProtocolMessageType('EncryptWalletReq', (_message.Message,), {
  'DESCRIPTOR' : _ENCRYPTWALLETREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.EncryptWalletReq)
  })
_sym_db.RegisterMessage(EncryptWalletReq)

EncryptWalletResp = _reflection.GeneratedProtocolMessageType('EncryptWalletResp', (_message.Message,), {
  'DESCRIPTOR' : _ENCRYPTWALLETRESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.EncryptWalletResp)
  })
_sym_db.RegisterMessage(EncryptWalletResp)

UnlockWalletReq = _reflection.GeneratedProtocolMessageType('UnlockWalletReq', (_message.Message,), {
  'DESCRIPTOR' : _UNLOCKWALLETREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.UnlockWalletReq)
  })
_sym_db.RegisterMessage(UnlockWalletReq)

UnlockWalletResp = _reflection.GeneratedProtocolMessageType('UnlockWalletResp', (_message.Message,), {
  'DESCRIPTOR' : _UNLOCKWALLETRESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.UnlockWalletResp)
  })
_sym_db.RegisterMessage(UnlockWalletResp)

LockWalletReq = _reflection.GeneratedProtocolMessageType('LockWalletReq', (_message.Message,), {
  'DESCRIPTOR' : _LOCKWALLETREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.LockWalletReq)
  })
_sym_db.RegisterMessage(LockWalletReq)

LockWalletResp = _reflection.GeneratedProtocolMessageType('LockWalletResp', (_message.Message,), {
  'DESCRIPTOR' : _LOCKWALLETRESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.LockWalletResp)
  })
_sym_db.RegisterMessage(LockWalletResp)

GetRecoverySeedsReq = _reflection.GeneratedProtocolMessageType('GetRecoverySeedsReq', (_message.Message,), {
  'DESCRIPTOR' : _GETRECOVERYSEEDSREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetRecoverySeedsReq)
  })
_sym_db.RegisterMessage(GetRecoverySeedsReq)

GetRecoverySeedsResp = _reflection.GeneratedProtocolMessageType('GetRecoverySeedsResp', (_message.Message,), {
  'DESCRIPTOR' : _GETRECOVERYSEEDSRESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetRecoverySeedsResp)
  })
_sym_db.RegisterMessage(GetRecoverySeedsResp)

GetWalletInfoReq = _reflection.GeneratedProtocolMessageType('GetWalletInfoReq', (_message.Message,), {
  'DESCRIPTOR' : _GETWALLETINFOREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetWalletInfoReq)
  })
_sym_db.RegisterMessage(GetWalletInfoReq)

GetWalletInfoResp = _reflection.GeneratedProtocolMessageType('GetWalletInfoResp', (_message.Message,), {
  'DESCRIPTOR' : _GETWALLETINFORESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.GetWalletInfoResp)
  })
_sym_db.RegisterMessage(GetWalletInfoResp)

RelayTransferTxnReq = _reflection.GeneratedProtocolMessageType('RelayTransferTxnReq', (_message.Message,), {
  'DESCRIPTOR' : _RELAYTRANSFERTXNREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.RelayTransferTxnReq)
  })
_sym_db.RegisterMessage(RelayTransferTxnReq)

RelayTransferTxnBySlaveReq = _reflection.GeneratedProtocolMessageType('RelayTransferTxnBySlaveReq', (_message.Message,), {
  'DESCRIPTOR' : _RELAYTRANSFERTXNBYSLAVEREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.RelayTransferTxnBySlaveReq)
  })
_sym_db.RegisterMessage(RelayTransferTxnBySlaveReq)

RelayMessageTxnReq = _reflection.GeneratedProtocolMessageType('RelayMessageTxnReq', (_message.Message,), {
  'DESCRIPTOR' : _RELAYMESSAGETXNREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.RelayMessageTxnReq)
  })
_sym_db.RegisterMessage(RelayMessageTxnReq)

RelayMessageTxnBySlaveReq = _reflection.GeneratedProtocolMessageType('RelayMessageTxnBySlaveReq', (_message.Message,), {
  'DESCRIPTOR' : _RELAYMESSAGETXNBYSLAVEREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.RelayMessageTxnBySlaveReq)
  })
_sym_db.RegisterMessage(RelayMessageTxnBySlaveReq)

RelayTokenTxnReq = _reflection.GeneratedProtocolMessageType('RelayTokenTxnReq', (_message.Message,), {
  'DESCRIPTOR' : _RELAYTOKENTXNREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.RelayTokenTxnReq)
  })
_sym_db.RegisterMessage(RelayTokenTxnReq)

RelayTokenTxnBySlaveReq = _reflection.GeneratedProtocolMessageType('RelayTokenTxnBySlaveReq', (_message.Message,), {
  'DESCRIPTOR' : _RELAYTOKENTXNBYSLAVEREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.RelayTokenTxnBySlaveReq)
  })
_sym_db.RegisterMessage(RelayTokenTxnBySlaveReq)

RelayTransferTokenTxnReq = _reflection.GeneratedProtocolMessageType('RelayTransferTokenTxnReq', (_message.Message,), {
  'DESCRIPTOR' : _RELAYTRANSFERTOKENTXNREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.RelayTransferTokenTxnReq)
  })
_sym_db.RegisterMessage(RelayTransferTokenTxnReq)

RelayTransferTokenTxnBySlaveReq = _reflection.GeneratedProtocolMessageType('RelayTransferTokenTxnBySlaveReq', (_message.Message,), {
  'DESCRIPTOR' : _RELAYTRANSFERTOKENTXNBYSLAVEREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.RelayTransferTokenTxnBySlaveReq)
  })
_sym_db.RegisterMessage(RelayTransferTokenTxnBySlaveReq)

RelaySlaveTxnReq = _reflection.GeneratedProtocolMessageType('RelaySlaveTxnReq', (_message.Message,), {
  'DESCRIPTOR' : _RELAYSLAVETXNREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.RelaySlaveTxnReq)
  })
_sym_db.RegisterMessage(RelaySlaveTxnReq)

RelaySlaveTxnBySlaveReq = _reflection.GeneratedProtocolMessageType('RelaySlaveTxnBySlaveReq', (_message.Message,), {
  'DESCRIPTOR' : _RELAYSLAVETXNBYSLAVEREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.RelaySlaveTxnBySlaveReq)
  })
_sym_db.RegisterMessage(RelaySlaveTxnBySlaveReq)

RelayTxnResp = _reflection.GeneratedProtocolMessageType('RelayTxnResp', (_message.Message,), {
  'DESCRIPTOR' : _RELAYTXNRESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.RelayTxnResp)
  })
_sym_db.RegisterMessage(RelayTxnResp)

ChangePassphraseReq = _reflection.GeneratedProtocolMessageType('ChangePassphraseReq', (_message.Message,), {
  'DESCRIPTOR' : _CHANGEPASSPHRASEREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.ChangePassphraseReq)
  })
_sym_db.RegisterMessage(ChangePassphraseReq)

ChangePassphraseResp = _reflection.GeneratedProtocolMessageType('ChangePassphraseResp', (_message.Message,), {
  'DESCRIPTOR' : _CHANGEPASSPHRASERESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.ChangePassphraseResp)
  })
_sym_db.RegisterMessage(ChangePassphraseResp)

TransactionsByAddressReq = _reflection.GeneratedProtocolMessageType('TransactionsByAddressReq', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONSBYADDRESSREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.TransactionsByAddressReq)
  })
_sym_db.RegisterMessage(TransactionsByAddressReq)

TransactionsByAddressResp = _reflection.GeneratedProtocolMessageType('TransactionsByAddressResp', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONSBYADDRESSRESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.TransactionsByAddressResp)
  })
_sym_db.RegisterMessage(TransactionsByAddressResp)

PaginatedTransactionsByAddressReq = _reflection.GeneratedProtocolMessageType('PaginatedTransactionsByAddressReq', (_message.Message,), {
  'DESCRIPTOR' : _PAGINATEDTRANSACTIONSBYADDRESSREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.PaginatedTransactionsByAddressReq)
  })
_sym_db.RegisterMessage(PaginatedTransactionsByAddressReq)

PaginatedTransactionsByAddressResp = _reflection.GeneratedProtocolMessageType('PaginatedTransactionsByAddressResp', (_message.Message,), {
  'DESCRIPTOR' : _PAGINATEDTRANSACTIONSBYADDRESSRESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.PaginatedTransactionsByAddressResp)
  })
_sym_db.RegisterMessage(PaginatedTransactionsByAddressResp)

TransactionReq = _reflection.GeneratedProtocolMessageType('TransactionReq', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.TransactionReq)
  })
_sym_db.RegisterMessage(TransactionReq)

TransactionResp = _reflection.GeneratedProtocolMessageType('TransactionResp', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONRESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.TransactionResp)
  })
_sym_db.RegisterMessage(TransactionResp)

BalanceReq = _reflection.GeneratedProtocolMessageType('BalanceReq', (_message.Message,), {
  'DESCRIPTOR' : _BALANCEREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.BalanceReq)
  })
_sym_db.RegisterMessage(BalanceReq)

BalanceResp = _reflection.GeneratedProtocolMessageType('BalanceResp', (_message.Message,), {
  'DESCRIPTOR' : _BALANCERESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.BalanceResp)
  })
_sym_db.RegisterMessage(BalanceResp)

TotalBalanceReq = _reflection.GeneratedProtocolMessageType('TotalBalanceReq', (_message.Message,), {
  'DESCRIPTOR' : _TOTALBALANCEREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.TotalBalanceReq)
  })
_sym_db.RegisterMessage(TotalBalanceReq)

TotalBalanceResp = _reflection.GeneratedProtocolMessageType('TotalBalanceResp', (_message.Message,), {
  'DESCRIPTOR' : _TOTALBALANCERESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.TotalBalanceResp)
  })
_sym_db.RegisterMessage(TotalBalanceResp)

OTSReq = _reflection.GeneratedProtocolMessageType('OTSReq', (_message.Message,), {
  'DESCRIPTOR' : _OTSREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.OTSReq)
  })
_sym_db.RegisterMessage(OTSReq)

OTSResp = _reflection.GeneratedProtocolMessageType('OTSResp', (_message.Message,), {
  'DESCRIPTOR' : _OTSRESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.OTSResp)
  })
_sym_db.RegisterMessage(OTSResp)

HeightReq = _reflection.GeneratedProtocolMessageType('HeightReq', (_message.Message,), {
  'DESCRIPTOR' : _HEIGHTREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.HeightReq)
  })
_sym_db.RegisterMessage(HeightReq)

HeightResp = _reflection.GeneratedProtocolMessageType('HeightResp', (_message.Message,), {
  'DESCRIPTOR' : _HEIGHTRESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.HeightResp)
  })
_sym_db.RegisterMessage(HeightResp)

BlockReq = _reflection.GeneratedProtocolMessageType('BlockReq', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.BlockReq)
  })
_sym_db.RegisterMessage(BlockReq)

BlockResp = _reflection.GeneratedProtocolMessageType('BlockResp', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKRESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.BlockResp)
  })
_sym_db.RegisterMessage(BlockResp)

BlockByNumberReq = _reflection.GeneratedProtocolMessageType('BlockByNumberReq', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKBYNUMBERREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.BlockByNumberReq)
  })
_sym_db.RegisterMessage(BlockByNumberReq)

AddressFromPKReq = _reflection.GeneratedProtocolMessageType('AddressFromPKReq', (_message.Message,), {
  'DESCRIPTOR' : _ADDRESSFROMPKREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.AddressFromPKReq)
  })
_sym_db.RegisterMessage(AddressFromPKReq)

AddressFromPKResp = _reflection.GeneratedProtocolMessageType('AddressFromPKResp', (_message.Message,), {
  'DESCRIPTOR' : _ADDRESSFROMPKRESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.AddressFromPKResp)
  })
_sym_db.RegisterMessage(AddressFromPKResp)

NodeInfoReq = _reflection.GeneratedProtocolMessageType('NodeInfoReq', (_message.Message,), {
  'DESCRIPTOR' : _NODEINFOREQ,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.NodeInfoReq)
  })
_sym_db.RegisterMessage(NodeInfoReq)

NodeInfoResp = _reflection.GeneratedProtocolMessageType('NodeInfoResp', (_message.Message,), {
  'DESCRIPTOR' : _NODEINFORESP,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.NodeInfoResp)
  })
_sym_db.RegisterMessage(NodeInfoResp)

PlainGenesisBalance = _reflection.GeneratedProtocolMessageType('PlainGenesisBalance', (_message.Message,), {
  'DESCRIPTOR' : _PLAINGENESISBALANCE,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.PlainGenesisBalance)
  })
_sym_db.RegisterMessage(PlainGenesisBalance)

PlainAddressAmount = _reflection.GeneratedProtocolMessageType('PlainAddressAmount', (_message.Message,), {
  'DESCRIPTOR' : _PLAINADDRESSAMOUNT,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.PlainAddressAmount)
  })
_sym_db.RegisterMessage(PlainAddressAmount)

PlainTransaction = _reflection.GeneratedProtocolMessageType('PlainTransaction', (_message.Message,), {

  'Transfer' : _reflection.GeneratedProtocolMessageType('Transfer', (_message.Message,), {
    'DESCRIPTOR' : _PLAINTRANSACTION_TRANSFER,
    '__module__' : 'qscwallet_pb2'
    # @@protoc_insertion_point(class_scope:qsc.PlainTransaction.Transfer)
    })
  ,

  'CoinBase' : _reflection.GeneratedProtocolMessageType('CoinBase', (_message.Message,), {
    'DESCRIPTOR' : _PLAINTRANSACTION_COINBASE,
    '__module__' : 'qscwallet_pb2'
    # @@protoc_insertion_point(class_scope:qsc.PlainTransaction.CoinBase)
    })
  ,

  'LatticePublicKey' : _reflection.GeneratedProtocolMessageType('LatticePublicKey', (_message.Message,), {
    'DESCRIPTOR' : _PLAINTRANSACTION_LATTICEPUBLICKEY,
    '__module__' : 'qscwallet_pb2'
    # @@protoc_insertion_point(class_scope:qsc.PlainTransaction.LatticePublicKey)
    })
  ,

  'Message' : _reflection.GeneratedProtocolMessageType('Message', (_message.Message,), {
    'DESCRIPTOR' : _PLAINTRANSACTION_MESSAGE,
    '__module__' : 'qscwallet_pb2'
    # @@protoc_insertion_point(class_scope:qsc.PlainTransaction.Message)
    })
  ,

  'Token' : _reflection.GeneratedProtocolMessageType('Token', (_message.Message,), {
    'DESCRIPTOR' : _PLAINTRANSACTION_TOKEN,
    '__module__' : 'qscwallet_pb2'
    # @@protoc_insertion_point(class_scope:qsc.PlainTransaction.Token)
    })
  ,

  'TransferToken' : _reflection.GeneratedProtocolMessageType('TransferToken', (_message.Message,), {
    'DESCRIPTOR' : _PLAINTRANSACTION_TRANSFERTOKEN,
    '__module__' : 'qscwallet_pb2'
    # @@protoc_insertion_point(class_scope:qsc.PlainTransaction.TransferToken)
    })
  ,

  'Slave' : _reflection.GeneratedProtocolMessageType('Slave', (_message.Message,), {
    'DESCRIPTOR' : _PLAINTRANSACTION_SLAVE,
    '__module__' : 'qscwallet_pb2'
    # @@protoc_insertion_point(class_scope:qsc.PlainTransaction.Slave)
    })
  ,
  'DESCRIPTOR' : _PLAINTRANSACTION,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.PlainTransaction)
  })
_sym_db.RegisterMessage(PlainTransaction)
_sym_db.RegisterMessage(PlainTransaction.Transfer)
_sym_db.RegisterMessage(PlainTransaction.CoinBase)
_sym_db.RegisterMessage(PlainTransaction.LatticePublicKey)
_sym_db.RegisterMessage(PlainTransaction.Message)
_sym_db.RegisterMessage(PlainTransaction.Token)
_sym_db.RegisterMessage(PlainTransaction.TransferToken)
_sym_db.RegisterMessage(PlainTransaction.Slave)

PlainBlockHeader = _reflection.GeneratedProtocolMessageType('PlainBlockHeader', (_message.Message,), {
  'DESCRIPTOR' : _PLAINBLOCKHEADER,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.PlainBlockHeader)
  })
_sym_db.RegisterMessage(PlainBlockHeader)

PlainBlock = _reflection.GeneratedProtocolMessageType('PlainBlock', (_message.Message,), {
  'DESCRIPTOR' : _PLAINBLOCK,
  '__module__' : 'qscwallet_pb2'
  # @@protoc_insertion_point(class_scope:qsc.PlainBlock)
  })
_sym_db.RegisterMessage(PlainBlock)

_WALLETAPI = DESCRIPTOR.services_by_name['WalletAPI']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _ADDNEWADDRESSREQ._serialized_start=35
  _ADDNEWADDRESSREQ._serialized_end=92
  _ADDNEWADDRESSRESP._serialized_start=94
  _ADDNEWADDRESSRESP._serialized_end=159
  _ADDNEWADDRESSWITHSLAVESREQ._serialized_start=161
  _ADDNEWADDRESSWITHSLAVESREQ._serialized_end=254
  _ADDADDRESSFROMSEEDREQ._serialized_start=256
  _ADDADDRESSFROMSEEDREQ._serialized_end=293
  _ADDADDRESSFROMSEEDRESP._serialized_start=295
  _ADDADDRESSFROMSEEDRESP._serialized_end=365
  _LISTADDRESSESREQ._serialized_start=367
  _LISTADDRESSESREQ._serialized_end=385
  _LISTADDRESSESRESP._serialized_start=387
  _LISTADDRESSESRESP._serialized_end=454
  _REMOVEADDRESSREQ._serialized_start=456
  _REMOVEADDRESSREQ._serialized_end=491
  _REMOVEADDRESSRESP._serialized_start=493
  _REMOVEADDRESSRESP._serialized_end=541
  _VALIDADDRESSREQ._serialized_start=543
  _VALIDADDRESSREQ._serialized_end=577
  _VALIDADDRESSRESP._serialized_start=579
  _VALIDADDRESSRESP._serialized_end=641
  _ENCRYPTWALLETREQ._serialized_start=643
  _ENCRYPTWALLETREQ._serialized_end=681
  _ENCRYPTWALLETRESP._serialized_start=683
  _ENCRYPTWALLETRESP._serialized_end=731
  _UNLOCKWALLETREQ._serialized_start=733
  _UNLOCKWALLETREQ._serialized_end=770
  _UNLOCKWALLETRESP._serialized_start=772
  _UNLOCKWALLETRESP._serialized_end=819
  _LOCKWALLETREQ._serialized_start=821
  _LOCKWALLETREQ._serialized_end=836
  _LOCKWALLETRESP._serialized_start=838
  _LOCKWALLETRESP._serialized_end=883
  _GETRECOVERYSEEDSREQ._serialized_start=885
  _GETRECOVERYSEEDSREQ._serialized_end=923
  _GETRECOVERYSEEDSRESP._serialized_start=925
  _GETRECOVERYSEEDSRESP._serialized_end=1011
  _GETWALLETINFOREQ._serialized_start=1013
  _GETWALLETINFOREQ._serialized_end=1031
  _GETWALLETINFORESP._serialized_start=1033
  _GETWALLETINFORESP._serialized_end=1143
  _RELAYTRANSFERTXNREQ._serialized_start=1146
  _RELAYTRANSFERTXNREQ._serialized_end=1286
  _RELAYTRANSFERTXNBYSLAVEREQ._serialized_start=1288
  _RELAYTRANSFERTXNBYSLAVEREQ._serialized_end=1392
  _RELAYMESSAGETXNREQ._serialized_start=1394
  _RELAYMESSAGETXNREQ._serialized_end=1511
  _RELAYMESSAGETXNBYSLAVEREQ._serialized_start=1513
  _RELAYMESSAGETXNBYSLAVEREQ._serialized_end=1594
  _RELAYTOKENTXNREQ._serialized_start=1597
  _RELAYTOKENTXNREQ._serialized_end=1794
  _RELAYTOKENTXNBYSLAVEREQ._serialized_start=1797
  _RELAYTOKENTXNBYSLAVEREQ._serialized_end=1958
  _RELAYTRANSFERTOKENTXNREQ._serialized_start=1961
  _RELAYTRANSFERTOKENTXNREQ._serialized_end=2128
  _RELAYTRANSFERTOKENTXNBYSLAVEREQ._serialized_start=2131
  _RELAYTRANSFERTOKENTXNBYSLAVEREQ._serialized_end=2262
  _RELAYSLAVETXNREQ._serialized_start=2265
  _RELAYSLAVETXNREQ._serialized_end=2404
  _RELAYSLAVETXNBYSLAVEREQ._serialized_start=2406
  _RELAYSLAVETXNBYSLAVEREQ._serialized_end=2509
  _RELAYTXNRESP._serialized_start=2511
  _RELAYTXNRESP._serialized_end=2589
  _CHANGEPASSPHRASEREQ._serialized_start=2591
  _CHANGEPASSPHRASEREQ._serialized_end=2658
  _CHANGEPASSPHRASERESP._serialized_start=2660
  _CHANGEPASSPHRASERESP._serialized_end=2711
  _TRANSACTIONSBYADDRESSREQ._serialized_start=2713
  _TRANSACTIONSBYADDRESSREQ._serialized_end=2756
  _TRANSACTIONSBYADDRESSRESP._serialized_start=2758
  _TRANSACTIONSBYADDRESSRESP._serialized_end=2880
  _PAGINATEDTRANSACTIONSBYADDRESSREQ._serialized_start=2882
  _PAGINATEDTRANSACTIONSBYADDRESSREQ._serialized_end=2978
  _PAGINATEDTRANSACTIONSBYADDRESSRESP._serialized_start=2981
  _PAGINATEDTRANSACTIONSBYADDRESSRESP._serialized_end=3112
  _TRANSACTIONREQ._serialized_start=3114
  _TRANSACTIONREQ._serialized_end=3147
  _TRANSACTIONRESP._serialized_start=3150
  _TRANSACTIONRESP._serialized_end=3303
  _BALANCEREQ._serialized_start=3305
  _BALANCEREQ._serialized_end=3334
  _BALANCERESP._serialized_start=3336
  _BALANCERESP._serialized_end=3395
  _TOTALBALANCEREQ._serialized_start=3397
  _TOTALBALANCEREQ._serialized_end=3414
  _TOTALBALANCERESP._serialized_start=3416
  _TOTALBALANCERESP._serialized_end=3480
  _OTSREQ._serialized_start=3482
  _OTSREQ._serialized_end=3507
  _OTSRESP._serialized_start=3510
  _OTSRESP._serialized_end=3665
  _HEIGHTREQ._serialized_start=3667
  _HEIGHTREQ._serialized_end=3678
  _HEIGHTRESP._serialized_start=3680
  _HEIGHTRESP._serialized_end=3737
  _BLOCKREQ._serialized_start=3739
  _BLOCKREQ._serialized_end=3770
  _BLOCKRESP._serialized_start=3772
  _BLOCKRESP._serialized_end=3844
  _BLOCKBYNUMBERREQ._serialized_start=3846
  _BLOCKBYNUMBERREQ._serialized_end=3886
  _ADDRESSFROMPKREQ._serialized_start=3888
  _ADDRESSFROMPKREQ._serialized_end=3918
  _ADDRESSFROMPKRESP._serialized_start=3920
  _ADDRESSFROMPKRESP._serialized_end=3985
  _NODEINFOREQ._serialized_start=3987
  _NODEINFOREQ._serialized_end=4000
  _NODEINFORESP._serialized_start=4003
  _NODEINFORESP._serialized_end=4196
  _PLAINGENESISBALANCE._serialized_start=4198
  _PLAINGENESISBALANCE._serialized_end=4253
  _PLAINADDRESSAMOUNT._serialized_start=4255
  _PLAINADDRESSAMOUNT._serialized_end=4308
  _PLAINTRANSACTION._serialized_start=4311
  _PLAINTRANSACTION._serialized_end=5285
  _PLAINTRANSACTION_TRANSFER._serialized_start=4836
  _PLAINTRANSACTION_TRANSFER._serialized_end=4881
  _PLAINTRANSACTION_COINBASE._serialized_start=4883
  _PLAINTRANSACTION_COINBASE._serialized_end=4926
  _PLAINTRANSACTION_LATTICEPUBLICKEY._serialized_start=4928
  _PLAINTRANSACTION_LATTICEPUBLICKEY._serialized_end=4986
  _PLAINTRANSACTION_MESSAGE._serialized_start=4988
  _PLAINTRANSACTION_MESSAGE._serialized_end=5019
  _PLAINTRANSACTION_TOKEN._serialized_start=5021
  _PLAINTRANSACTION_TOKEN._serialized_end=5142
  _PLAINTRANSACTION_TRANSFERTOKEN._serialized_start=5144
  _PLAINTRANSACTION_TRANSFERTOKEN._serialized_end=5216
  _PLAINTRANSACTION_SLAVE._serialized_start=5218
  _PLAINTRANSACTION_SLAVE._serialized_end=5266
  _PLAINBLOCKHEADER._serialized_start=5288
  _PLAINBLOCKHEADER._serialized_end=5508
  _PLAINBLOCK._serialized_start=5511
  _PLAINBLOCK._serialized_end=5658
  _WALLETAPI._serialized_start=5661
  _WALLETAPI._serialized_end=7800
# @@protoc_insertion_point(module_scope)
